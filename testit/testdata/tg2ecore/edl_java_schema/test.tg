// JGraLab - The Java graph laboratory
//   Version : 7.4.1
//   Codename: Giraffatitan

TGraph 2;
Schema de.uni_koblenz.jgralab.jex.schema.JavaSchema;
GraphClass JavaGraph;
EnumDomain Modifiers (ABSTRACT, FINAL, NATIVE, PRIVATE, PROTECTED, PUBLIC, STATIC, STRICTFP, SYNCHRONIZED, TRANSIENT, VOLATILE);
EnumDomain PrimitiveTypes (BOOLEAN, BYTE, CHAR, DOUBLE, FLOAT, INT, LONG, SHORT, VOID);
abstract VertexClass AbstractClassifier: Member, Type, ModifiableElement, TypeParametrizable;
VertexClass Annotation: Classifier;
VertexClass AnnotationElement: Member, TypedElement;
VertexClass ArrayType: Type { dimensions: Integer };
VertexClass Class: Classifier;
abstract VertexClass Classifier: AbstractClassifier;
VertexClass Constructor: MethodLike;
VertexClass Enum: Classifier;
VertexClass EnumConst: Member;
VertexClass Field: Member, TypedElement;
VertexClass Interface: Classifier;
abstract VertexClass Member: NamedElement;
VertexClass Method: MethodLike, TypedElement;
abstract VertexClass MethodLike: Member, ModifiableElement, TypeParametrizable;
abstract VertexClass ModifiableElement { modifiers: Set<Modifiers> };
abstract VertexClass NamedElement { name: String };
VertexClass Package: QualifiedNamedElement;
VertexClass Parameter: NamedElement, TypedElement;
VertexClass ParametrizedType: AbstractClassifier;
VertexClass PrimitiveType: Type { type: PrimitiveTypes };
abstract VertexClass QualifiedNamedElement: NamedElement { qualifiedName: String };
VertexClass SourceFile { lines: Integer, path: String };
abstract VertexClass Type: QualifiedNamedElement;
VertexClass TypeParameter: AbstractClassifier;
abstract VertexClass TypeParametrizable;
abstract VertexClass TypedElement: ModifiableElement;
VertexClass WildcardType: Type;
EdgeClass ContainsClassifier from Package (1,1) to AbstractClassifier (0,*) role types aggregation composite;
EdgeClass ContainsPackage from Package (0,1) to Package (0,*) role subPackages aggregation composite;
abstract EdgeClass Declares from AbstractClassifier (0,1) role parent to Member (0,*) role members aggregation composite;
EdgeClass DeclaresAnnotationElement: Declares from Annotation (1,1) to AnnotationElement (0,*) role annotationElements aggregation composite;
EdgeClass DeclaresConstructor: Declares from AbstractClassifier (1,1) to Constructor (0,*) role constructors aggregation composite;
EdgeClass DeclaresEnumConst: Declares from Enum (1,1) to EnumConst (0,*) role enumConsts aggregation composite;
EdgeClass DeclaresField: Declares from AbstractClassifier (1,1) to Field (0,*) role fields aggregation composite;
EdgeClass DeclaresMethod: Declares from AbstractClassifier (1,1) to Method (0,*) role methods aggregation composite;
EdgeClass DeclaresNestedClassifier: Declares from AbstractClassifier (1,1) to AbstractClassifier (0,*) role nestedClassifiers aggregation composite;
EdgeClass Defines from SourceFile (0,1) role sourceFile to AbstractClassifier (0,*) role classifiers { lineNo: Integer };
EdgeClass Extends from Classifier (0,*) role subclasses to AbstractClassifier (1,1) role superclass;
EdgeClass HasBound from TypeParameter (0,1) to Type (0,*) role bounds;
EdgeClass HasElementType from ArrayType (0,*) role arrayType to Type (1,1) role elementType;
EdgeClass HasGenericType from ParametrizedType (0,*) to Classifier (1,1) role genericType;
EdgeClass HasLowerBound from WildcardType (0,*) to Type (0,1) role lowerBound;
EdgeClass HasParam from MethodLike (1,1) role method to Parameter (0,*) role params aggregation composite;
EdgeClass HasType from TypedElement (0,*) to Type (1,1) role type;
EdgeClass HasTypeArg from ParametrizedType (0,*) to Type (1,*) role typeArgs;
EdgeClass HasTypeParam from TypeParametrizable (1,1) to TypeParameter (0,*) role typeParams aggregation composite;
EdgeClass HasUpperBound from WildcardType (0,*) to Type (0,1) role upperBound;
EdgeClass Implements from Classifier (0,*) role implementors to AbstractClassifier (0,*) role interfaces;
EdgeClass Imports from SourceFile (0,*) role importers to NamedElement (0,*) role imports { lineNo: Integer };
EdgeClass Throws from MethodLike (0,*) to Type (0,*) role exceptions;
Graph "3a9ad78b-d03030a4-e9458f86-68a1b8e8" 46336 JavaGraph (12800 25600 7844 18417);
Package ;
1 Package <1> "" "";
2 PrimitiveType <-91 -120 -149 -178 -193 -222 -251 -280 -309 -338 -367 -382 -532 -561 -590 -619 -648 -663 -692 -721 -750 -779 -794 -823 -852 -881 -896 -959 -988 -1003 -1055 -1084 -1099 -1162 -1191 -1220 -1249 -1264 -1293 -1322 -1351 -1380 -1395 -1424 -1453 -1482 -1497 -1567 -1596 -1625 -1654 -1669 -1698 -1727 -1756 -1785 -1800 -1829 -1858 -1887 -1902 -1986 -2015 -2044 -2073 -2102 -2416 -2445 -2474 -2503 -2518 -2547 -2576 -2605 -2634 -2649 -2678 -2707 -2736 -2751 -2780 -2838 -2867 -2936 -2965 -2980 -3255 -3284 -3313 -3342 -3357 -3386 -3415 -3444 -3473 -3488 -3517 -3546 -3575 -3590 -4395 -4423 -4452 -4505 -4534 -4563 -4592 -4621 -4636 -4692 -4721 -4750 -4779 -4808 -4897 -4961 -4990 -5019 -5090 -5105 -5134 -5194 -5223 -5252 -5281 -5296 -5325 -5354 -5383 -5412 -5441 -5456 -5485 -5514 -5529 -5598 -5627 -5687 -5748 -5777 -5901 -5930 -6064 -6093 -6122 -6151 -6166 -6195 -6224 -6253 -6282 -6311 -6340 -6369 -6384 -6447 -6503 -6555 -6584 -6599 -6628 -6783 -6812 -6827 -7111 -7140 -7169 -7198 -7227 -7242 -7271 -7300 -7329 -7358 -7373 -7402 -7431 -7460 -7475 -7845 -7874 -7889 -8221 -8250 -8279 -8308 -8323 -8352 -8381 -8410 -8439 -8454 -8483 -8512 -8541 -8556 -8906 -8935 -8964 -8993 -9022 -10033 -10062 -10336 -10365 -10394 -10423 -10438 -10467 -10496 -10525 -10554 -10569 -10598 -10627 -10656 -10671 -10700 -11134 -11163 -11178 -12421 -12450 -12479 -12508 -12523 -12552 -12581 -12610 -12639 -12654 -12683 -12712 -12741 -12756 -14120 -14149 -14178 -14207 -14236 -14251 -14437 -14466 -14495 -14664 -14679 -14708 -14974 -15003 -15032 -15061 -15076 -15105 -15134 -15163 -15192 -15221 -15236 -15265 -15294 -15309 -15669 -15698 -17215 -17244 -17595 -17624 -17653 -17682 -17697 -17726 -17755 -17784 -17813 -17842 -17871 -17900 -17915 -18257 -18286 -18301 -18330> "boolean" "boolean" BOOLEAN;
3 PrimitiveType <> "char" "char" CHAR;
4 PrimitiveType <> "byte" "byte" BYTE;
5 PrimitiveType <> "short" "short" SHORT;
6 PrimitiveType <-1026 -1030 -2358 -2362 -3204 -3208 -4333 -4335 -4347 -4349 -5713 -5717 -6677 -6895 -7708 -7715 -7738 -7742 -8011 -8786 -9104 -9190 -9278 -9374 -9470 -9566 -9662 -9757 -9851 -9854 -9881 -9885 -9947 -10120 -10936 -11028 -11240 -11327 -11414 -11501 -11588 -11675 -11762 -11849 -11936 -12023 -12109 -12112 -12139 -12143 -12211 -12988 -12990 -12995 -12997 -13053 -13061 -13069 -13077 -13087 -13099 -13115 -13133 -13149 -13165 -13181 -13197 -13213 -13229 -13241 -13249 -13261 -13273 -13285 -13301 -13317 -13333 -13349 -13365 -13381 -13397 -13413 -13429 -13445 -13457 -13467 -13481 -13489 -13497 -13505 -13515 -13527 -13541 -13553 -13992 -14345 -14566 -14766 -15539 -16327 -16331 -17017 -17021 -17128 -17133 -17156 -17160 -17300 -17393 -18133> "int" "int" INT;
7 PrimitiveType <> "long" "long" LONG;
8 PrimitiveType <> "float" "float" FLOAT;
9 PrimitiveType <> "double" "double" DOUBLE;
10 PrimitiveType <-1028 -2360 -3206 -4843 -4876 -5577 -5670 -5715 -5721 -6694 -6704 -6712 -6716 -6721 -6728 -6912 -6922 -6930 -6936 -6940 -6945 -6952 -7732 -7740 -7746 -7752 -7756 -7761 -7768 -8028 -8038 -8046 -8052 -8056 -8061 -8068 -8803 -8813 -8821 -8825 -8830 -8837 -9125 -9131 -9136 -9143 -9211 -9217 -9222 -9229 -9299 -9305 -9310 -9317 -9395 -9401 -9406 -9413 -9491 -9497 -9502 -9509 -9587 -9593 -9598 -9605 -9683 -9689 -9694 -9701 -9778 -9784 -9789 -9796 -9875 -9883 -9887 -9892 -9899 -9964 -9972 -9976 -9981 -9988 -10137 -10147 -10155 -10161 -10165 -10170 -10177 -10957 -10963 -10968 -10975 -11045 -11055 -11063 -11067 -11072 -11079 -11261 -11267 -11272 -11279 -11348 -11354 -11359 -11366 -11435 -11441 -11446 -11453 -11522 -11528 -11533 -11540 -11609 -11615 -11620 -11627 -11696 -11702 -11707 -11714 -11783 -11789 -11794 -11801 -11870 -11876 -11881 -11888 -11957 -11963 -11968 -11975 -12044 -12050 -12055 -12062 -12133 -12141 -12145 -12150 -12157 -12228 -12238 -12246 -12252 -12256 -12261 -12268 -13015 -13021 -13026 -13033 -14009 -14019 -14027 -14031 -14036 -14043 -14362 -14370 -14376 -14380 -14385 -14392 -14583 -14593 -14601 -14605 -14610 -14617 -14783 -14793 -14801 -14807 -14811 -14816 -14823 -15556 -15564 -15570 -15576 -15580 -15585 -15592 -15819 -15824 -15831 -15875 -15880 -15887 -15933 -15938 -15945 -15999 -16004 -16011 -16065 -16070 -16077 -16131 -16136 -16143 -16197 -16202 -16209 -16262 -16267 -16274 -16329 -16333 -16338 -16345 -16390 -16395 -16402 -16447 -16452 -16459 -16504 -16509 -16516 -16561 -16566 -16573 -16618 -16623 -16630 -16675 -16680 -16687 -16732 -16737 -16744 -16789 -16794 -16801 -16846 -16851 -16858 -16903 -16908 -16915 -16960 -16965 -16972 -17019 -17023 -17028 -17035 -17080 -17085 -17092 -17150 -17158 -17164 -17168 -17173 -17180 -17321 -17327 -17332 -17339 -17410 -17420 -17428 -17434 -17438 -17443 -17450 -18150 -18158 -18164 -18168 -18173 -18180> "void" "void" VOID;
11 SourceFile <6 492> 592 "src/de/uni_koblenz/jgralab/jex/schema/AbstractClassifier.java";
12 Package <-1 2> "de" "de";
13 Package <-2 3> "uni_koblenz" "de.uni_koblenz";
14 Package <-3 4> "jgralab" "de.uni_koblenz.jgralab";
15 Package <-4 5> "jex" "de.uni_koblenz.jgralab.jex";
16 Package <-5 493 927 1020 1130 1518 1953 2119 2139 2158 2178 2207 2236 2265 2294 2323 2351 2377 2811 2884 2904 2997 3017 3037 3057 3077 3097 3117 3137 3157 3177 3197 3223 3611 4298 4302 4398 4469 4653 4835 4852 4869 4928 5060 5151 5570 5648 5663 5708 5818 5838 6021 6425 6478 6520 6655 6656> "schema" "de.uni_koblenz.jgralab.jex.schema";
17 Enum <-6 -32 -38 -44 -50 -56 -62 -68 -74 -80 -410 -420 -430 -440 -450 -460 -470 -480 -490 -494 -521 -924 -928 -948 -1017 -1021 -1044 -1127 -1519 -1544 -1550 -1556 -1930 -1940 -1950 -1954 -1975 -2116 -2120 -2132 -2140 -2151 -2159 -2171 -2179 -2194 -2200 -2208 -2223 -2229 -2237 -2252 -2258 -2266 -2281 -2287 -2295 -2310 -2316 -2324 -2338 -2344 -2352 -2370 -2378 -2405 -2808 -2812 -2827 -2881 -2885 -2897 -2905 -2925 -2994 -2998 -3010 -3018 -3030 -3038 -3050 -3058 -3070 -3078 -3090 -3098 -3110 -3118 -3130 -3138 -3150 -3158 -3170 -3178 -3190 -3198 -3216 -4399 -4412 -4466 -4470 -4494 -4650 -4654 -4675 -4681 -4822 -4832 -4870 -4886 -4925 -4929 -4944 -4950 -5047 -5057 -5061 -5079 -5148 -5152 -5177 -5183 -5557 -5567 -5709 -5731 -5737 -5805 -5815 -5819 -5831 -5839 -5854 -5860 -5866 -5872 -5878 -5884 -5890 -5958 -5968 -5978 -5988 -5998 -6008 -6018 -6022 -6047 -6053 -6412 -6422 -6426 -6436 -6475 -6479 -6492 -6517 -6521 -6538 -6544 -6642 -6652 -6660 -6754 -6760 -6766 -6772 -6841 -6851 -6861 -6871 -6877 -6986 -6992 -6998 -7004 -7010 -7016 -7022 -7028 -7034 -7040 -7046 -7052 -7058 -7064 -7070 -7076 -7082 -7088 -7094 -7100 -7503 -7513 -7523 -7533 -7543 -7553 -7563 -7573 -7583 -7593 -7603 -7613 -7623 -7633 -7643 -7653 -7663 -7673 -7683 -7693 -7699 -7792 -7798 -7804 -7810 -7816 -7822 -7828 -7834 -7917 -7927 -7937 -7947 -7957 -7967 -7977 -7987 -7993 -8102 -8108 -8114 -8120 -8126 -8132 -8138 -8144 -8150 -8156 -8162 -8168 -8174 -8180 -8186 -8192 -8198 -8204 -8210 -8584 -8594 -8604 -8614 -8624 -8634 -8644 -8654 -8664 -8674 -8684 -8694 -8704 -8714 -8724 -8734 -8744 -8754 -8764 -8770 -8865 -8871 -8877 -8883 -8889 -8895 -9036 -9046 -9056 -9066 -9076 -9086 -9091 -9161 -9178 -9247 -9264 -9337 -9343 -9360 -9433 -9439 -9456 -9529 -9535 -9552 -9625 -9631 -9648 -9721 -9727 -9744 -9816 -9822 -9839 -9917 -9935 -10010 -10016 -10022 -10076 -10086 -10096 -10102 -10211 -10217 -10223 -10229 -10235 -10241 -10247 -10253 -10259 -10265 -10271 -10277 -10283 -10289 -10295 -10301 -10307 -10313 -10319 -10325 -10728 -10738 -10748 -10758 -10768 -10778 -10788 -10798 -10808 -10818 -10828 -10838 -10848 -10858 -10868 -10878 -10888 -10898 -10908 -10918 -10923 -10993 -11011 -11105 -11111 -11117 -11123 -11192 -11202 -11212 -11222 -11227 -11297 -11314 -11384 -11401 -11471 -11488 -11558 -11575 -11645 -11662 -11732 -11749 -11819 -11836 -11906 -11923 -11993 -12010 -12080 -12097 -12175 -12193 -12302 -12308 -12314 -12320 -12326 -12332 -12338 -12344 -12350 -12356 -12362 -12368 -12374 -12380 -12386 -12392 -12398 -12404 -12410 -12784 -12794 -12804 -12814 -12824 -12834 -12844 -12854 -12864 -12874 -12884 -12894 -12904 -12914 -12924 -12934 -12944 -12954 -12964 -13975 -14073 -14079 -14085 -14091 -14097 -14103 -14109 -14265 -14275 -14285 -14295 -14305 -14315 -14325 -14331 -14414 -14420 -14426 -14523 -14533 -14543 -14549 -14641 -14647 -14653 -14722 -14732 -14742 -14748 -14855 -14861 -14867 -14873 -14879 -14885 -14891 -14897 -14903 -14909 -14915 -14921 -14927 -14933 -14939 -14945 -14951 -14957 -14963 -15337 -15347 -15357 -15367 -15377 -15387 -15397 -15407 -15417 -15427 -15437 -15447 -15457 -15467 -15477 -15487 -15497 -15507 -15517 -15523 -15616 -15622 -15628 -15634 -15640 -15646 -15652 -15658 -15726 -15736 -15746 -15756 -15766 -15776 -15786 -15796 -15802 -15849 -15859 -15905 -15915 -15965 -15971 -15981 -16031 -16037 -16047 -16097 -16103 -16113 -16163 -16169 -16179 -16229 -16235 -16245 -16294 -16300 -16310 -16363 -16373 -16420 -16430 -16477 -16487 -16534 -16544 -16591 -16601 -16648 -16658 -16705 -16715 -16762 -16772 -16819 -16829 -16876 -16886 -16933 -16943 -16990 -17000 -17053 -17063 -17110 -17120 -17198 -17204 -17272 -17282 -17287 -17357 -17375 -17482 -17488 -17494 -17500 -17506 -17512 -17518 -17524 -17530 -17536 -17542 -17548 -17554 -17560 -17566 -17572 -17578 -17584 -17943 -17953 -17963 -17973 -17983 -17993 -18003 -18013 -18023 -18033 -18043 -18053 -18063 -18073 -18083 -18093 -18103 -18113 -18119 -18204 -18210 -18216 -18222 -18228 -18234 -18240 -18246 -18344 -18354 -18364 -18374 -18384 -18394 -18404 -18414> {FINAL} "EdgeDirection" "de.uni_koblenz.jgralab.EdgeDirection";
18 Interface <7 8 9 10 11 13 -14 15 17 19 21 23 25 27 29 31 35 37 41 43 47 49 53 55 59 61 65 67 71 73 77 79 83 90 92 100 106 112 119 121 129 135 141 148 150 158 164 170 177 179 183 185 192 194 202 208 214 -215 -217 221 223 -224 -226 231 -232 237 243 250 252 260 266 272 279 281 289 295 301 308 310 318 324 330 337 339 347 353 359 -360 -362 366 368 -369 -371 372 374 381 383 391 397 405 409 415 419 425 429 435 439 445 449 455 459 465 469 475 479 485 489 -492 -493 -499 -714 -716 -723 -725 -731 -743 -745 -752 -754 -760 -772 -774 -781 -783 -874 -876 -883 -885 -981 -983 -990 -992 -1135 -1315 -1317 -1324 -1326 -1332 -1344 -1346 -1353 -1355 -1361 -1373 -1375 -1382 -1384 -1475 -1477 -1484 -1486 -1520 -1524 -1720 -1722 -1729 -1731 -1737 -1749 -1751 -1758 -1760 -1766 -1778 -1780 -1787 -1789 -1880 -1882 -1889 -1891 -2095 -2097 -2104 -2106 -2121 -2136 -2160 -2173 -2209 -2231 -2267 -2289 -2296 -2318 -2325 -2346 -2348 -2353 -2374 -2383 -2569 -2571 -2578 -2580 -2586 -2598 -2600 -2607 -2609 -2615 -2627 -2629 -2636 -2638 -2729 -2731 -2738 -2740 -2860 -2862 -2869 -2871 -2886 -2901 -2958 -2960 -2967 -2969 -3179 -3194 -3228 -3408 -3410 -3417 -3419 -3425 -3437 -3439 -3446 -3448 -3454 -3466 -3468 -3475 -3477 -3568 -3570 -3577 -3579 -3615 -3645 -3669 -3685 -3693 -3701 -3703 -3711 -3727 -3811 -4262 -4266 -4270 -4445 -4447 -4454 -4456 -4614 -4616 -4623 -4625 -4801 -4803 -4810 -4812 -4983 -4985 -4992 -4994 -5000 -5153 -5157 -5318 -5320 -5327 -5329 -5335 -5507 -5509 -5516 -5518 -5770 -5772 -5779 -5781 -5787 -6023 -6027 -6188 -6190 -6197 -6199 -6205 -6362 -6364 -6371 -6373 -6805 -6807 -6814 -6816 -6964 -7293 -7295 -7302 -7304 -7310 -7322 -7324 -7331 -7333 -7339 -7351 -7353 -7360 -7362 -7453 -7455 -7462 -7464 -8080 -8374 -8376 -8383 -8385 -8391 -8403 -8405 -8412 -8414 -8420 -8432 -8434 -8441 -8443 -8534 -8536 -8543 -8545 -9015 -9017 -9024 -9026 -9097 -9173 -9366 -9449 -9558 -9641 -9654 -9737 -9750 -9832 -9834 -9845 -9929 -10055 -10057 -10064 -10066 -10189 -10489 -10491 -10498 -10500 -10506 -10518 -10520 -10527 -10529 -10535 -10547 -10549 -10556 -10558 -10649 -10651 -10658 -10660 -10929 -11005 -11156 -11158 -11165 -11167 -12016 -12092 -12280 -12574 -12576 -12583 -12585 -12591 -12603 -12605 -12612 -12614 -12620 -12632 -12634 -12641 -12643 -12734 -12736 -12743 -12745 -13045 -13095 -13103 -13143 -13151 -13175 -13183 -13191 -13199 -13207 -13209 -13215 -13217 -13225 -13233 -13257 -13265 -13425 -13433 -13936 -13940 -13944 -14229 -14231 -14238 -14240 -14459 -14461 -14468 -14470 -14476 -14754 -14835 -15098 -15100 -15107 -15109 -15115 -15287 -15289 -15296 -15298 -15806 -15853 -15985 -16039 -16117 -16171 -16183 -16237 -16249 -16302 -16304 -16314 -16367 -16377 -16424 -16947 -16994 -17237 -17239 -17246 -17248 -17254 -17381 -17462 -17719 -17721 -17728 -17730 -17736 -17893 -17895 -17902 -17904> {PUBLIC} "AbstractClassifier" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
19 Interface <-7 -16 -186 -188 -195 -197 -203 -505 -656 -658 -665 -667 -673 -929 -936 -1141 -1257 -1259 -1266 -1268 -1274 -1528 -1662 -1664 -1671 -1673 -1679 -1961 -2161 -2175 -2389 -2511 -2513 -2520 -2522 -2528 -2813 -2819 -2906 -2913 -3234 -3350 -3352 -3359 -3361 -3367 -3825 -4190 -4194 -4198 4400 4401 4403 -4404 4405 4407 4409 4411 4415 4422 4424 4432 4438 4444 4451 4453 4457 4461 4465 -4468 -4469 -4476 -4655 -4661 -5159 -5289 -5291 -5298 -5300 -5306 -6029 -6159 -6161 -6168 -6170 -6176 -6667 -6742 -6970 -7235 -7237 -7244 -7246 -7252 -8086 -8316 -8318 -8325 -8327 -8333 -8851 -9942 -10002 -10195 -10431 -10433 -10440 -10442 -10448 -11018 -11093 -12286 -12516 -12518 -12525 -12527 -12533 -13459 -13864 -13868 -13872 -14055 -14837 -15069 -15071 -15078 -15080 -15086 -17464 -17690 -17692 -17699 -17701 -17707> {PUBLIC} "Member" "de.uni_koblenz.jgralab.jex.schema.Member";
20 Interface <-8 -18 -507 -938 -1143 -1530 -1965 -2391 -2915 -3236 -3833 -4238 -4242 -4246 -4482 -4656 -4665 4836 4838 4842 4844 -4849 4850 -4851 -4852 -5067 -5161 -6031 -6480 -6484 -6744 -6972 -8088 -8855 -10197 -11095 -12288 -13471 -13912 -13916 -13920 -14061 -14629 -14839 -17466> {PUBLIC} "ModifiableElement" "de.uni_koblenz.jgralab.jex.schema.ModifiableElement";
21 Interface <-9 -24 -513 -996 -998 -1005 -1007 -1022 -1038 -1077 -1079 -1086 -1088 -1149 -1536 -2008 -2010 -2017 -2019 -2025 -2397 -2973 -2975 -2982 -2984 -2999 -3014 -3020 -3034 -3059 -3074 -3099 -3114 -3120 -3134 -3159 -3174 -3242 -3739 -3747 -3763 -3779 -3787 -3803 -3865 -3867 -3974 -3978 -3982 -4527 -4529 -4536 -4538 -4544 -4629 -4631 -4638 -4640 -4714 -4716 -4723 -4725 -4731 -5127 -5129 -5136 -5138 -5169 -5449 -5451 -5458 -5460 -5466 -5571 -5587 -5821 -5835 5840 5841 5843 5845 5847 -5848 5849 5851 5853 5857 5859 5863 5865 5869 5871 5875 5877 5881 5883 5887 5889 5893 5900 5902 5910 5916 5922 5929 5931 5939 5945 5953 5957 5963 5967 5973 5977 5983 5987 5993 5997 6003 6007 6013 6017 -6020 -6021 -6037 -6333 -6335 -6342 -6344 -6350 -6496 -6498 -6505 -6507 -6522 -6530 -6577 -6579 -6586 -6588 -6621 -6623 -6630 -6632 -6820 -6822 -6829 -6831 -6978 -7706 -7786 -7867 -7869 -7876 -7878 -8094 -8928 -8930 -8937 -8939 -8945 -10203 -11171 -11173 -11180 -11182 -11233 -11309 -11321 -11396 -11494 -11570 -11669 -11744 -11755 -11831 -11929 -12005 -12294 -13281 -13289 -13297 -13305 -13329 -13337 -13361 -13369 -13377 -13385 -13409 -13417 -13523 -13531 -13533 -13648 -13652 -13656 -14142 -14144 -14151 -14153 -14159 -14244 -14246 -14253 -14255 -14701 -14703 -14710 -14712 -14847 -15229 -15231 -15238 -15240 -15246 -15530 -15610 -16434 -16481 -16492 -16538 -16605 -16652 -16720 -16766 -16776 -16823 -16890 -16937 -17068 -17114 -17294 -17369 -17472 -17864 -17866 -17873 -17875 -17881 -18125 -18196 -18279 -18281 -18288 -18290 -18323 -18325 -18332 -18334> {PUBLIC} "Type" "de.uni_koblenz.jgralab.jex.schema.Type";
22 Interface <-10 -26 -515 -1151 -1538 -1969 -2399 -3140 -3152 -3244 -3793 -3873 -4286 -4290 -4294 -4486 -4657 -4669 -5171 -6041 6427 6429 -6430 6431 6433 6435 6439 6446 6448 6456 6462 6470 6474 -6477 -6478 -6980 -8096 -8859 -10205 -11843 -11916 -12296 -13391 -13399 -13543 -13960 -13964 -13968 -14065 -14849 -16834 -16878 -17476> {PUBLIC} "TypeParametrizable" "de.uni_koblenz.jgralab.jex.schema.TypeParametrizable";
23 Interface <-11 -496 -931 -1023 -1132 -1521 -1956 -2380 -2814 -2908 -3225 -4401 -4473 -4658 -4836 -4871 -4931 -5064 -5154 -5572 -5665 -5710 -5841 -6024 -6427 -6481 -6523 -6669 -6683 -6885 -6901 -7707 -7721 -8001 -8017 -8778 -8792 -9093 -9108 -9110 -9180 -9194 -9196 -9266 -9282 -9284 -9362 -9378 -9380 -9458 -9474 -9476 -9554 -9570 -9572 -9650 -9666 -9668 -9746 -9761 -9763 -9841 -9858 -9860 -9943 -9953 -10110 -10126 -10925 -10940 -10942 -11020 -11034 -11229 -11244 -11246 -11316 -11331 -11333 -11403 -11418 -11420 -11490 -11505 -11507 -11577 -11592 -11594 -11664 -11679 -11681 -11751 -11766 -11768 -11838 -11853 -11855 -11925 -11940 -11942 -12012 -12027 -12029 -12099 -12116 -12118 -12201 -12217 -13984 -13998 -14339 -14351 -14558 -14572 -14756 -14772 -15531 -15545 -17127 -17139 -17289 -17304 -17306 -17383 -17399 -18126 -18139> {PUBLIC} "Vertex" "de.uni_koblenz.jgralab.Vertex";
24 Interface <-12 -497 -932 -1024 -1133 -1522 -1957 -2381 -2815 -2909 -3226 -4309 -4402 -4474 -4659 -4837 -4872 -4932 -5065 -5155 -5573 -5666 -5711 -5842 -6025 -6428 -6482 -6524 -6681 -6899 -7719 -8015 -8790 -9951 -10124 -11032 -12215 -13996 -14349 -14570 -14770 -15543 -17137 -17397 -18137> {PUBLIC} "VertexClass" "de.uni_koblenz.jgralab.schema.VertexClass";
25 Field <12 -13> {PUBLIC FINAL STATIC} "VC";
26 Method <14 -15> {PUBLIC} "getNextAbstractClassifier";
27 Method <16 -17> {PUBLIC} "getNextMember";
28 Method <18 -19> {PUBLIC} "getNextModifiableElement";
29 Method <20 -21> {PUBLIC} "getNextNamedElement";
30 Interface <-20 -509 -940 -1034 -1145 -1532 -1967 -2393 -2821 -2917 -3199 -3220 -3238 -3819 -3835 -4082 -4086 -4090 -4400 -4406 -4484 -4667 4871 4873 4875 4877 -4880 4881 4883 4885 4889 4896 4898 4906 4912 4920 4924 -4927 -4928 -4934 -5062 -5069 -5163 -5581 -5664 -5674 -5741 -5743 -5750 -5752 -5758 -5844 -6033 -6526 -6746 -6974 -7782 -8090 -8857 -10004 -10199 -11097 -12103 -12187 -12290 -13441 -13449 -13473 -13756 -13760 -13764 -14063 -14404 -14555 -14631 -14841 -15604 -17004 -17057 -17208 -17210 -17217 -17219 -17225 -17468 -18192> {PUBLIC} "NamedElement" "de.uni_koblenz.jgralab.jex.schema.NamedElement";
31 Method <22 -23> {PUBLIC} "getNextQualifiedNamedElement";
32 Interface <-22 -511 -1036 -1147 -1534 -2395 -3240 -3853 -4010 -4014 -4018 -4930 -4938 -5167 -5585 5664 5665 5667 5669 5671 5675 -5676 5677 5679 5686 5688 5696 5702 -5707 -5708 -5840 -5846 -6035 -6528 -6976 -7784 -8092 -10201 -12292 -13507 -13684 -13688 -13692 -14338 -14408 -14845 -15608 -17470 -18194> {PUBLIC} "QualifiedNamedElement" "de.uni_koblenz.jgralab.jex.schema.QualifiedNamedElement";
33 Method <24 -25> {PUBLIC} "getNextType";
34 Method <26 -27> {PUBLIC} "getNextTypeParametrizable";
35 Method <28 -29> {PUBLIC} "getFirstDeclaresConstructorIncidence";
36 Interface <-28 -30 -82 -403 -407 -523 -1153 -1558 -1971 -1973 -2109 -2113 2211 2212 2214 2216 -2217 2218 2220 2222 -2225 2226 -2227 2228 2232 2234 -2235 -2236 -2407 -3246 -3665 -3667 -3958 -5185 -6055 -7048 -7050 -7102 -7606 -7610 -8164 -8166 -8212 -8687 -8691 -8861 -8863 -9029 -9033 -9371 -9427 -9435 -9437 -10279 -10281 -10327 -10841 -10845 -12364 -12366 -12412 -12887 -12891 -13139 -13141 -13147 -13632 -14917 -14919 -14965 -15440 -15444 -15990 -16025 -16033 -16035 -17544 -17546 -17586 -18046 -18050> {PUBLIC} "DeclaresConstructor" "de.uni_koblenz.jgralab.jex.schema.DeclaresConstructor";
37 Method <30 -31 33> {PUBLIC} "getFirstDeclaresConstructorIncidence";
38 Parameter <32 -33> {} "orientation";
39 Method <34 -35> {PUBLIC} "getFirstExtendsIncidence";
40 Interface <-34 -36 -242 -413 -417 -683 -770 -1284 -1371 -1546 -1548 -1689 -1776 -1933 -1937 -2538 -2625 2888 2890 -2891 2892 -2893 2894 -2895 2896 2900 2902 -2903 -2904 -3377 -3464 -3721 -3723 -3910 -5345 -6215 -7060 -7062 -7262 -7349 -7626 -7630 -8176 -8178 -8343 -8430 -8707 -8711 -10291 -10293 -10458 -10545 -10861 -10865 -10934 -10987 -10989 -10991 -12376 -12378 -12543 -12630 -12907 -12911 -13251 -13253 -13259 -13584 -14923 -14925 -15125 -15450 -15454 -16382 -16414 -16416 -16418 -17550 -17552 -17746 -18056 -18060> {PUBLIC} "Extends" "de.uni_koblenz.jgralab.jex.schema.Extends";
41 Method <36 -37 39> {PUBLIC} "getFirstExtendsIncidence";
42 Parameter <38 -39> {} "orientation";
43 Method <40 -41> {PUBLIC} "getFirstDefinesIncidence";
44 Interface <-40 -42 -169 -423 -427 -639 -1240 -1645 2355 2357 2359 2361 -2364 2365 -2366 2367 -2368 2369 2373 2375 -2376 -2377 -2494 -3333 -3705 -3707 -3898 -5272 -5727 -5729 -5768 -5798 -5802 -6142 -6982 -6984 -7218 -7496 -7500 -8098 -8100 -8299 -8577 -8581 -9849 -9911 -9913 -9915 -10207 -10209 -10414 -10721 -10725 -12298 -12300 -12499 -12777 -12781 -13219 -13221 -13227 -13572 -14851 -14853 -15052 -15330 -15334 -16318 -16357 -16359 -16361 -17194 -17196 -17235 -17265 -17269 -17478 -17480 -17673 -17936 -17940> {PUBLIC} "Defines" "de.uni_koblenz.jgralab.jex.schema.Defines";
45 Method <42 -43 45> {PUBLIC} "getFirstDefinesIncidence";
46 Parameter <44 -45> {} "orientation";
47 Method <46 -47> {PUBLIC} "getFirstImplementsIncidence";
48 Interface <-46 -48 -300 -433 -437 -712 -814 -1313 -1415 -1552 -1554 -1718 -1820 -1943 -1947 -2567 -2669 3181 3183 -3184 3185 -3186 3187 -3188 3189 3193 3195 -3196 -3197 -3406 -3508 -3805 -3807 -3914 -5403 -6273 -7066 -7068 -7291 -7393 -7636 -7640 -8182 -8184 -8372 -8474 -8717 -8721 -10297 -10299 -10487 -10589 -10871 -10875 -12021 -12074 -12076 -12078 -12382 -12384 -12572 -12674 -12917 -12921 -13419 -13421 -13427 -13588 -14935 -14937 -15183 -15470 -15474 -16952 -16984 -16986 -16988 -17556 -17558 -17804 -18066 -18070> {PUBLIC} "Implements" "de.uni_koblenz.jgralab.jex.schema.Implements";
49 Method <48 -49 51> {PUBLIC} "getFirstImplementsIncidence";
50 Parameter <50 -51> {} "orientation";
51 Method <52 -53> {PUBLIC} "getFirstContainsClassifierIncidence";
52 Interface <-52 -54 -443 -447 2123 2125 -2126 2127 -2128 2129 -2130 2131 2135 2137 -2138 -2139 -3639 -3641 -3894 -4946 -4948 -4981 -5050 -5054 -6994 -6996 -7516 -7520 -8110 -8112 -8597 -8601 -9101 -9155 -9157 -9159 -10219 -10221 -10741 -10745 -12310 -12312 -12797 -12801 -13089 -13091 -13097 -13568 -14416 -14418 -14457 -14526 -14530 -14863 -14865 -15350 -15354 -15810 -15843 -15845 -15847 -17490 -17492 -17956 -17960> {PUBLIC} "ContainsClassifier" "de.uni_koblenz.jgralab.jex.schema.ContainsClassifier";
53 Method <54 -55 57> {PUBLIC} "getFirstContainsClassifierIncidence";
54 Parameter <56 -57> {} "orientation";
55 Method <58 -59> {PUBLIC} "getFirstDeclaresNestedClassifierIncidence";
56 Interface <-58 -60 -213 -453 -457 -741 -1342 -1747 2326 2327 2329 2331 -2332 2333 2335 2337 -2340 2341 -2342 2343 2347 2349 -2350 -2351 -2596 -3435 -3697 -3699 -3970 -5316 -6186 -7078 -7080 -7320 -7656 -7660 -8194 -8196 -8401 -8737 -8741 -9754 -9810 -9818 -9820 -10309 -10311 -10516 -10891 -10895 -12394 -12396 -12601 -12937 -12941 -13203 -13205 -13211 -13644 -14947 -14949 -15096 -15490 -15494 -16253 -16288 -16296 -16298 -17568 -17570 -17717 -18086 -18090> {PUBLIC} "DeclaresNestedClassifier" "de.uni_koblenz.jgralab.jex.schema.DeclaresNestedClassifier";
57 Method <60 -61 63> {PUBLIC} "getFirstDeclaresNestedClassifierIncidence";
58 Parameter <62 -63> {} "orientation";
59 Method <64 -65> {PUBLIC} "getFirstDeclaresFieldIncidence";
60 Interface <-64 -66 -140 -463 -467 -610 -1211 -1616 2269 2270 2272 2274 -2275 2276 2278 2280 -2283 2284 -2285 2286 2290 2292 -2293 -2294 -2465 -2921 -2923 -2987 -2991 -3304 -3681 -3683 -3950 -5243 -6113 -7096 -7098 -7189 -7686 -7690 -8206 -8208 -8270 -8757 -8761 -9563 -9619 -9627 -9629 -10321 -10323 -10385 -10911 -10915 -11107 -11109 -11195 -11199 -12406 -12408 -12470 -12957 -12961 -13171 -13173 -13179 -13624 -14959 -14961 -15023 -15510 -15514 -16122 -16157 -16165 -16167 -17580 -17582 -17644 -18106 -18110> {PUBLIC} "DeclaresField" "de.uni_koblenz.jgralab.jex.schema.DeclaresField";
61 Method <66 -67 69> {PUBLIC} "getFirstDeclaresFieldIncidence";
62 Parameter <68 -69> {} "orientation";
63 Method <70 -71> {PUBLIC} "getFirstDeclaresMethodIncidence";
64 Interface <-70 -72 -329 -473 -477 -843 -1444 -1849 2298 2299 2301 2303 -2304 2305 2307 2309 -2312 2313 -2314 2315 2319 2321 -2322 -2323 -2698 -3537 -3689 -3691 -3954 -4490 -4492 -4643 -4647 -5476 -6302 -7006 -7008 -7422 -7536 -7540 -8122 -8124 -8503 -8617 -8621 -9659 -9715 -9723 -9725 -10237 -10239 -10618 -10771 -10775 -12322 -12324 -12703 -12817 -12821 -13187 -13189 -13195 -13628 -14081 -14083 -14278 -14282 -14875 -14877 -15256 -15370 -15374 -16188 -16223 -16231 -16233 -17502 -17504 -17833 -17976 -17980> {PUBLIC} "DeclaresMethod" "de.uni_koblenz.jgralab.jex.schema.DeclaresMethod";
65 Method <72 -73 75> {PUBLIC} "getFirstDeclaresMethodIncidence";
66 Parameter <74 -75> {} "orientation";
67 Method <76 -77> {PUBLIC} "getFirstDeclaresIncidence";
68 Interface <-76 -78 -184 -358 -483 -487 -654 -872 -979 -1255 -1473 -1660 -1878 -2093 2162 2164 -2165 2166 -2167 2168 -2169 2170 2174 2176 -2177 -2178 -2182 -2186 -2190 -2192 -2211 -2215 -2219 -2221 -2240 -2244 -2248 -2250 -2269 -2273 -2277 -2279 -2298 -2302 -2306 -2308 -2326 -2330 -2334 -2336 -2509 -2727 -2858 -2956 -3348 -3566 -3655 -3902 -4408 -4410 -4443 -4459 -4463 -4612 -4799 -5287 -5505 -6157 -6360 -6768 -6770 -6803 -6864 -6868 -7042 -7044 -7233 -7451 -7596 -7600 -8158 -8160 -8314 -8532 -8677 -8681 -8891 -8893 -9013 -9079 -9083 -9274 -9329 -9333 -9335 -9370 -9425 -9429 -9431 -9466 -9521 -9525 -9527 -9562 -9617 -9621 -9623 -9658 -9713 -9717 -9719 -9753 -9808 -9812 -9814 -10018 -10020 -10053 -10089 -10093 -10273 -10275 -10429 -10647 -10831 -10835 -11119 -11121 -11154 -11215 -11219 -12358 -12360 -12514 -12732 -12877 -12881 -13121 -13576 -14105 -14107 -14227 -14318 -14322 -14911 -14913 -15067 -15285 -15430 -15434 -15923 -15957 -15961 -15963 -15989 -16023 -16027 -16029 -16055 -16089 -16093 -16095 -16121 -16155 -16159 -16161 -16187 -16221 -16225 -16227 -16252 -16286 -16290 -16292 -17538 -17540 -17688 -17891 -18036 -18040> {PUBLIC} "Declares" "de.uni_koblenz.jgralab.jex.schema.Declares";
69 Method <78 -79 81> {PUBLIC} "getFirstDeclaresIncidence";
70 Parameter <80 -81> {} "orientation";
71 Method <82 -83 85> {PUBLIC} "add_constructors";
72 Interface <-84 -86 -93 -95 -101 -525 -527 -534 -536 -542 -1155 -1157 -1164 -1166 -1172 -1560 -1562 -1569 -1571 -1577 1955 1956 1958 -1959 1960 1962 1964 1966 1968 1970 1972 1974 1978 1985 1987 1995 2001 2007 2014 2016 2024 2030 2036 2043 2045 2053 2059 2065 2072 2074 2082 2088 2094 2101 2103 2107 2111 2115 -2118 -2119 -2210 -2233 -2409 -2411 -2418 -2420 -2426 -3248 -3250 -3257 -3259 -3265 -3635 -3637 -3671 -3986 -3990 -3994 -5187 -5189 -5196 -5198 -5204 -6057 -6059 -6066 -6068 -6074 -7104 -7106 -7113 -7115 -7121 -8214 -8216 -8223 -8225 -8231 -8776 -8849 -9367 -9451 -10329 -10331 -10338 -10340 -10346 -12414 -12416 -12423 -12425 -12431 -13081 -13083 -13085 -13145 -13153 -13660 -13664 -13668 -14967 -14969 -14976 -14978 -14984 -15986 -16041 -17588 -17590 -17597 -17599 -17605> {PUBLIC} "Constructor" "de.uni_koblenz.jgralab.jex.schema.Constructor";
73 Parameter <84 -85> {} "vertex";
74 Method <89 -90> {PUBLIC} "remove_constructors";
75 Interface <-87 -116 -145 -174 -189 -218 -247 -276 -305 -334 -363 -378 -528 -557 -586 -615 -644 -659 -688 -717 -746 -775 -790 -819 -848 -877 -892 -955 -984 -999 -1051 -1080 -1095 -1158 -1187 -1216 -1245 -1260 -1289 -1318 -1347 -1376 -1391 -1420 -1449 -1478 -1493 -1563 -1592 -1621 -1650 -1665 -1694 -1723 -1752 -1781 -1796 -1825 -1854 -1883 -1898 -1982 -2011 -2040 -2069 -2098 -2412 -2441 -2470 -2499 -2514 -2543 -2572 -2601 -2630 -2645 -2674 -2703 -2732 -2747 -2776 -2834 -2863 -2932 -2961 -2976 -3251 -3280 -3309 -3338 -3353 -3382 -3411 -3440 -3469 -3484 -3513 -3542 -3571 -3586 -4419 -4448 -4501 -4530 -4559 -4588 -4617 -4632 -4688 -4717 -4746 -4775 -4804 -4893 -4957 -4986 -5015 -5086 -5101 -5130 -5190 -5219 -5248 -5277 -5292 -5321 -5350 -5379 -5408 -5437 -5452 -5481 -5510 -5525 -5594 -5623 -5683 -5744 -5773 -5897 -5926 -6060 -6089 -6118 -6147 -6162 -6191 -6220 -6249 -6278 -6307 -6336 -6365 -6380 -6443 -6499 -6551 -6580 -6595 -6624 -6779 -6808 -6823 -7107 -7136 -7165 -7194 -7223 -7238 -7267 -7296 -7325 -7354 -7369 -7398 -7427 -7456 -7471 -7841 -7870 -7885 -8217 -8246 -8275 -8304 -8319 -8348 -8377 -8406 -8435 -8450 -8479 -8508 -8537 -8552 -8902 -8931 -8960 -8989 -9018 -10029 -10058 -10332 -10361 -10390 -10419 -10434 -10463 -10492 -10521 -10550 -10565 -10594 -10623 -10652 -10667 -10696 -11130 -11159 -11174 -12417 -12446 -12475 -12504 -12519 -12548 -12577 -12606 -12635 -12650 -12679 -12708 -12737 -12752 -14116 -14145 -14174 -14203 -14232 -14247 -14433 -14462 -14491 -14660 -14675 -14704 -14970 -14999 -15028 -15057 -15072 -15101 -15130 -15159 -15188 -15217 -15232 -15261 -15290 -15305 -15665 -15694 -17211 -17240 -17591 -17620 -17649 -17678 -17693 -17722 -17751 -17780 -17809 -17838 -17867 -17896 -17911 -18253 -18282 -18297 -18326> {PUBLIC} "List" "java.util.List";
76 WildcardType <86 -88> "? extends Constructor" "? extends de.uni_koblenz.jgralab.jex.schema.Constructor";
77 ParametrizedType <87 88 -89 528 529 -530 1158 1159 -1160 1563 1564 -1565 2412 2413 -2414 3251 3252 -3253 5190 5191 -5192 6060 6061 -6062 7107 7108 -7109 8217 8218 -8219 10332 10333 -10334 12417 12418 -12419 14970 14971 -14972 17591 17592 -17593> n "List<? extends Constructor>" "java.util.List<? extends de.uni_koblenz.jgralab.jex.schema.Constructor>";
78 Method <91 -92 94> {PUBLIC} "remove_constructors";
79 Parameter <93 -94> {} "vertex";
80 Method <96 99 -100> {PUBLIC} "get_constructors";
81 TypeParameter <95 -96 -98> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_constructors().V";
82 Interface <-97 -103 -126 -132 -155 -161 -199 -205 -228 -234 -257 -263 -286 -292 -315 -321 -344 -350 -388 -394 -402 -406 -412 -416 -422 -426 -432 -436 -442 -446 -452 -456 -462 -466 -472 -476 -482 -486 -538 -544 -567 -573 -596 -602 -625 -631 -669 -675 -698 -704 -727 -733 -756 -762 -800 -806 -829 -835 -858 -864 -902 -908 -916 -920 -965 -971 -1009 -1013 -1061 -1067 -1105 -1111 -1119 -1123 -1168 -1174 -1197 -1203 -1226 -1232 -1270 -1276 -1299 -1305 -1328 -1334 -1357 -1363 -1401 -1407 -1430 -1436 -1459 -1465 -1503 -1509 -1573 -1579 -1602 -1608 -1631 -1637 -1675 -1681 -1704 -1710 -1733 -1739 -1762 -1768 -1806 -1812 -1835 -1841 -1864 -1870 -1908 -1914 -1922 -1926 -1932 -1936 -1942 -1946 -1992 -1998 -2021 -2027 -2050 -2056 -2079 -2085 -2108 -2112 -2422 -2428 -2451 -2457 -2480 -2486 -2524 -2530 -2553 -2559 -2582 -2588 -2611 -2617 -2655 -2661 -2684 -2690 -2713 -2719 -2757 -2763 -2786 -2792 -2800 -2804 -2844 -2850 -2873 -2877 -2942 -2948 -2986 -2990 -3261 -3267 -3290 -3296 -3319 -3325 -3363 -3369 -3392 -3398 -3421 -3427 -3450 -3456 -3494 -3500 -3523 -3529 -3552 -3558 -3596 -3602 -3881 -3885 -3889 -3893 -3897 -3901 -3905 -3909 -3913 -3917 -3921 -3925 -3929 -3933 -3937 -3941 -3945 -3949 -3953 -3957 -3961 -3965 -3969 -3973 -3977 -3985 -3989 -3997 -4001 -4009 -4013 -4021 -4025 -4033 -4037 -4045 -4049 -4057 -4061 -4069 -4073 -4081 -4085 -4093 -4097 -4105 -4109 -4117 -4121 -4129 -4133 -4141 -4145 -4153 -4157 -4165 -4169 -4177 -4181 -4189 -4193 -4201 -4205 -4213 -4217 -4225 -4229 -4237 -4241 -4249 -4253 -4261 -4265 -4273 -4277 -4285 -4289 -4429 -4435 -4458 -4462 -4511 -4517 -4540 -4546 -4569 -4575 -4598 -4604 -4642 -4646 -4698 -4704 -4727 -4733 -4756 -4762 -4785 -4791 -4814 -4818 -4824 -4828 -4903 -4909 -4917 -4921 -4967 -4973 -4996 -5002 -5025 -5031 -5039 -5043 -5049 -5053 -5111 -5117 -5140 -5144 -5200 -5206 -5229 -5235 -5258 -5264 -5302 -5308 -5331 -5337 -5360 -5366 -5389 -5395 -5418 -5424 -5462 -5468 -5491 -5497 -5535 -5541 -5549 -5553 -5559 -5563 -5604 -5610 -5633 -5639 -5693 -5699 -5754 -5760 -5783 -5789 -5797 -5801 -5807 -5811 -5907 -5913 -5936 -5942 -5950 -5954 -5960 -5964 -5970 -5974 -5980 -5984 -5990 -5994 -6000 -6004 -6010 -6014 -6070 -6076 -6099 -6105 -6128 -6134 -6172 -6178 -6201 -6207 -6230 -6236 -6259 -6265 -6288 -6294 -6317 -6323 -6346 -6352 -6390 -6396 -6404 -6408 -6414 -6418 -6453 -6459 -6467 -6471 -6509 -6513 -6561 -6567 -6605 -6611 -6634 -6638 -6644 -6648 -6789 -6795 -6833 -6837 -6843 -6847 -6853 -6857 -6863 -6867 -7117 -7123 -7146 -7152 -7175 -7181 -7204 -7210 -7248 -7254 -7277 -7283 -7306 -7312 -7335 -7341 -7379 -7385 -7408 -7414 -7437 -7443 -7481 -7487 -7495 -7499 -7505 -7509 -7515 -7519 -7525 -7529 -7535 -7539 -7545 -7549 -7555 -7559 -7565 -7569 -7575 -7579 -7585 -7589 -7595 -7599 -7605 -7609 -7615 -7619 -7625 -7629 -7635 -7639 -7645 -7649 -7655 -7659 -7665 -7669 -7675 -7679 -7685 -7689 -7851 -7857 -7895 -7901 -7909 -7913 -7919 -7923 -7929 -7933 -7939 -7943 -7949 -7953 -7959 -7963 -7969 -7973 -7979 -7983 -8227 -8233 -8256 -8262 -8285 -8291 -8329 -8335 -8358 -8364 -8387 -8393 -8416 -8422 -8460 -8466 -8489 -8495 -8518 -8524 -8562 -8568 -8576 -8580 -8586 -8590 -8596 -8600 -8606 -8610 -8616 -8620 -8626 -8630 -8636 -8640 -8646 -8650 -8656 -8660 -8666 -8670 -8676 -8680 -8686 -8690 -8696 -8700 -8706 -8710 -8716 -8720 -8726 -8730 -8736 -8740 -8746 -8750 -8756 -8760 -8912 -8918 -8941 -8947 -8970 -8976 -8999 -9005 -9028 -9032 -9038 -9042 -9048 -9052 -9058 -9062 -9068 -9072 -9078 -9082 -10039 -10045 -10068 -10072 -10078 -10082 -10088 -10092 -10342 -10348 -10371 -10377 -10400 -10406 -10444 -10450 -10473 -10479 -10502 -10508 -10531 -10537 -10575 -10581 -10604 -10610 -10633 -10639 -10677 -10683 -10706 -10712 -10720 -10724 -10730 -10734 -10740 -10744 -10750 -10754 -10760 -10764 -10770 -10774 -10780 -10784 -10790 -10794 -10800 -10804 -10810 -10814 -10820 -10824 -10830 -10834 -10840 -10844 -10850 -10854 -10860 -10864 -10870 -10874 -10880 -10884 -10890 -10894 -10900 -10904 -10910 -10914 -11140 -11146 -11184 -11188 -11194 -11198 -11204 -11208 -11214 -11218 -12427 -12433 -12456 -12462 -12485 -12491 -12529 -12535 -12558 -12564 -12587 -12593 -12616 -12622 -12660 -12666 -12689 -12695 -12718 -12724 -12762 -12768 -12776 -12780 -12786 -12790 -12796 -12800 -12806 -12810 -12816 -12820 -12826 -12830 -12836 -12840 -12846 -12850 -12856 -12860 -12866 -12870 -12876 -12880 -12886 -12890 -12896 -12900 -12906 -12910 -12916 -12920 -12926 -12930 -12936 -12940 -12946 -12950 -12956 -12960 -13555 -13559 -13563 -13567 -13571 -13575 -13579 -13583 -13587 -13591 -13595 -13599 -13603 -13607 -13611 -13615 -13619 -13623 -13627 -13631 -13635 -13639 -13643 -13647 -13651 -13659 -13663 -13671 -13675 -13683 -13687 -13695 -13699 -13707 -13711 -13719 -13723 -13731 -13735 -13743 -13747 -13755 -13759 -13767 -13771 -13779 -13783 -13791 -13795 -13803 -13807 -13815 -13819 -13827 -13831 -13839 -13843 -13851 -13855 -13863 -13867 -13875 -13879 -13887 -13891 -13899 -13903 -13911 -13915 -13923 -13927 -13935 -13939 -13947 -13951 -13959 -13963 -14126 -14132 -14155 -14161 -14184 -14190 -14213 -14219 -14257 -14261 -14267 -14271 -14277 -14281 -14287 -14291 -14297 -14301 -14307 -14311 -14317 -14321 -14443 -14449 -14472 -14478 -14501 -14507 -14515 -14519 -14525 -14529 -14535 -14539 -14685 -14691 -14714 -14718 -14724 -14728 -14734 -14738 -14980 -14986 -15009 -15015 -15038 -15044 -15082 -15088 -15111 -15117 -15140 -15146 -15169 -15175 -15198 -15204 -15242 -15248 -15271 -15277 -15315 -15321 -15329 -15333 -15339 -15343 -15349 -15353 -15359 -15363 -15369 -15373 -15379 -15383 -15389 -15393 -15399 -15403 -15409 -15413 -15419 -15423 -15429 -15433 -15439 -15443 -15449 -15453 -15459 -15463 -15469 -15473 -15479 -15483 -15489 -15493 -15499 -15503 -15509 -15513 -15675 -15681 -15704 -15710 -15718 -15722 -15728 -15732 -15738 -15742 -15748 -15752 -15758 -15762 -15768 -15772 -15778 -15782 -15788 -15792 -17221 -17227 -17250 -17256 -17264 -17268 -17274 -17278 -17601 -17607 -17630 -17636 -17659 -17665 -17703 -17709 -17732 -17738 -17761 -17767 -17790 -17796 -17819 -17825 -17848 -17854 -17877 -17883 -17921 -17927 -17935 -17939 -17945 -17949 -17955 -17959 -17965 -17969 -17975 -17979 -17985 -17989 -17995 -17999 -18005 -18009 -18015 -18019 -18025 -18029 -18035 -18039 -18045 -18049 -18055 -18059 -18065 -18069 -18075 -18079 -18085 -18089 -18095 -18099 -18105 -18109 -18263 -18269 -18307 -18313 -18336 -18340 -18346 -18350 -18356 -18360 -18366 -18370 -18376 -18380 -18386 -18390 -18396 -18400 -18406 -18410> {PUBLIC} "Iterable" "java.lang.Iterable";
83 ParametrizedType <97 98 -99 103 104 -105> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_constructors|V>";
84 Method <102 105 -106 110> {PUBLIC} "get_constructors";
85 TypeParameter <101 -102 -104 -108> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_constructors(VertexFilter<V>).V";
86 Interface <-107 -136 -165 -209 -238 -267 -296 -325 -354 -398 -548 -577 -606 -635 -679 -708 -737 -766 -810 -839 -868 -912 -975 -1071 -1115 -1178 -1207 -1236 -1280 -1309 -1338 -1367 -1411 -1440 -1469 -1513 -1583 -1612 -1641 -1685 -1714 -1743 -1772 -1816 -1845 -1874 -1918 -2002 -2031 -2060 -2089 -2432 -2461 -2490 -2534 -2563 -2592 -2621 -2665 -2694 -2723 -2767 -2796 -2854 -2952 -3271 -3300 -3329 -3373 -3402 -3431 -3460 -3504 -3533 -3562 -3606 -3981 -3993 -4005 -4017 -4029 -4041 -4053 -4065 -4077 -4089 -4101 -4113 -4125 -4137 -4149 -4161 -4173 -4185 -4197 -4209 -4221 -4233 -4245 -4257 -4269 -4281 -4293 -4439 -4521 -4550 -4579 -4608 -4708 -4737 -4766 -4795 -4913 -4977 -5006 -5035 -5121 -5210 -5239 -5268 -5312 -5341 -5370 -5399 -5428 -5472 -5501 -5545 -5614 -5643 -5703 -5764 -5793 -5917 -5946 -6080 -6109 -6138 -6182 -6211 -6240 -6269 -6298 -6327 -6356 -6400 -6463 -6571 -6615 -6799 -7127 -7156 -7185 -7214 -7258 -7287 -7316 -7345 -7389 -7418 -7447 -7491 -7861 -7905 -8237 -8266 -8295 -8339 -8368 -8397 -8426 -8470 -8499 -8528 -8572 -8922 -8951 -8980 -9009 -10049 -10352 -10381 -10410 -10454 -10483 -10512 -10541 -10585 -10614 -10643 -10687 -10716 -11150 -12437 -12466 -12495 -12539 -12568 -12597 -12626 -12670 -12699 -12728 -12772 -13655 -13667 -13679 -13691 -13703 -13715 -13727 -13739 -13751 -13763 -13775 -13787 -13799 -13811 -13823 -13835 -13847 -13859 -13871 -13883 -13895 -13907 -13919 -13931 -13943 -13955 -13967 -14136 -14165 -14194 -14223 -14453 -14482 -14511 -14695 -14990 -15019 -15048 -15092 -15121 -15150 -15179 -15208 -15252 -15281 -15325 -15685 -15714 -17231 -17260 -17611 -17640 -17669 -17713 -17742 -17771 -17800 -17829 -17858 -17887 -17931 -18273 -18317> {PUBLIC} "VertexFilter" "de.uni_koblenz.jgralab.VertexFilter";
87 ParametrizedType <107 108 -109> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_constructors|V>";
88 Parameter <109 -110> {} "filter";
89 Method <111 -112 114> {PUBLIC} "add_importers";
90 Interface <-111 -552 -950 -1046 -1182 -1587 -2064 -2436 -2829 -2927 3201 3203 3205 3207 -3210 3211 -3212 3213 -3214 3215 3219 3221 -3222 -3223 -3275 -3813 -3815 -3886 -4414 -4583 -4770 -4882 -4884 -4888 -4918 -4922 -4952 -5096 -5214 -5589 -5678 -5733 -5735 -5739 -5808 -5812 -5892 -6084 -6546 -6762 -6764 -6774 -6854 -6858 -7024 -7026 -7131 -7566 -7570 -7812 -7814 -7836 -7950 -7954 -8140 -8142 -8241 -8647 -8651 -8873 -8875 -8984 -9049 -9053 -10012 -10014 -10024 -10079 -10083 -10255 -10257 -10356 -10801 -10805 -11113 -11115 -11125 -11205 -11209 -12108 -12169 -12171 -12173 -12340 -12342 -12441 -12847 -12851 -13435 -13437 -13443 -13560 -14087 -14089 -14198 -14288 -14292 -14422 -14424 -14428 -14536 -14540 -14643 -14645 -14670 -14725 -14729 -14893 -14895 -14994 -15400 -15404 -15636 -15638 -15660 -15759 -15763 -17009 -17047 -17049 -17051 -17200 -17202 -17206 -17275 -17279 -17520 -17522 -17615 -18006 -18010 -18224 -18226 -18248 -18377 -18381> {PUBLIC} "Imports" "de.uni_koblenz.jgralab.jex.schema.Imports";
91 Interface <-113 -115 -122 -124 -130 -171 -173 -180 -182 -554 -556 -563 -565 -571 -641 -643 -650 -652 -952 -954 -961 -963 -969 -1048 -1050 -1057 -1059 -1065 -1184 -1186 -1193 -1195 -1201 -1242 -1244 -1251 -1253 -1589 -1591 -1598 -1600 -1606 -1647 -1649 -1656 -1658 -2066 -2068 -2075 -2077 -2083 -2354 -2372 -2438 -2440 -2447 -2449 -2455 -2496 -2498 -2505 -2507 -2831 -2833 -2840 -2842 -2848 -2929 -2931 -2938 -2940 -2946 -3200 -3218 -3277 -3279 -3286 -3288 -3294 -3335 -3337 -3344 -3346 -3709 -3817 -3855 -3857 -4106 -4110 -4114 -4416 -4418 -4425 -4427 -4433 -4585 -4587 -4594 -4596 -4602 -4772 -4774 -4781 -4783 -4789 -4890 -4892 -4899 -4901 -4907 -4954 -4956 -4963 -4965 -4971 -5098 -5100 -5107 -5109 -5115 -5216 -5218 -5225 -5227 -5233 -5274 -5276 -5283 -5285 -5591 -5593 -5600 -5602 -5608 -5680 -5682 -5689 -5691 -5697 5710 5712 5714 5716 5720 5722 -5725 5726 5728 5730 5734 5736 5740 5747 5749 5757 5763 5769 5776 5778 5786 5792 5800 5804 5810 5814 -5817 -5818 -5894 -5896 -5903 -5905 -5911 -6086 -6088 -6095 -6097 -6103 -6144 -6146 -6153 -6155 -6548 -6550 -6557 -6559 -6565 -6776 -6778 -6785 -6787 -6793 -7133 -7135 -7142 -7144 -7150 -7220 -7222 -7229 -7231 -7838 -7840 -7847 -7849 -7855 -8243 -8245 -8252 -8254 -8260 -8301 -8303 -8310 -8312 -8986 -8988 -8995 -8997 -9003 -9846 -9927 -10026 -10028 -10035 -10037 -10043 -10358 -10360 -10367 -10369 -10375 -10416 -10418 -10425 -10427 -11127 -11129 -11136 -11138 -11144 -12104 -12185 -12443 -12445 -12452 -12454 -12460 -12501 -12503 -12510 -12512 -13223 -13231 -13439 -13447 -13509 -13511 -13513 -13780 -13784 -13788 -14200 -14202 -14209 -14211 -14217 -14430 -14432 -14439 -14441 -14447 -14672 -14674 -14681 -14683 -14689 -14996 -14998 -15005 -15007 -15013 -15054 -15056 -15063 -15065 -15662 -15664 -15671 -15673 -15679 -16315 -16365 -17005 -17055 -17126 -17192 -17617 -17619 -17626 -17628 -17634 -17675 -17677 -17684 -17686 -18250 -18252 -18259 -18261 -18267> {PUBLIC} "SourceFile" "de.uni_koblenz.jgralab.jex.schema.SourceFile";
92 Parameter <113 -114> {} "vertex";
93 Method <118 -119> {PUBLIC} "remove_importers";
94 WildcardType <115 -117> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
95 ParametrizedType <116 117 -118 174 175 -176 557 558 -559 644 645 -646 955 956 -957 1051 1052 -1053 1187 1188 -1189 1245 1246 -1247 1592 1593 -1594 1650 1651 -1652 2069 2070 -2071 2441 2442 -2443 2499 2500 -2501 2834 2835 -2836 2932 2933 -2934 3280 3281 -3282 3338 3339 -3340 4419 4420 -4421 4588 4589 -4590 4775 4776 -4777 4893 4894 -4895 4957 4958 -4959 5101 5102 -5103 5219 5220 -5221 5277 5278 -5279 5594 5595 -5596 5683 5684 -5685 5897 5898 -5899 6089 6090 -6091 6147 6148 -6149 6551 6552 -6553 6779 6780 -6781 7136 7137 -7138 7223 7224 -7225 7841 7842 -7843 8246 8247 -8248 8304 8305 -8306 8989 8990 -8991 10029 10030 -10031 10361 10362 -10363 10419 10420 -10421 11130 11131 -11132 12446 12447 -12448 12504 12505 -12506 14203 14204 -14205 14433 14434 -14435 14675 14676 -14677 14999 15000 -15001 15057 15058 -15059 15665 15666 -15667 17620 17621 -17622 17678 17679 -17680 18253 18254 -18255> n "List<? extends SourceFile>" "java.util.List<? extends de.uni_koblenz.jgralab.jex.schema.SourceFile>";
96 Method <120 -121 123> {PUBLIC} "remove_importers";
97 Parameter <122 -123> {} "vertex";
98 Method <125 128 -129> {PUBLIC} "get_importers";
99 TypeParameter <124 -125 -127> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_importers().V";
100 ParametrizedType <126 127 -128 132 133 -134> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_importers|V>";
101 Method <131 134 -135 139> {PUBLIC} "get_importers";
102 TypeParameter <130 -131 -133 -137> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_importers(VertexFilter<V>).V";
103 ParametrizedType <136 137 -138> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_importers|V>";
104 Parameter <138 -139> {} "filter";
105 Method <140 -141 143> {PUBLIC} "add_fields";
106 Interface <-142 -144 -151 -153 -159 -612 -614 -621 -623 -629 -1213 -1215 -1222 -1224 -1230 -1618 -1620 -1627 -1629 -1635 -2268 -2291 -2467 -2469 -2476 -2478 -2484 2906 2907 2908 2910 -2911 2912 2914 2916 2918 2920 2922 2924 2928 2935 2937 2945 2951 2957 2964 2966 2970 2972 2979 2981 2985 2989 2993 -2996 -2997 -3306 -3308 -3315 -3317 -3323 -3687 -3729 -3731 -4118 -4122 -4126 -5245 -5247 -5254 -5256 -5262 -6115 -6117 -6124 -6126 -6132 -7191 -7193 -7200 -7202 -7208 -8272 -8274 -8281 -8283 -8289 -9559 -9643 -10387 -10389 -10396 -10398 -10404 -11017 -11091 -12472 -12474 -12481 -12483 -12489 -13177 -13185 -13267 -13269 -13271 -13792 -13796 -13800 -15025 -15027 -15034 -15036 -15042 -16118 -16173 -17646 -17648 -17655 -17657 -17663> {PUBLIC} "Field" "de.uni_koblenz.jgralab.jex.schema.Field";
107 Parameter <142 -143> {} "vertex";
108 Method <147 -148> {PUBLIC} "remove_fields";
109 WildcardType <144 -146> "? extends Field" "? extends de.uni_koblenz.jgralab.jex.schema.Field";
110 ParametrizedType <145 146 -147 615 616 -617 1216 1217 -1218 1621 1622 -1623 2470 2471 -2472 3309 3310 -3311 5248 5249 -5250 6118 6119 -6120 7194 7195 -7196 8275 8276 -8277 10390 10391 -10392 12475 12476 -12477 15028 15029 -15030 17649 17650 -17651> n "List<? extends Field>" "java.util.List<? extends de.uni_koblenz.jgralab.jex.schema.Field>";
111 Method <149 -150 152> {PUBLIC} "remove_fields";
112 Parameter <151 -152> {} "vertex";
113 Method <154 157 -158> {PUBLIC} "get_fields";
114 TypeParameter <153 -154 -156> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_fields().V";
115 ParametrizedType <155 156 -157 161 162 -163> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_fields|V>";
116 Method <160 163 -164 168> {PUBLIC} "get_fields";
117 TypeParameter <159 -160 -162 -166> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_fields(VertexFilter<V>).V";
118 ParametrizedType <165 166 -167> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_fields|V>";
119 Parameter <167 -168> {} "filter";
120 Method <169 -170 172> {PUBLIC} "add_sourceFile";
121 Parameter <171 -172> {} "vertex";
122 Method <176 -177> {PUBLIC} "remove_sourceFile";
123 WildcardType <173 -175> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
124 Method <178 -179 181> {PUBLIC} "remove_sourceFile";
125 Parameter <180 -181> {} "vertex";
126 Method <182 -183> {PUBLIC} "get_sourceFile";
127 Method <184 -185 187> {PUBLIC} "add_members";
128 Parameter <186 -187> {} "vertex";
129 Method <191 -192> {PUBLIC} "remove_members";
130 WildcardType <188 -190> "? extends Member" "? extends de.uni_koblenz.jgralab.jex.schema.Member";
131 ParametrizedType <189 190 -191 659 660 -661 1260 1261 -1262 1665 1666 -1667 2514 2515 -2516 3353 3354 -3355 5292 5293 -5294 6162 6163 -6164 7238 7239 -7240 8319 8320 -8321 10434 10435 -10436 12519 12520 -12521 15072 15073 -15074 17693 17694 -17695> n "List<? extends Member>" "java.util.List<? extends de.uni_koblenz.jgralab.jex.schema.Member>";
132 Method <193 -194 196> {PUBLIC} "remove_members";
133 Parameter <195 -196> {} "vertex";
134 Method <198 201 -202> {PUBLIC} "get_members";
135 TypeParameter <197 -198 -200> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_members().V";
136 ParametrizedType <199 200 -201 205 206 -207> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_members|V>";
137 Method <204 207 -208 212> {PUBLIC} "get_members";
138 TypeParameter <203 -204 -206 -210> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_members(VertexFilter<V>).V";
139 ParametrizedType <209 210 -211> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_members|V>";
140 Parameter <211 -212> {} "filter";
141 Method <213 -214 216> {PUBLIC} "add_nestedClassifiers";
142 Parameter <215 -216> {} "vertex";
143 Method <220 -221> {PUBLIC} "remove_nestedClassifiers";
144 WildcardType <217 -219> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
145 ParametrizedType <218 219 -220 363 364 -365 717 718 -719 746 747 -748 775 776 -777 877 878 -879 984 985 -986 1318 1319 -1320 1347 1348 -1349 1376 1377 -1378 1478 1479 -1480 1723 1724 -1725 1752 1753 -1754 1781 1782 -1783 1883 1884 -1885 2098 2099 -2100 2572 2573 -2574 2601 2602 -2603 2630 2631 -2632 2732 2733 -2734 2863 2864 -2865 2961 2962 -2963 3411 3412 -3413 3440 3441 -3442 3469 3470 -3471 3571 3572 -3573 4448 4449 -4450 4617 4618 -4619 4804 4805 -4806 4986 4987 -4988 5321 5322 -5323 5510 5511 -5512 5773 5774 -5775 6191 6192 -6193 6365 6366 -6367 6808 6809 -6810 7296 7297 -7298 7325 7326 -7327 7354 7355 -7356 7456 7457 -7458 8377 8378 -8379 8406 8407 -8408 8435 8436 -8437 8537 8538 -8539 9018 9019 -9020 10058 10059 -10060 10492 10493 -10494 10521 10522 -10523 10550 10551 -10552 10652 10653 -10654 11159 11160 -11161 12577 12578 -12579 12606 12607 -12608 12635 12636 -12637 12737 12738 -12739 14232 14233 -14234 14462 14463 -14464 15101 15102 -15103 15290 15291 -15292 17240 17241 -17242 17722 17723 -17724 17896 17897 -17898> n "List<? extends AbstractClassifier>" "java.util.List<? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier>";
146 Method <222 -223 225> {PUBLIC} "remove_nestedClassifiers";
147 Parameter <224 -225> {} "vertex";
148 Method <227 230 -231> {PUBLIC} "get_nestedClassifiers";
149 TypeParameter <226 -227 -229> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_nestedClassifiers().V";
150 ParametrizedType <228 229 -230 234 235 -236> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_nestedClassifiers|V>";
151 Method <233 236 -237 241> {PUBLIC} "get_nestedClassifiers";
152 TypeParameter <232 -233 -235 -239> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_nestedClassifiers(VertexFilter<V>).V";
153 ParametrizedType <238 239 -240> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_nestedClassifiers|V>";
154 Parameter <240 -241> {} "filter";
155 Method <242 -243 245> {PUBLIC} "add_subclasses";
156 Interface <-244 -246 -253 -255 -261 -302 -304 -311 -313 -319 -495 -503 -685 -687 -694 -696 -702 -816 -818 -825 -827 -833 -1131 -1139 -1286 -1288 -1295 -1297 -1303 -1417 -1419 -1426 -1428 -1434 1520 1521 1523 1525 -1526 1527 1529 1531 1533 1535 1537 1539 1541 1543 1547 1549 1553 1555 1559 1566 1568 1576 1582 1588 1595 1597 1605 1611 1617 1624 1626 1634 1640 1646 1653 1655 1659 1661 1668 1670 1678 1684 1690 -1691 -1693 1697 1699 -1700 -1702 1707 -1708 1713 1719 1726 1728 1736 1742 1748 1755 1757 1765 1771 1777 1784 1786 1790 1792 1799 1801 1809 1815 1821 -1822 -1824 1828 1830 -1831 -1833 1838 -1839 1844 1850 1857 1859 1867 1873 1879 1886 1888 1892 1894 1901 1903 1911 1917 1925 1929 1935 1939 1945 1949 -1952 -1953 -2379 -2385 -2540 -2542 -2549 -2551 -2557 -2671 -2673 -2680 -2682 -2688 -2887 -2899 -3039 -3054 -3180 -3192 -3224 -3230 -3379 -3381 -3388 -3390 -3396 -3510 -3512 -3519 -3521 -3527 -3633 -3725 -3755 -3809 -4154 -4158 -4162 -5347 -5349 -5356 -5358 -5364 -5405 -5407 -5414 -5416 -5422 -5434 -5436 -5443 -5445 -6217 -6219 -6226 -6228 -6234 -6275 -6277 -6284 -6286 -6292 -6884 -6968 -7264 -7266 -7273 -7275 -7281 -7395 -7397 -7404 -7406 -7412 -8000 -8084 -8345 -8347 -8354 -8356 -8362 -8476 -8478 -8485 -8487 -8493 -10108 -10191 -10460 -10462 -10469 -10471 -10477 -10591 -10593 -10600 -10602 -10608 -10930 -11003 -11407 -11483 -12017 -12090 -12199 -12282 -12545 -12547 -12554 -12556 -12562 -12676 -12678 -12685 -12687 -12693 -13079 -13255 -13263 -13313 -13321 -13423 -13431 -13828 -13832 -13836 -15127 -15129 -15136 -15138 -15144 -15185 -15187 -15194 -15196 -15202 -15214 -15216 -15223 -15225 -16378 -16422 -16548 -16595 -16948 -16992 -17748 -17750 -17757 -17759 -17765 -17806 -17808 -17815 -17817 -17823> {PUBLIC} "Classifier" "de.uni_koblenz.jgralab.jex.schema.Classifier";
157 Parameter <244 -245> {} "vertex";
158 Method <249 -250> {PUBLIC} "remove_subclasses";
159 WildcardType <246 -248> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
160 ParametrizedType <247 248 -249 305 306 -307 688 689 -690 819 820 -821 1289 1290 -1291 1420 1421 -1422 1694 1695 -1696 1825 1826 -1827 2543 2544 -2545 2674 2675 -2676 3382 3383 -3384 3513 3514 -3515 5350 5351 -5352 5408 5409 -5410 5437 5438 -5439 6220 6221 -6222 6278 6279 -6280 7267 7268 -7269 7398 7399 -7400 8348 8349 -8350 8479 8480 -8481 10463 10464 -10465 10594 10595 -10596 12548 12549 -12550 12679 12680 -12681 15130 15131 -15132 15188 15189 -15190 15217 15218 -15219 17751 17752 -17753 17809 17810 -17811> n "List<? extends Classifier>" "java.util.List<? extends de.uni_koblenz.jgralab.jex.schema.Classifier>";
161 Method <251 -252 254> {PUBLIC} "remove_subclasses";
162 Parameter <253 -254> {} "vertex";
163 Method <256 259 -260> {PUBLIC} "get_subclasses";
164 TypeParameter <255 -256 -258> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_subclasses().V";
165 ParametrizedType <257 258 -259 263 264 -265> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_subclasses|V>";
166 Method <262 265 -266 270> {PUBLIC} "get_subclasses";
167 TypeParameter <261 -262 -264 -268> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_subclasses(VertexFilter<V>).V";
168 ParametrizedType <267 268 -269> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_subclasses|V>";
169 Parameter <269 -270> {} "filter";
170 Method <271 -272 274> {PUBLIC} "add_typeParams";
171 Interface <-271 -785 -1386 -1791 -1977 -2640 3141 3143 -3144 3145 -3146 3147 -3148 3149 3153 3155 -3156 -3157 -3479 -3789 -3791 -3926 -4496 -4683 -5374 -6043 -6045 -6244 -6405 -6409 -6432 -6434 -6438 -6468 -6472 -7084 -7086 -7364 -7666 -7670 -8200 -8202 -8445 -8747 -8751 -8867 -8869 -8897 -9039 -9043 -10315 -10317 -10560 -10901 -10905 -11847 -11900 -11902 -11904 -12400 -12402 -12645 -12947 -12951 -13387 -13389 -13395 -13600 -14075 -14077 -14111 -14268 -14272 -14953 -14955 -15154 -15500 -15504 -16838 -16870 -16872 -16874 -17574 -17576 -17775 -18096 -18100> {PUBLIC} "HasTypeParam" "de.uni_koblenz.jgralab.jex.schema.HasTypeParam";
172 Interface <-273 -275 -282 -284 -290 -787 -789 -796 -798 -804 -1388 -1390 -1397 -1399 -1405 -1793 -1795 -1802 -1804 -1810 -1979 -1981 -1988 -1990 -1996 -2642 -2644 -2651 -2653 -2659 -3000 -3012 -3139 -3154 -3481 -3483 -3490 -3492 -3498 -3737 -3795 -3869 -3871 -4214 -4218 -4222 -4498 -4500 -4507 -4509 -4515 -4685 -4687 -4694 -4696 -4702 -5376 -5378 -5385 -5387 -5393 6023 6024 6026 6028 6030 6032 6034 6036 6038 -6039 6040 6042 6044 6046 6050 6052 6056 6063 6065 6073 6079 6085 6092 6094 6102 6108 6114 6121 6123 6131 6137 6143 6150 6152 6156 6158 6165 6167 6175 6181 6187 6194 6196 6204 6210 6216 6223 6225 6233 6239 6245 -6246 -6248 6252 6254 -6255 -6257 6262 -6263 6268 6274 6281 6283 6291 6297 6303 6310 6312 6320 6326 6332 6339 6341 6349 6355 6361 6368 6370 6374 6376 6383 6385 6393 6399 6407 6411 6417 6421 -6424 -6425 -6440 -6442 -6449 -6451 -6457 -7366 -7368 -7375 -7377 -7383 -8447 -8449 -8456 -8458 -8464 -8899 -8901 -8908 -8910 -8916 -10562 -10564 -10571 -10573 -10579 -11234 -11307 -11842 -11918 -12647 -12649 -12656 -12658 -12664 -13279 -13287 -13393 -13401 -13535 -13537 -13539 -13888 -13892 -13896 -14113 -14115 -14122 -14124 -14130 -15156 -15158 -15165 -15167 -15173 -16435 -16479 -16833 -16880 -17382 -17474 -17777 -17779 -17786 -17788 -17794> {PUBLIC} "TypeParameter" "de.uni_koblenz.jgralab.jex.schema.TypeParameter";
173 Parameter <273 -274> {} "vertex";
174 Method <278 -279> {PUBLIC} "remove_typeParams";
175 WildcardType <275 -277> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
176 ParametrizedType <276 277 -278 790 791 -792 1391 1392 -1393 1796 1797 -1798 1982 1983 -1984 2645 2646 -2647 3484 3485 -3486 4501 4502 -4503 4688 4689 -4690 5379 5380 -5381 6249 6250 -6251 6443 6444 -6445 7369 7370 -7371 8450 8451 -8452 8902 8903 -8904 10565 10566 -10567 12650 12651 -12652 14116 14117 -14118 15159 15160 -15161 17780 17781 -17782> n "List<? extends TypeParameter>" "java.util.List<? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter>";
177 Method <280 -281 283> {PUBLIC} "remove_typeParams";
178 Parameter <282 -283> {} "vertex";
179 Method <285 288 -289> {PUBLIC} "get_typeParams";
180 TypeParameter <284 -285 -287> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_typeParams().V";
181 ParametrizedType <286 287 -288 292 293 -294> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_typeParams|V>";
182 Method <291 294 -295 299> {PUBLIC} "get_typeParams";
183 TypeParameter <290 -291 -293 -297> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_typeParams(VertexFilter<V>).V";
184 ParametrizedType <296 297 -298> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_typeParams|V>";
185 Parameter <298 -299> {} "filter";
186 Method <300 -301 303> {PUBLIC} "add_implementors";
187 Parameter <302 -303> {} "vertex";
188 Method <307 -308> {PUBLIC} "remove_implementors";
189 WildcardType <304 -306> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
190 Method <309 -310 312> {PUBLIC} "remove_implementors";
191 Parameter <311 -312> {} "vertex";
192 Method <314 317 -318> {PUBLIC} "get_implementors";
193 TypeParameter <313 -314 -316> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_implementors().V";
194 ParametrizedType <315 316 -317 321 322 -323> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_implementors|V>";
195 Method <320 323 -324 328> {PUBLIC} "get_implementors";
196 TypeParameter <319 -320 -322 -326> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_implementors(VertexFilter<V>).V";
197 ParametrizedType <325 326 -327> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_implementors|V>";
198 Parameter <327 -328> {} "filter";
199 Method <329 -330 332> {PUBLIC} "add_methods";
200 Interface <-331 -333 -340 -342 -348 -845 -847 -854 -856 -862 -1446 -1448 -1455 -1457 -1463 -1851 -1853 -1860 -1862 -1868 -2297 -2320 -2700 -2702 -2709 -2711 -2717 -3539 -3541 -3548 -3550 -3556 -3695 -3827 -3829 -4250 -4254 -4258 4471 4472 4473 4475 4477 -4478 4479 4481 4483 4485 4487 4489 4491 4493 4497 4504 4506 4514 4520 4526 4533 4535 4543 4549 4555 4562 4564 4572 4578 4584 4591 4593 4601 4607 4613 4620 4622 4626 4628 4635 4637 4641 4645 4649 -4652 -4653 -5478 -5480 -5487 -5489 -5495 -6304 -6306 -6313 -6315 -6321 -7424 -7426 -7433 -7435 -7441 -8505 -8507 -8514 -8516 -8522 -9655 -9739 -10620 -10622 -10629 -10631 -10637 -12705 -12707 -12714 -12716 -12722 -13193 -13201 -13461 -13463 -13465 -13924 -13928 -13932 -13981 -14057 -15258 -15260 -15267 -15269 -15275 -16184 -16239 -17835 -17837 -17844 -17846 -17852> {PUBLIC} "Method" "de.uni_koblenz.jgralab.jex.schema.Method";
201 Parameter <331 -332> {} "vertex";
202 Method <336 -337> {PUBLIC} "remove_methods";
203 WildcardType <333 -335> "? extends Method" "? extends de.uni_koblenz.jgralab.jex.schema.Method";
204 ParametrizedType <334 335 -336 848 849 -850 1449 1450 -1451 1854 1855 -1856 2703 2704 -2705 3542 3543 -3544 5481 5482 -5483 6307 6308 -6309 7427 7428 -7429 8508 8509 -8510 10623 10624 -10625 12708 12709 -12710 15261 15262 -15263 17838 17839 -17840> n "List<? extends Method>" "java.util.List<? extends de.uni_koblenz.jgralab.jex.schema.Method>";
205 Method <338 -339 341> {PUBLIC} "remove_methods";
206 Parameter <340 -341> {} "vertex";
207 Method <343 346 -347> {PUBLIC} "get_methods";
208 TypeParameter <342 -343 -345> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_methods().V";
209 ParametrizedType <344 345 -346 350 351 -352> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_methods|V>";
210 Method <349 352 -353 357> {PUBLIC} "get_methods";
211 TypeParameter <348 -349 -351 -355> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_methods(VertexFilter<V>).V";
212 ParametrizedType <354 355 -356> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_methods|V>";
213 Parameter <356 -357> {} "filter";
214 Method <358 -359 361> {PUBLIC} "add_parent";
215 Parameter <360 -361> {} "vertex";
216 Method <365 -366> {PUBLIC} "remove_parent";
217 WildcardType <362 -364> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
218 Method <367 -368 370> {PUBLIC} "remove_parent";
219 Parameter <369 -370> {} "vertex";
220 Method <371 -372> {PUBLIC} "get_parent";
221 Method <373 -374 376> {PUBLIC} "add_arrayType";
222 Interface <-373 -887 -1040 -1042 -1075 -1090 -1120 -1124 -1488 -1893 -2771 3021 3023 -3024 3025 -3026 3027 -3028 3029 3033 3035 -3036 -3037 -3581 -3741 -3743 -3918 -5520 -5618 -5874 -5876 -5921 -5991 -5995 -6375 -6590 -7012 -7014 -7466 -7546 -7550 -7818 -7820 -7865 -7880 -7960 -7964 -8128 -8130 -8547 -8627 -8631 -10243 -10245 -10691 -10781 -10785 -11325 -11378 -11380 -11382 -12328 -12330 -12747 -12827 -12831 -13291 -13293 -13299 -13592 -14881 -14883 -15300 -15380 -15384 -15642 -15644 -15689 -15769 -15773 -16496 -16528 -16530 -16532 -17508 -17510 -17906 -17986 -17990 -18230 -18232 -18292 -18387 -18391> {PUBLIC} "HasElementType" "de.uni_koblenz.jgralab.jex.schema.HasElementType";
223 Interface <-375 -377 -384 -386 -392 -889 -891 -898 -900 -906 1022 1023 1025 1027 1029 -1032 1033 1035 1037 1039 1041 1043 1047 1054 1056 1064 1070 1076 1083 1085 1089 1091 -1092 -1094 1098 1100 -1101 -1103 1108 -1109 1114 1122 1126 -1129 -1130 -1490 -1492 -1499 -1501 -1507 -1895 -1897 -1904 -1906 -1912 -2773 -2775 -2782 -2784 -2790 -3019 -3032 -3583 -3585 -3592 -3594 -3600 -3625 -3627 -3745 -4022 -4026 -4030 -5522 -5524 -5531 -5533 -5539 -5620 -5622 -5629 -5631 -5637 -5923 -5925 -5932 -5934 -5940 -6377 -6379 -6386 -6388 -6394 -6592 -6594 -6601 -6603 -6609 -7468 -7470 -7477 -7479 -7485 -7705 -7780 -7882 -7884 -7891 -7893 -7899 -8549 -8551 -8558 -8560 -8566 -10693 -10695 -10702 -10704 -10710 -11320 -11394 -12749 -12751 -12758 -12760 -12766 -13063 -13065 -13067 -13295 -13303 -13696 -13700 -13704 -15302 -15304 -15311 -15313 -15319 -15691 -15693 -15700 -15702 -15708 -16491 -16536 -17908 -17910 -17917 -17919 -17925 -18294 -18296 -18303 -18305 -18311> {PUBLIC} "ArrayType" "de.uni_koblenz.jgralab.jex.schema.ArrayType";
224 Parameter <375 -376> {} "vertex";
225 Method <380 -381> {PUBLIC} "remove_arrayType";
226 WildcardType <377 -379> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
227 ParametrizedType <378 379 -380 892 893 -894 1095 1096 -1097 1493 1494 -1495 1898 1899 -1900 2776 2777 -2778 3586 3587 -3588 5525 5526 -5527 5623 5624 -5625 5926 5927 -5928 6380 6381 -6382 6595 6596 -6597 7471 7472 -7473 7885 7886 -7887 8552 8553 -8554 10696 10697 -10698 12752 12753 -12754 15305 15306 -15307 15694 15695 -15696 17911 17912 -17913 18297 18298 -18299> n "List<? extends ArrayType>" "java.util.List<? extends de.uni_koblenz.jgralab.jex.schema.ArrayType>";
228 Method <382 -383 385> {PUBLIC} "remove_arrayType";
229 Parameter <384 -385> {} "vertex";
230 Method <387 390 -391> {PUBLIC} "get_arrayType";
231 TypeParameter <386 -387 -389> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_arrayType().V";
232 ParametrizedType <388 389 -390 394 395 -396> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_arrayType|V>";
233 Method <393 396 -397 401> {PUBLIC} "get_arrayType";
234 TypeParameter <392 -393 -395 -399> n "V" "de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_arrayType(VertexFilter<V>).V";
235 ParametrizedType <398 399 -400> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier.get_arrayType|V>";
236 Parameter <400 -401> {} "filter";
237 Method <404 -405> {PUBLIC} "getDeclaresConstructorIncidences";
238 ParametrizedType <402 403 -404 406 407 -408 2108 2109 -2110 2112 2113 -2114 3957 3958 -3959 7605 7606 -7607 7609 7610 -7611 8686 8687 -8688 8690 8691 -8692 9028 9029 -9030 9032 9033 -9034 10840 10841 -10842 10844 10845 -10846 12886 12887 -12888 12890 12891 -12892 13631 13632 -13633 15439 15440 -15441 15443 15444 -15445 18045 18046 -18047 18049 18050 -18051> n "Iterable<DeclaresConstructor>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.DeclaresConstructor>";
239 Method <408 -409 411> {PUBLIC} "getDeclaresConstructorIncidences";
240 Parameter <410 -411> {} "direction";
241 Method <414 -415> {PUBLIC} "getExtendsIncidences";
242 ParametrizedType <412 413 -414 416 417 -418 1932 1933 -1934 1936 1937 -1938 3909 3910 -3911 7625 7626 -7627 7629 7630 -7631 8706 8707 -8708 8710 8711 -8712 10860 10861 -10862 10864 10865 -10866 12906 12907 -12908 12910 12911 -12912 13583 13584 -13585 15449 15450 -15451 15453 15454 -15455 18055 18056 -18057 18059 18060 -18061> n "Iterable<Extends>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Extends>";
243 Method <418 -419 421> {PUBLIC} "getExtendsIncidences";
244 Parameter <420 -421> {} "direction";
245 Method <424 -425> {PUBLIC} "getDefinesIncidences";
246 ParametrizedType <422 423 -424 426 427 -428 3897 3898 -3899 5797 5798 -5799 5801 5802 -5803 7495 7496 -7497 7499 7500 -7501 8576 8577 -8578 8580 8581 -8582 10720 10721 -10722 10724 10725 -10726 12776 12777 -12778 12780 12781 -12782 13571 13572 -13573 15329 15330 -15331 15333 15334 -15335 17264 17265 -17266 17268 17269 -17270 17935 17936 -17937 17939 17940 -17941> n "Iterable<Defines>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Defines>";
247 Method <428 -429 431> {PUBLIC} "getDefinesIncidences";
248 Parameter <430 -431> {} "direction";
249 Method <434 -435> {PUBLIC} "getImplementsIncidences";
250 ParametrizedType <432 433 -434 436 437 -438 1942 1943 -1944 1946 1947 -1948 3913 3914 -3915 7635 7636 -7637 7639 7640 -7641 8716 8717 -8718 8720 8721 -8722 10870 10871 -10872 10874 10875 -10876 12916 12917 -12918 12920 12921 -12922 13587 13588 -13589 15469 15470 -15471 15473 15474 -15475 18065 18066 -18067 18069 18070 -18071> n "Iterable<Implements>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Implements>";
251 Method <438 -439 441> {PUBLIC} "getImplementsIncidences";
252 Parameter <440 -441> {} "direction";
253 Method <444 -445> {PUBLIC} "getContainsClassifierIncidences";
254 ParametrizedType <442 443 -444 446 447 -448 3893 3894 -3895 5049 5050 -5051 5053 5054 -5055 7515 7516 -7517 7519 7520 -7521 8596 8597 -8598 8600 8601 -8602 10740 10741 -10742 10744 10745 -10746 12796 12797 -12798 12800 12801 -12802 13567 13568 -13569 14525 14526 -14527 14529 14530 -14531 15349 15350 -15351 15353 15354 -15355 17955 17956 -17957 17959 17960 -17961> n "Iterable<ContainsClassifier>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ContainsClassifier>";
255 Method <448 -449 451> {PUBLIC} "getContainsClassifierIncidences";
256 Parameter <450 -451> {} "direction";
257 Method <454 -455> {PUBLIC} "getDeclaresNestedClassifierIncidences";
258 ParametrizedType <452 453 -454 456 457 -458 3969 3970 -3971 7655 7656 -7657 7659 7660 -7661 8736 8737 -8738 8740 8741 -8742 10890 10891 -10892 10894 10895 -10896 12936 12937 -12938 12940 12941 -12942 13643 13644 -13645 15489 15490 -15491 15493 15494 -15495 18085 18086 -18087 18089 18090 -18091> n "Iterable<DeclaresNestedClassifier>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.DeclaresNestedClassifier>";
259 Method <458 -459 461> {PUBLIC} "getDeclaresNestedClassifierIncidences";
260 Parameter <460 -461> {} "direction";
261 Method <464 -465> {PUBLIC} "getDeclaresFieldIncidences";
262 ParametrizedType <462 463 -464 466 467 -468 2986 2987 -2988 2990 2991 -2992 3949 3950 -3951 7685 7686 -7687 7689 7690 -7691 8756 8757 -8758 8760 8761 -8762 10910 10911 -10912 10914 10915 -10916 11194 11195 -11196 11198 11199 -11200 12956 12957 -12958 12960 12961 -12962 13623 13624 -13625 15509 15510 -15511 15513 15514 -15515 18105 18106 -18107 18109 18110 -18111> n "Iterable<DeclaresField>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.DeclaresField>";
263 Method <468 -469 471> {PUBLIC} "getDeclaresFieldIncidences";
264 Parameter <470 -471> {} "direction";
265 Method <474 -475> {PUBLIC} "getDeclaresMethodIncidences";
266 ParametrizedType <472 473 -474 476 477 -478 3953 3954 -3955 4642 4643 -4644 4646 4647 -4648 7535 7536 -7537 7539 7540 -7541 8616 8617 -8618 8620 8621 -8622 10770 10771 -10772 10774 10775 -10776 12816 12817 -12818 12820 12821 -12822 13627 13628 -13629 14277 14278 -14279 14281 14282 -14283 15369 15370 -15371 15373 15374 -15375 17975 17976 -17977 17979 17980 -17981> n "Iterable<DeclaresMethod>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.DeclaresMethod>";
267 Method <478 -479 481> {PUBLIC} "getDeclaresMethodIncidences";
268 Parameter <480 -481> {} "direction";
269 Method <484 -485> {PUBLIC} "getDeclaresIncidences";
270 ParametrizedType <482 483 -484 486 487 -488 3901 3902 -3903 4458 4459 -4460 4462 4463 -4464 6863 6864 -6865 6867 6868 -6869 7595 7596 -7597 7599 7600 -7601 8676 8677 -8678 8680 8681 -8682 9078 9079 -9080 9082 9083 -9084 10088 10089 -10090 10092 10093 -10094 10830 10831 -10832 10834 10835 -10836 11214 11215 -11216 11218 11219 -11220 12876 12877 -12878 12880 12881 -12882 13575 13576 -13577 14317 14318 -14319 14321 14322 -14323 15429 15430 -15431 15433 15434 -15435 18035 18036 -18037 18039 18040 -18041> n "Iterable<Declares>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Declares>";
271 Method <488 -489 491> {PUBLIC} "getDeclaresIncidences";
272 Parameter <490 -491> {} "direction";
273 SourceFile <494 926> 511 "src/de/uni_koblenz/jgralab/jex/schema/Annotation.java";
274 Interface <495 496 498 500 -501 502 504 506 508 510 512 514 516 518 520 524 531 533 541 547 553 560 562 570 576 582 589 591 599 605 611 618 620 628 634 640 647 649 653 655 662 664 672 678 684 691 693 701 707 713 720 722 730 736 742 749 751 759 765 771 778 780 784 786 793 795 803 809 815 822 824 832 838 844 851 853 861 867 873 880 882 886 888 895 897 905 911 919 923 -926 -927 -2180 -2202 -3617 -3619 -3661 -4178 -4182 -4186 -6883 -6966 -9270 -9353 -13047 -13049 -13051 -13127 -13135 -13852 -13856 -13860 -15919 -15973> {PUBLIC} "Annotation" "de.uni_koblenz.jgralab.jex.schema.Annotation";
275 Field <497 -498> {PUBLIC FINAL STATIC} "VC";
276 Method <499 -500> {PUBLIC} "getNextAbstractClassifier";
277 Method <501 -502> {PUBLIC} "getNextAnnotation";
278 Method <503 -504> {PUBLIC} "getNextClassifier";
279 Method <505 -506> {PUBLIC} "getNextMember";
280 Method <507 -508> {PUBLIC} "getNextModifiableElement";
281 Method <509 -510> {PUBLIC} "getNextNamedElement";
282 Method <511 -512> {PUBLIC} "getNextQualifiedNamedElement";
283 Method <513 -514> {PUBLIC} "getNextType";
284 Method <515 -516> {PUBLIC} "getNextTypeParametrizable";
285 Method <517 -518> {PUBLIC} "getFirstDeclaresAnnotationElementIncidence";
286 Interface <-517 -519 -581 -917 -921 -944 -946 -1010 -1014 2182 2183 2185 2187 -2188 2189 2191 2193 -2196 2197 -2198 2199 2203 2205 -2206 -2207 -3657 -3659 -3966 -6756 -6758 -6844 -6848 -7090 -7092 -7160 -7676 -7680 -9275 -9331 -9339 -9341 -13123 -13125 -13131 -13640 -15924 -15959 -15967 -15969> {PUBLIC} "DeclaresAnnotationElement" "de.uni_koblenz.jgralab.jex.schema.DeclaresAnnotationElement";
287 Method <519 -520 522> {PUBLIC} "getFirstDeclaresAnnotationElementIncidence";
288 Parameter <521 -522> {} "orientation";
289 Method <523 -524 526> {PUBLIC} "add_constructors";
290 Parameter <525 -526> {} "vertex";
291 Method <530 -531> {PUBLIC} "remove_constructors";
292 WildcardType <527 -529> "? extends Constructor" "? extends de.uni_koblenz.jgralab.jex.schema.Constructor";
293 Method <532 -533 535> {PUBLIC} "remove_constructors";
294 Parameter <534 -535> {} "vertex";
295 Method <537 540 -541> {PUBLIC} "get_constructors";
296 TypeParameter <536 -537 -539> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_constructors().V";
297 ParametrizedType <538 539 -540 544 545 -546> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Annotation.get_constructors|V>";
298 Method <543 546 -547 551> {PUBLIC} "get_constructors";
299 TypeParameter <542 -543 -545 -549> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_constructors(VertexFilter<V>).V";
300 ParametrizedType <548 549 -550> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Annotation.get_constructors|V>";
301 Parameter <550 -551> {} "filter";
302 Method <552 -553 555> {PUBLIC} "add_importers";
303 Parameter <554 -555> {} "vertex";
304 Method <559 -560> {PUBLIC} "remove_importers";
305 WildcardType <556 -558> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
306 Method <561 -562 564> {PUBLIC} "remove_importers";
307 Parameter <563 -564> {} "vertex";
308 Method <566 569 -570> {PUBLIC} "get_importers";
309 TypeParameter <565 -566 -568> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_importers().V";
310 ParametrizedType <567 568 -569 573 574 -575> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Annotation.get_importers|V>";
311 Method <572 575 -576 580> {PUBLIC} "get_importers";
312 TypeParameter <571 -572 -574 -578> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_importers(VertexFilter<V>).V";
313 ParametrizedType <577 578 -579> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Annotation.get_importers|V>";
314 Parameter <579 -580> {} "filter";
315 Method <581 -582 584> {PUBLIC} "add_annotationElements";
316 Interface <-583 -585 -592 -594 -600 929 930 931 933 -934 935 937 939 941 943 945 947 951 958 960 968 974 980 987 989 993 995 1002 1004 1008 1012 1016 -1019 -1020 -2181 -2204 -3621 -3623 -3663 -4274 -4278 -4282 -6666 -6740 -7162 -7164 -7171 -7173 -7179 -9271 -9355 -13055 -13057 -13059 -13129 -13137 -13948 -13952 -13956 -15920 -15975> {PUBLIC} "AnnotationElement" "de.uni_koblenz.jgralab.jex.schema.AnnotationElement";
317 Parameter <583 -584> {} "vertex";
318 Method <588 -589> {PUBLIC} "remove_annotationElements";
319 WildcardType <585 -587> "? extends AnnotationElement" "? extends de.uni_koblenz.jgralab.jex.schema.AnnotationElement";
320 ParametrizedType <586 587 -588 7165 7166 -7167> n "List<? extends AnnotationElement>" "java.util.List<? extends de.uni_koblenz.jgralab.jex.schema.AnnotationElement>";
321 Method <590 -591 593> {PUBLIC} "remove_annotationElements";
322 Parameter <592 -593> {} "vertex";
323 Method <595 598 -599> {PUBLIC} "get_annotationElements";
324 TypeParameter <594 -595 -597> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_annotationElements().V";
325 ParametrizedType <596 597 -598 602 603 -604> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Annotation.get_annotationElements|V>";
326 Method <601 604 -605 609> {PUBLIC} "get_annotationElements";
327 TypeParameter <600 -601 -603 -607> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_annotationElements(VertexFilter<V>).V";
328 ParametrizedType <606 607 -608> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Annotation.get_annotationElements|V>";
329 Parameter <608 -609> {} "filter";
330 Method <610 -611 613> {PUBLIC} "add_fields";
331 Parameter <612 -613> {} "vertex";
332 Method <617 -618> {PUBLIC} "remove_fields";
333 WildcardType <614 -616> "? extends Field" "? extends de.uni_koblenz.jgralab.jex.schema.Field";
334 Method <619 -620 622> {PUBLIC} "remove_fields";
335 Parameter <621 -622> {} "vertex";
336 Method <624 627 -628> {PUBLIC} "get_fields";
337 TypeParameter <623 -624 -626> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_fields().V";
338 ParametrizedType <625 626 -627 631 632 -633> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Annotation.get_fields|V>";
339 Method <630 633 -634 638> {PUBLIC} "get_fields";
340 TypeParameter <629 -630 -632 -636> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_fields(VertexFilter<V>).V";
341 ParametrizedType <635 636 -637> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Annotation.get_fields|V>";
342 Parameter <637 -638> {} "filter";
343 Method <639 -640 642> {PUBLIC} "add_sourceFile";
344 Parameter <641 -642> {} "vertex";
345 Method <646 -647> {PUBLIC} "remove_sourceFile";
346 WildcardType <643 -645> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
347 Method <648 -649 651> {PUBLIC} "remove_sourceFile";
348 Parameter <650 -651> {} "vertex";
349 Method <652 -653> {PUBLIC} "get_sourceFile";
350 Method <654 -655 657> {PUBLIC} "add_members";
351 Parameter <656 -657> {} "vertex";
352 Method <661 -662> {PUBLIC} "remove_members";
353 WildcardType <658 -660> "? extends Member" "? extends de.uni_koblenz.jgralab.jex.schema.Member";
354 Method <663 -664 666> {PUBLIC} "remove_members";
355 Parameter <665 -666> {} "vertex";
356 Method <668 671 -672> {PUBLIC} "get_members";
357 TypeParameter <667 -668 -670> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_members().V";
358 ParametrizedType <669 670 -671 675 676 -677> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Annotation.get_members|V>";
359 Method <674 677 -678 682> {PUBLIC} "get_members";
360 TypeParameter <673 -674 -676 -680> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_members(VertexFilter<V>).V";
361 ParametrizedType <679 680 -681> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Annotation.get_members|V>";
362 Parameter <681 -682> {} "filter";
363 Method <683 -684 686> {PUBLIC} "add_subclasses";
364 Parameter <685 -686> {} "vertex";
365 Method <690 -691> {PUBLIC} "remove_subclasses";
366 WildcardType <687 -689> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
367 Method <692 -693 695> {PUBLIC} "remove_subclasses";
368 Parameter <694 -695> {} "vertex";
369 Method <697 700 -701> {PUBLIC} "get_subclasses";
370 TypeParameter <696 -697 -699> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_subclasses().V";
371 ParametrizedType <698 699 -700 704 705 -706> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Annotation.get_subclasses|V>";
372 Method <703 706 -707 711> {PUBLIC} "get_subclasses";
373 TypeParameter <702 -703 -705 -709> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_subclasses(VertexFilter<V>).V";
374 ParametrizedType <708 709 -710> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Annotation.get_subclasses|V>";
375 Parameter <710 -711> {} "filter";
376 Method <712 -713 715> {PUBLIC} "add_interfaces";
377 Parameter <714 -715> {} "vertex";
378 Method <719 -720> {PUBLIC} "remove_interfaces";
379 WildcardType <716 -718> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
380 Method <721 -722 724> {PUBLIC} "remove_interfaces";
381 Parameter <723 -724> {} "vertex";
382 Method <726 729 -730> {PUBLIC} "get_interfaces";
383 TypeParameter <725 -726 -728> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_interfaces().V";
384 ParametrizedType <727 728 -729 733 734 -735> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Annotation.get_interfaces|V>";
385 Method <732 735 -736 740> {PUBLIC} "get_interfaces";
386 TypeParameter <731 -732 -734 -738> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_interfaces(VertexFilter<V>).V";
387 ParametrizedType <737 738 -739> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Annotation.get_interfaces|V>";
388 Parameter <739 -740> {} "filter";
389 Method <741 -742 744> {PUBLIC} "add_nestedClassifiers";
390 Parameter <743 -744> {} "vertex";
391 Method <748 -749> {PUBLIC} "remove_nestedClassifiers";
392 WildcardType <745 -747> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
393 Method <750 -751 753> {PUBLIC} "remove_nestedClassifiers";
394 Parameter <752 -753> {} "vertex";
395 Method <755 758 -759> {PUBLIC} "get_nestedClassifiers";
396 TypeParameter <754 -755 -757> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_nestedClassifiers().V";
397 ParametrizedType <756 757 -758 762 763 -764> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Annotation.get_nestedClassifiers|V>";
398 Method <761 764 -765 769> {PUBLIC} "get_nestedClassifiers";
399 TypeParameter <760 -761 -763 -767> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_nestedClassifiers(VertexFilter<V>).V";
400 ParametrizedType <766 767 -768> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Annotation.get_nestedClassifiers|V>";
401 Parameter <768 -769> {} "filter";
402 Method <770 -771 773> {PUBLIC} "add_superclass";
403 Parameter <772 -773> {} "vertex";
404 Method <777 -778> {PUBLIC} "remove_superclass";
405 WildcardType <774 -776> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
406 Method <779 -780 782> {PUBLIC} "remove_superclass";
407 Parameter <781 -782> {} "vertex";
408 Method <783 -784> {PUBLIC} "get_superclass";
409 Method <785 -786 788> {PUBLIC} "add_typeParams";
410 Parameter <787 -788> {} "vertex";
411 Method <792 -793> {PUBLIC} "remove_typeParams";
412 WildcardType <789 -791> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
413 Method <794 -795 797> {PUBLIC} "remove_typeParams";
414 Parameter <796 -797> {} "vertex";
415 Method <799 802 -803> {PUBLIC} "get_typeParams";
416 TypeParameter <798 -799 -801> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_typeParams().V";
417 ParametrizedType <800 801 -802 806 807 -808> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Annotation.get_typeParams|V>";
418 Method <805 808 -809 813> {PUBLIC} "get_typeParams";
419 TypeParameter <804 -805 -807 -811> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_typeParams(VertexFilter<V>).V";
420 ParametrizedType <810 811 -812> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Annotation.get_typeParams|V>";
421 Parameter <812 -813> {} "filter";
422 Method <814 -815 817> {PUBLIC} "add_implementors";
423 Parameter <816 -817> {} "vertex";
424 Method <821 -822> {PUBLIC} "remove_implementors";
425 WildcardType <818 -820> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
426 Method <823 -824 826> {PUBLIC} "remove_implementors";
427 Parameter <825 -826> {} "vertex";
428 Method <828 831 -832> {PUBLIC} "get_implementors";
429 TypeParameter <827 -828 -830> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_implementors().V";
430 ParametrizedType <829 830 -831 835 836 -837> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Annotation.get_implementors|V>";
431 Method <834 837 -838 842> {PUBLIC} "get_implementors";
432 TypeParameter <833 -834 -836 -840> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_implementors(VertexFilter<V>).V";
433 ParametrizedType <839 840 -841> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Annotation.get_implementors|V>";
434 Parameter <841 -842> {} "filter";
435 Method <843 -844 846> {PUBLIC} "add_methods";
436 Parameter <845 -846> {} "vertex";
437 Method <850 -851> {PUBLIC} "remove_methods";
438 WildcardType <847 -849> "? extends Method" "? extends de.uni_koblenz.jgralab.jex.schema.Method";
439 Method <852 -853 855> {PUBLIC} "remove_methods";
440 Parameter <854 -855> {} "vertex";
441 Method <857 860 -861> {PUBLIC} "get_methods";
442 TypeParameter <856 -857 -859> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_methods().V";
443 ParametrizedType <858 859 -860 864 865 -866> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Annotation.get_methods|V>";
444 Method <863 866 -867 871> {PUBLIC} "get_methods";
445 TypeParameter <862 -863 -865 -869> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_methods(VertexFilter<V>).V";
446 ParametrizedType <868 869 -870> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Annotation.get_methods|V>";
447 Parameter <870 -871> {} "filter";
448 Method <872 -873 875> {PUBLIC} "add_parent";
449 Parameter <874 -875> {} "vertex";
450 Method <879 -880> {PUBLIC} "remove_parent";
451 WildcardType <876 -878> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
452 Method <881 -882 884> {PUBLIC} "remove_parent";
453 Parameter <883 -884> {} "vertex";
454 Method <885 -886> {PUBLIC} "get_parent";
455 Method <887 -888 890> {PUBLIC} "add_arrayType";
456 Parameter <889 -890> {} "vertex";
457 Method <894 -895> {PUBLIC} "remove_arrayType";
458 WildcardType <891 -893> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
459 Method <896 -897 899> {PUBLIC} "remove_arrayType";
460 Parameter <898 -899> {} "vertex";
461 Method <901 904 -905> {PUBLIC} "get_arrayType";
462 TypeParameter <900 -901 -903> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_arrayType().V";
463 ParametrizedType <902 903 -904 908 909 -910> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Annotation.get_arrayType|V>";
464 Method <907 910 -911 915> {PUBLIC} "get_arrayType";
465 TypeParameter <906 -907 -909 -913> n "V" "de.uni_koblenz.jgralab.jex.schema.Annotation.get_arrayType(VertexFilter<V>).V";
466 ParametrizedType <912 913 -914> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Annotation.get_arrayType|V>";
467 Parameter <914 -915> {} "filter";
468 Method <918 -919> {PUBLIC} "getDeclaresAnnotationElementIncidences";
469 ParametrizedType <916 917 -918 920 921 -922 1009 1010 -1011 1013 1014 -1015 3965 3966 -3967 6843 6844 -6845 6847 6848 -6849 7675 7676 -7677 7679 7680 -7681 13639 13640 -13641> n "Iterable<DeclaresAnnotationElement>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.DeclaresAnnotationElement>";
470 Method <922 -923 925> {PUBLIC} "getDeclaresAnnotationElementIncidences";
471 Parameter <924 -925> {} "direction";
472 SourceFile <928 1019> 145 "src/de/uni_koblenz/jgralab/jex/schema/AnnotationElement.java";
473 Interface <-930 -942 -2907 -2919 -3100 -3112 -3777 -3875 -4034 -4038 -4042 -4472 -4488 -5063 -5073 6480 6481 6483 6485 -6486 6487 6489 6491 6495 6502 6504 6508 6512 6516 -6519 -6520 -6668 -6748 -11019 -11099 -11756 -11829 -13359 -13367 -13545 -13708 -13712 -13716 -13983 -14067 -14557 -14635 -16777 -16821> {PUBLIC} "TypedElement" "de.uni_koblenz.jgralab.jex.schema.TypedElement";
474 Field <932 -933> {PUBLIC FINAL STATIC} "VC";
475 Method <934 -935> {PUBLIC} "getNextAnnotationElement";
476 Method <936 -937> {PUBLIC} "getNextMember";
477 Method <938 -939> {PUBLIC} "getNextModifiableElement";
478 Method <940 -941> {PUBLIC} "getNextNamedElement";
479 Method <942 -943> {PUBLIC} "getNextTypedElement";
480 Method <944 -945> {PUBLIC} "getFirstDeclaresAnnotationElementIncidence";
481 Method <946 -947 949> {PUBLIC} "getFirstDeclaresAnnotationElementIncidence";
482 Parameter <948 -949> {} "orientation";
483 Method <950 -951 953> {PUBLIC} "add_importers";
484 Parameter <952 -953> {} "vertex";
485 Method <957 -958> {PUBLIC} "remove_importers";
486 WildcardType <954 -956> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
487 Method <959 -960 962> {PUBLIC} "remove_importers";
488 Parameter <961 -962> {} "vertex";
489 Method <964 967 -968> {PUBLIC} "get_importers";
490 TypeParameter <963 -964 -966> n "V" "de.uni_koblenz.jgralab.jex.schema.AnnotationElement.get_importers().V";
491 ParametrizedType <965 966 -967 971 972 -973> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.AnnotationElement.get_importers|V>";
492 Method <970 973 -974 978> {PUBLIC} "get_importers";
493 TypeParameter <969 -970 -972 -976> n "V" "de.uni_koblenz.jgralab.jex.schema.AnnotationElement.get_importers(VertexFilter<V>).V";
494 ParametrizedType <975 976 -977> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.AnnotationElement.get_importers|V>";
495 Parameter <977 -978> {} "filter";
496 Method <979 -980 982> {PUBLIC} "add_parent";
497 Parameter <981 -982> {} "vertex";
498 Method <986 -987> {PUBLIC} "remove_parent";
499 WildcardType <983 -985> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
500 Method <988 -989 991> {PUBLIC} "remove_parent";
501 Parameter <990 -991> {} "vertex";
502 Method <992 -993> {PUBLIC} "get_parent";
503 Method <994 -995 997> {PUBLIC} "add_type";
504 Interface <-994 -2971 3101 3103 -3104 3105 -3106 3107 -3108 3109 3113 3115 -3116 -3117 -3773 -3775 -3882 -4627 -5125 -5856 -5858 -5961 -5965 -6488 -6490 -6494 -6510 -6514 -6750 -6752 -6818 -6834 -6838 -7072 -7074 -7646 -7650 -7794 -7796 -7920 -7924 -8188 -8190 -8727 -8731 -10303 -10305 -10881 -10885 -11101 -11103 -11169 -11185 -11189 -11760 -11813 -11815 -11817 -12388 -12390 -12927 -12931 -13355 -13357 -13363 -13556 -14069 -14071 -14242 -14258 -14262 -14637 -14639 -14699 -14715 -14719 -14941 -14943 -15480 -15484 -15618 -15620 -15729 -15733 -16781 -16813 -16815 -16817 -17562 -17564 -18076 -18080 -18206 -18208 -18347 -18351> {PUBLIC} "HasType" "de.uni_koblenz.jgralab.jex.schema.HasType";
505 Parameter <996 -997> {} "vertex";
506 Method <1001 -1002> {PUBLIC} "remove_type";
507 WildcardType <998 -1000> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
508 ParametrizedType <999 1000 -1001 1080 1081 -1082 2011 2012 -2013 2976 2977 -2978 4530 4531 -4532 4632 4633 -4634 4717 4718 -4719 5130 5131 -5132 5452 5453 -5454 6336 6337 -6338 6499 6500 -6501 6580 6581 -6582 6624 6625 -6626 6823 6824 -6825 7870 7871 -7872 8931 8932 -8933 11174 11175 -11176 14145 14146 -14147 14247 14248 -14249 14704 14705 -14706 15232 15233 -15234 17867 17868 -17869 18282 18283 -18284 18326 18327 -18328> n "List<? extends Type>" "java.util.List<? extends de.uni_koblenz.jgralab.jex.schema.Type>";
509 Method <1003 -1004 1006> {PUBLIC} "remove_type";
510 Parameter <1005 -1006> {} "vertex";
511 Method <1007 -1008> {PUBLIC} "get_type";
512 Method <1011 -1012> {PUBLIC} "getDeclaresAnnotationElementIncidences";
513 Method <1015 -1016 1018> {PUBLIC} "getDeclaresAnnotationElementIncidences";
514 Parameter <1017 -1018> {} "direction";
515 SourceFile <1021 1129> 146 "src/de/uni_koblenz/jgralab/jex/schema/ArrayType.java";
516 Field <1024 -1025> {PUBLIC FINAL STATIC} "VC";
517 Method <1026 -1027> {PUBLIC} "get_dimensions";
518 Method <1028 -1029 1031> {PUBLIC} "set_dimensions";
519 Parameter <1030 -1031> {} "_dimensions";
520 Method <1032 -1033> {PUBLIC} "getNextArrayType";
521 Method <1034 -1035> {PUBLIC} "getNextNamedElement";
522 Method <1036 -1037> {PUBLIC} "getNextQualifiedNamedElement";
523 Method <1038 -1039> {PUBLIC} "getNextType";
524 Method <1040 -1041> {PUBLIC} "getFirstHasElementTypeIncidence";
525 Method <1042 -1043 1045> {PUBLIC} "getFirstHasElementTypeIncidence";
526 Parameter <1044 -1045> {} "orientation";
527 Method <1046 -1047 1049> {PUBLIC} "add_importers";
528 Parameter <1048 -1049> {} "vertex";
529 Method <1053 -1054> {PUBLIC} "remove_importers";
530 WildcardType <1050 -1052> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
531 Method <1055 -1056 1058> {PUBLIC} "remove_importers";
532 Parameter <1057 -1058> {} "vertex";
533 Method <1060 1063 -1064> {PUBLIC} "get_importers";
534 TypeParameter <1059 -1060 -1062> n "V" "de.uni_koblenz.jgralab.jex.schema.ArrayType.get_importers().V";
535 ParametrizedType <1061 1062 -1063 1067 1068 -1069> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ArrayType.get_importers|V>";
536 Method <1066 1069 -1070 1074> {PUBLIC} "get_importers";
537 TypeParameter <1065 -1066 -1068 -1072> n "V" "de.uni_koblenz.jgralab.jex.schema.ArrayType.get_importers(VertexFilter<V>).V";
538 ParametrizedType <1071 1072 -1073> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.ArrayType.get_importers|V>";
539 Parameter <1073 -1074> {} "filter";
540 Method <1075 -1076 1078> {PUBLIC} "add_elementType";
541 Parameter <1077 -1078> {} "vertex";
542 Method <1082 -1083> {PUBLIC} "remove_elementType";
543 WildcardType <1079 -1081> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
544 Method <1084 -1085 1087> {PUBLIC} "remove_elementType";
545 Parameter <1086 -1087> {} "vertex";
546 Method <1088 -1089> {PUBLIC} "get_elementType";
547 Method <1090 -1091 1093> {PUBLIC} "add_arrayType";
548 Parameter <1092 -1093> {} "vertex";
549 Method <1097 -1098> {PUBLIC} "remove_arrayType";
550 WildcardType <1094 -1096> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
551 Method <1099 -1100 1102> {PUBLIC} "remove_arrayType";
552 Parameter <1101 -1102> {} "vertex";
553 Method <1104 1107 -1108> {PUBLIC} "get_arrayType";
554 TypeParameter <1103 -1104 -1106> n "V" "de.uni_koblenz.jgralab.jex.schema.ArrayType.get_arrayType().V";
555 ParametrizedType <1105 1106 -1107 1111 1112 -1113> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ArrayType.get_arrayType|V>";
556 Method <1110 1113 -1114 1118> {PUBLIC} "get_arrayType";
557 TypeParameter <1109 -1110 -1112 -1116> n "V" "de.uni_koblenz.jgralab.jex.schema.ArrayType.get_arrayType(VertexFilter<V>).V";
558 ParametrizedType <1115 1116 -1117> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.ArrayType.get_arrayType|V>";
559 Parameter <1117 -1118> {} "filter";
560 Method <1121 -1122> {PUBLIC} "getHasElementTypeIncidences";
561 ParametrizedType <1119 1120 -1121 1123 1124 -1125 3917 3918 -3919 5990 5991 -5992 5994 5995 -5996 7545 7546 -7547 7549 7550 -7551 7959 7960 -7961 7963 7964 -7965 8626 8627 -8628 8630 8631 -8632 10780 10781 -10782 10784 10785 -10786 12826 12827 -12828 12830 12831 -12832 13591 13592 -13593 15379 15380 -15381 15383 15384 -15385 15768 15769 -15770 15772 15773 -15774 17985 17986 -17987 17989 17990 -17991 18386 18387 -18388 18390 18391 -18392> n "Iterable<HasElementType>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.HasElementType>";
562 Method <1125 -1126 1128> {PUBLIC} "getHasElementTypeIncidences";
563 Parameter <1127 -1128> {} "direction";
564 SourceFile <1517> 458 "src/de/uni_koblenz/jgralab/jex/schema/Class.java";
565 Interface <1131 1132 1134 1136 -1137 1138 1140 1142 1144 1146 1148 1150 1152 1154 1161 1163 1171 1177 1183 1190 1192 1200 1206 1212 1219 1221 1229 1235 1241 1248 1250 1254 1256 1263 1265 1273 1279 1285 1292 1294 1302 1308 1314 1321 1323 1331 1337 1343 1350 1352 1360 1366 1372 1379 1381 1385 1387 1394 1396 1404 1410 1416 1423 1425 1433 1439 1445 1452 1454 1462 1468 1474 1481 1483 1487 1489 1496 1498 1506 1512 -1517 -1518 -3629 -3631 -4226 -4230 -4234 -7999 -8082 -13071 -13073 -13075 -13900 -13904 -13908> {PUBLIC} "Class" "de.uni_koblenz.jgralab.jex.schema.Class";
566 Field <1133 -1134> {PUBLIC FINAL STATIC} "VC";
567 Method <1135 -1136> {PUBLIC} "getNextAbstractClassifier";
568 Method <1137 -1138> {PUBLIC} "getNextClass";
569 Method <1139 -1140> {PUBLIC} "getNextClassifier";
570 Method <1141 -1142> {PUBLIC} "getNextMember";
571 Method <1143 -1144> {PUBLIC} "getNextModifiableElement";
572 Method <1145 -1146> {PUBLIC} "getNextNamedElement";
573 Method <1147 -1148> {PUBLIC} "getNextQualifiedNamedElement";
574 Method <1149 -1150> {PUBLIC} "getNextType";
575 Method <1151 -1152> {PUBLIC} "getNextTypeParametrizable";
576 Method <1153 -1154 1156> {PUBLIC} "add_constructors";
577 Parameter <1155 -1156> {} "vertex";
578 Method <1160 -1161> {PUBLIC} "remove_constructors";
579 WildcardType <1157 -1159> "? extends Constructor" "? extends de.uni_koblenz.jgralab.jex.schema.Constructor";
580 Method <1162 -1163 1165> {PUBLIC} "remove_constructors";
581 Parameter <1164 -1165> {} "vertex";
582 Method <1167 1170 -1171> {PUBLIC} "get_constructors";
583 TypeParameter <1166 -1167 -1169> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_constructors().V";
584 ParametrizedType <1168 1169 -1170 1174 1175 -1176> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Class.get_constructors|V>";
585 Method <1173 1176 -1177 1181> {PUBLIC} "get_constructors";
586 TypeParameter <1172 -1173 -1175 -1179> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_constructors(VertexFilter<V>).V";
587 ParametrizedType <1178 1179 -1180> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Class.get_constructors|V>";
588 Parameter <1180 -1181> {} "filter";
589 Method <1182 -1183 1185> {PUBLIC} "add_importers";
590 Parameter <1184 -1185> {} "vertex";
591 Method <1189 -1190> {PUBLIC} "remove_importers";
592 WildcardType <1186 -1188> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
593 Method <1191 -1192 1194> {PUBLIC} "remove_importers";
594 Parameter <1193 -1194> {} "vertex";
595 Method <1196 1199 -1200> {PUBLIC} "get_importers";
596 TypeParameter <1195 -1196 -1198> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_importers().V";
597 ParametrizedType <1197 1198 -1199 1203 1204 -1205> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Class.get_importers|V>";
598 Method <1202 1205 -1206 1210> {PUBLIC} "get_importers";
599 TypeParameter <1201 -1202 -1204 -1208> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_importers(VertexFilter<V>).V";
600 ParametrizedType <1207 1208 -1209> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Class.get_importers|V>";
601 Parameter <1209 -1210> {} "filter";
602 Method <1211 -1212 1214> {PUBLIC} "add_fields";
603 Parameter <1213 -1214> {} "vertex";
604 Method <1218 -1219> {PUBLIC} "remove_fields";
605 WildcardType <1215 -1217> "? extends Field" "? extends de.uni_koblenz.jgralab.jex.schema.Field";
606 Method <1220 -1221 1223> {PUBLIC} "remove_fields";
607 Parameter <1222 -1223> {} "vertex";
608 Method <1225 1228 -1229> {PUBLIC} "get_fields";
609 TypeParameter <1224 -1225 -1227> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_fields().V";
610 ParametrizedType <1226 1227 -1228 1232 1233 -1234> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Class.get_fields|V>";
611 Method <1231 1234 -1235 1239> {PUBLIC} "get_fields";
612 TypeParameter <1230 -1231 -1233 -1237> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_fields(VertexFilter<V>).V";
613 ParametrizedType <1236 1237 -1238> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Class.get_fields|V>";
614 Parameter <1238 -1239> {} "filter";
615 Method <1240 -1241 1243> {PUBLIC} "add_sourceFile";
616 Parameter <1242 -1243> {} "vertex";
617 Method <1247 -1248> {PUBLIC} "remove_sourceFile";
618 WildcardType <1244 -1246> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
619 Method <1249 -1250 1252> {PUBLIC} "remove_sourceFile";
620 Parameter <1251 -1252> {} "vertex";
621 Method <1253 -1254> {PUBLIC} "get_sourceFile";
622 Method <1255 -1256 1258> {PUBLIC} "add_members";
623 Parameter <1257 -1258> {} "vertex";
624 Method <1262 -1263> {PUBLIC} "remove_members";
625 WildcardType <1259 -1261> "? extends Member" "? extends de.uni_koblenz.jgralab.jex.schema.Member";
626 Method <1264 -1265 1267> {PUBLIC} "remove_members";
627 Parameter <1266 -1267> {} "vertex";
628 Method <1269 1272 -1273> {PUBLIC} "get_members";
629 TypeParameter <1268 -1269 -1271> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_members().V";
630 ParametrizedType <1270 1271 -1272 1276 1277 -1278> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Class.get_members|V>";
631 Method <1275 1278 -1279 1283> {PUBLIC} "get_members";
632 TypeParameter <1274 -1275 -1277 -1281> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_members(VertexFilter<V>).V";
633 ParametrizedType <1280 1281 -1282> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Class.get_members|V>";
634 Parameter <1282 -1283> {} "filter";
635 Method <1284 -1285 1287> {PUBLIC} "add_subclasses";
636 Parameter <1286 -1287> {} "vertex";
637 Method <1291 -1292> {PUBLIC} "remove_subclasses";
638 WildcardType <1288 -1290> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
639 Method <1293 -1294 1296> {PUBLIC} "remove_subclasses";
640 Parameter <1295 -1296> {} "vertex";
641 Method <1298 1301 -1302> {PUBLIC} "get_subclasses";
642 TypeParameter <1297 -1298 -1300> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_subclasses().V";
643 ParametrizedType <1299 1300 -1301 1305 1306 -1307> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Class.get_subclasses|V>";
644 Method <1304 1307 -1308 1312> {PUBLIC} "get_subclasses";
645 TypeParameter <1303 -1304 -1306 -1310> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_subclasses(VertexFilter<V>).V";
646 ParametrizedType <1309 1310 -1311> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Class.get_subclasses|V>";
647 Parameter <1311 -1312> {} "filter";
648 Method <1313 -1314 1316> {PUBLIC} "add_interfaces";
649 Parameter <1315 -1316> {} "vertex";
650 Method <1320 -1321> {PUBLIC} "remove_interfaces";
651 WildcardType <1317 -1319> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
652 Method <1322 -1323 1325> {PUBLIC} "remove_interfaces";
653 Parameter <1324 -1325> {} "vertex";
654 Method <1327 1330 -1331> {PUBLIC} "get_interfaces";
655 TypeParameter <1326 -1327 -1329> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_interfaces().V";
656 ParametrizedType <1328 1329 -1330 1334 1335 -1336> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Class.get_interfaces|V>";
657 Method <1333 1336 -1337 1341> {PUBLIC} "get_interfaces";
658 TypeParameter <1332 -1333 -1335 -1339> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_interfaces(VertexFilter<V>).V";
659 ParametrizedType <1338 1339 -1340> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Class.get_interfaces|V>";
660 Parameter <1340 -1341> {} "filter";
661 Method <1342 -1343 1345> {PUBLIC} "add_nestedClassifiers";
662 Parameter <1344 -1345> {} "vertex";
663 Method <1349 -1350> {PUBLIC} "remove_nestedClassifiers";
664 WildcardType <1346 -1348> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
665 Method <1351 -1352 1354> {PUBLIC} "remove_nestedClassifiers";
666 Parameter <1353 -1354> {} "vertex";
667 Method <1356 1359 -1360> {PUBLIC} "get_nestedClassifiers";
668 TypeParameter <1355 -1356 -1358> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_nestedClassifiers().V";
669 ParametrizedType <1357 1358 -1359 1363 1364 -1365> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Class.get_nestedClassifiers|V>";
670 Method <1362 1365 -1366 1370> {PUBLIC} "get_nestedClassifiers";
671 TypeParameter <1361 -1362 -1364 -1368> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_nestedClassifiers(VertexFilter<V>).V";
672 ParametrizedType <1367 1368 -1369> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Class.get_nestedClassifiers|V>";
673 Parameter <1369 -1370> {} "filter";
674 Method <1371 -1372 1374> {PUBLIC} "add_superclass";
675 Parameter <1373 -1374> {} "vertex";
676 Method <1378 -1379> {PUBLIC} "remove_superclass";
677 WildcardType <1375 -1377> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
678 Method <1380 -1381 1383> {PUBLIC} "remove_superclass";
679 Parameter <1382 -1383> {} "vertex";
680 Method <1384 -1385> {PUBLIC} "get_superclass";
681 Method <1386 -1387 1389> {PUBLIC} "add_typeParams";
682 Parameter <1388 -1389> {} "vertex";
683 Method <1393 -1394> {PUBLIC} "remove_typeParams";
684 WildcardType <1390 -1392> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
685 Method <1395 -1396 1398> {PUBLIC} "remove_typeParams";
686 Parameter <1397 -1398> {} "vertex";
687 Method <1400 1403 -1404> {PUBLIC} "get_typeParams";
688 TypeParameter <1399 -1400 -1402> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_typeParams().V";
689 ParametrizedType <1401 1402 -1403 1407 1408 -1409> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Class.get_typeParams|V>";
690 Method <1406 1409 -1410 1414> {PUBLIC} "get_typeParams";
691 TypeParameter <1405 -1406 -1408 -1412> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_typeParams(VertexFilter<V>).V";
692 ParametrizedType <1411 1412 -1413> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Class.get_typeParams|V>";
693 Parameter <1413 -1414> {} "filter";
694 Method <1415 -1416 1418> {PUBLIC} "add_implementors";
695 Parameter <1417 -1418> {} "vertex";
696 Method <1422 -1423> {PUBLIC} "remove_implementors";
697 WildcardType <1419 -1421> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
698 Method <1424 -1425 1427> {PUBLIC} "remove_implementors";
699 Parameter <1426 -1427> {} "vertex";
700 Method <1429 1432 -1433> {PUBLIC} "get_implementors";
701 TypeParameter <1428 -1429 -1431> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_implementors().V";
702 ParametrizedType <1430 1431 -1432 1436 1437 -1438> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Class.get_implementors|V>";
703 Method <1435 1438 -1439 1443> {PUBLIC} "get_implementors";
704 TypeParameter <1434 -1435 -1437 -1441> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_implementors(VertexFilter<V>).V";
705 ParametrizedType <1440 1441 -1442> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Class.get_implementors|V>";
706 Parameter <1442 -1443> {} "filter";
707 Method <1444 -1445 1447> {PUBLIC} "add_methods";
708 Parameter <1446 -1447> {} "vertex";
709 Method <1451 -1452> {PUBLIC} "remove_methods";
710 WildcardType <1448 -1450> "? extends Method" "? extends de.uni_koblenz.jgralab.jex.schema.Method";
711 Method <1453 -1454 1456> {PUBLIC} "remove_methods";
712 Parameter <1455 -1456> {} "vertex";
713 Method <1458 1461 -1462> {PUBLIC} "get_methods";
714 TypeParameter <1457 -1458 -1460> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_methods().V";
715 ParametrizedType <1459 1460 -1461 1465 1466 -1467> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Class.get_methods|V>";
716 Method <1464 1467 -1468 1472> {PUBLIC} "get_methods";
717 TypeParameter <1463 -1464 -1466 -1470> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_methods(VertexFilter<V>).V";
718 ParametrizedType <1469 1470 -1471> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Class.get_methods|V>";
719 Parameter <1471 -1472> {} "filter";
720 Method <1473 -1474 1476> {PUBLIC} "add_parent";
721 Parameter <1475 -1476> {} "vertex";
722 Method <1480 -1481> {PUBLIC} "remove_parent";
723 WildcardType <1477 -1479> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
724 Method <1482 -1483 1485> {PUBLIC} "remove_parent";
725 Parameter <1484 -1485> {} "vertex";
726 Method <1486 -1487> {PUBLIC} "get_parent";
727 Method <1488 -1489 1491> {PUBLIC} "add_arrayType";
728 Parameter <1490 -1491> {} "vertex";
729 Method <1495 -1496> {PUBLIC} "remove_arrayType";
730 WildcardType <1492 -1494> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
731 Method <1497 -1498 1500> {PUBLIC} "remove_arrayType";
732 Parameter <1499 -1500> {} "vertex";
733 Method <1502 1505 -1506> {PUBLIC} "get_arrayType";
734 TypeParameter <1501 -1502 -1504> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_arrayType().V";
735 ParametrizedType <1503 1504 -1505 1509 1510 -1511> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Class.get_arrayType|V>";
736 Method <1508 1511 -1512 1516> {PUBLIC} "get_arrayType";
737 TypeParameter <1507 -1508 -1510 -1514> n "V" "de.uni_koblenz.jgralab.jex.schema.Class.get_arrayType(VertexFilter<V>).V";
738 ParametrizedType <1513 1514 -1515> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Class.get_arrayType|V>";
739 Parameter <1515 -1516> {} "filter";
740 SourceFile <1519 1952> 521 "src/de/uni_koblenz/jgralab/jex/schema/Classifier.java";
741 Field <1522 -1523> {PUBLIC FINAL STATIC} "VC";
742 Method <1524 -1525> {PUBLIC} "getNextAbstractClassifier";
743 Method <1526 -1527> {PUBLIC} "getNextClassifier";
744 Method <1528 -1529> {PUBLIC} "getNextMember";
745 Method <1530 -1531> {PUBLIC} "getNextModifiableElement";
746 Method <1532 -1533> {PUBLIC} "getNextNamedElement";
747 Method <1534 -1535> {PUBLIC} "getNextQualifiedNamedElement";
748 Method <1536 -1537> {PUBLIC} "getNextType";
749 Method <1538 -1539> {PUBLIC} "getNextTypeParametrizable";
750 Method <1540 -1541> {PUBLIC} "getFirstHasGenericTypeIncidence";
751 Interface <-1540 -1542 -1923 -1927 3041 3043 -3044 3045 -3046 3047 -3048 3049 3053 3055 -3056 -3057 -3749 -3751 -3934 -5173 -5175 -5432 -5550 -5554 -7054 -7056 -7616 -7620 -8170 -8172 -8697 -8701 -10285 -10287 -10851 -10855 -11412 -11465 -11467 -11469 -12370 -12372 -12897 -12901 -13307 -13309 -13315 -13608 -14929 -14931 -15212 -15460 -15464 -16553 -16585 -16587 -16589> {PUBLIC} "HasGenericType" "de.uni_koblenz.jgralab.jex.schema.HasGenericType";
752 Method <1542 -1543 1545> {PUBLIC} "getFirstHasGenericTypeIncidence";
753 Parameter <1544 -1545> {} "orientation";
754 Method <1546 -1547> {PUBLIC} "getFirstExtendsIncidence";
755 Method <1548 -1549 1551> {PUBLIC} "getFirstExtendsIncidence";
756 Parameter <1550 -1551> {} "orientation";
757 Method <1552 -1553> {PUBLIC} "getFirstImplementsIncidence";
758 Method <1554 -1555 1557> {PUBLIC} "getFirstImplementsIncidence";
759 Parameter <1556 -1557> {} "orientation";
760 Method <1558 -1559 1561> {PUBLIC} "add_constructors";
761 Parameter <1560 -1561> {} "vertex";
762 Method <1565 -1566> {PUBLIC} "remove_constructors";
763 WildcardType <1562 -1564> "? extends Constructor" "? extends de.uni_koblenz.jgralab.jex.schema.Constructor";
764 Method <1567 -1568 1570> {PUBLIC} "remove_constructors";
765 Parameter <1569 -1570> {} "vertex";
766 Method <1572 1575 -1576> {PUBLIC} "get_constructors";
767 TypeParameter <1571 -1572 -1574> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_constructors().V";
768 ParametrizedType <1573 1574 -1575 1579 1580 -1581> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Classifier.get_constructors|V>";
769 Method <1578 1581 -1582 1586> {PUBLIC} "get_constructors";
770 TypeParameter <1577 -1578 -1580 -1584> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_constructors(VertexFilter<V>).V";
771 ParametrizedType <1583 1584 -1585> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Classifier.get_constructors|V>";
772 Parameter <1585 -1586> {} "filter";
773 Method <1587 -1588 1590> {PUBLIC} "add_importers";
774 Parameter <1589 -1590> {} "vertex";
775 Method <1594 -1595> {PUBLIC} "remove_importers";
776 WildcardType <1591 -1593> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
777 Method <1596 -1597 1599> {PUBLIC} "remove_importers";
778 Parameter <1598 -1599> {} "vertex";
779 Method <1601 1604 -1605> {PUBLIC} "get_importers";
780 TypeParameter <1600 -1601 -1603> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_importers().V";
781 ParametrizedType <1602 1603 -1604 1608 1609 -1610> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Classifier.get_importers|V>";
782 Method <1607 1610 -1611 1615> {PUBLIC} "get_importers";
783 TypeParameter <1606 -1607 -1609 -1613> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_importers(VertexFilter<V>).V";
784 ParametrizedType <1612 1613 -1614> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Classifier.get_importers|V>";
785 Parameter <1614 -1615> {} "filter";
786 Method <1616 -1617 1619> {PUBLIC} "add_fields";
787 Parameter <1618 -1619> {} "vertex";
788 Method <1623 -1624> {PUBLIC} "remove_fields";
789 WildcardType <1620 -1622> "? extends Field" "? extends de.uni_koblenz.jgralab.jex.schema.Field";
790 Method <1625 -1626 1628> {PUBLIC} "remove_fields";
791 Parameter <1627 -1628> {} "vertex";
792 Method <1630 1633 -1634> {PUBLIC} "get_fields";
793 TypeParameter <1629 -1630 -1632> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_fields().V";
794 ParametrizedType <1631 1632 -1633 1637 1638 -1639> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Classifier.get_fields|V>";
795 Method <1636 1639 -1640 1644> {PUBLIC} "get_fields";
796 TypeParameter <1635 -1636 -1638 -1642> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_fields(VertexFilter<V>).V";
797 ParametrizedType <1641 1642 -1643> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Classifier.get_fields|V>";
798 Parameter <1643 -1644> {} "filter";
799 Method <1645 -1646 1648> {PUBLIC} "add_sourceFile";
800 Parameter <1647 -1648> {} "vertex";
801 Method <1652 -1653> {PUBLIC} "remove_sourceFile";
802 WildcardType <1649 -1651> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
803 Method <1654 -1655 1657> {PUBLIC} "remove_sourceFile";
804 Parameter <1656 -1657> {} "vertex";
805 Method <1658 -1659> {PUBLIC} "get_sourceFile";
806 Method <1660 -1661 1663> {PUBLIC} "add_members";
807 Parameter <1662 -1663> {} "vertex";
808 Method <1667 -1668> {PUBLIC} "remove_members";
809 WildcardType <1664 -1666> "? extends Member" "? extends de.uni_koblenz.jgralab.jex.schema.Member";
810 Method <1669 -1670 1672> {PUBLIC} "remove_members";
811 Parameter <1671 -1672> {} "vertex";
812 Method <1674 1677 -1678> {PUBLIC} "get_members";
813 TypeParameter <1673 -1674 -1676> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_members().V";
814 ParametrizedType <1675 1676 -1677 1681 1682 -1683> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Classifier.get_members|V>";
815 Method <1680 1683 -1684 1688> {PUBLIC} "get_members";
816 TypeParameter <1679 -1680 -1682 -1686> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_members(VertexFilter<V>).V";
817 ParametrizedType <1685 1686 -1687> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Classifier.get_members|V>";
818 Parameter <1687 -1688> {} "filter";
819 Method <1689 -1690 1692> {PUBLIC} "add_subclasses";
820 Parameter <1691 -1692> {} "vertex";
821 Method <1696 -1697> {PUBLIC} "remove_subclasses";
822 WildcardType <1693 -1695> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
823 Method <1698 -1699 1701> {PUBLIC} "remove_subclasses";
824 Parameter <1700 -1701> {} "vertex";
825 Method <1703 1706 -1707> {PUBLIC} "get_subclasses";
826 TypeParameter <1702 -1703 -1705> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_subclasses().V";
827 ParametrizedType <1704 1705 -1706 1710 1711 -1712> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Classifier.get_subclasses|V>";
828 Method <1709 1712 -1713 1717> {PUBLIC} "get_subclasses";
829 TypeParameter <1708 -1709 -1711 -1715> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_subclasses(VertexFilter<V>).V";
830 ParametrizedType <1714 1715 -1716> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Classifier.get_subclasses|V>";
831 Parameter <1716 -1717> {} "filter";
832 Method <1718 -1719 1721> {PUBLIC} "add_interfaces";
833 Parameter <1720 -1721> {} "vertex";
834 Method <1725 -1726> {PUBLIC} "remove_interfaces";
835 WildcardType <1722 -1724> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
836 Method <1727 -1728 1730> {PUBLIC} "remove_interfaces";
837 Parameter <1729 -1730> {} "vertex";
838 Method <1732 1735 -1736> {PUBLIC} "get_interfaces";
839 TypeParameter <1731 -1732 -1734> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_interfaces().V";
840 ParametrizedType <1733 1734 -1735 1739 1740 -1741> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Classifier.get_interfaces|V>";
841 Method <1738 1741 -1742 1746> {PUBLIC} "get_interfaces";
842 TypeParameter <1737 -1738 -1740 -1744> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_interfaces(VertexFilter<V>).V";
843 ParametrizedType <1743 1744 -1745> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Classifier.get_interfaces|V>";
844 Parameter <1745 -1746> {} "filter";
845 Method <1747 -1748 1750> {PUBLIC} "add_nestedClassifiers";
846 Parameter <1749 -1750> {} "vertex";
847 Method <1754 -1755> {PUBLIC} "remove_nestedClassifiers";
848 WildcardType <1751 -1753> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
849 Method <1756 -1757 1759> {PUBLIC} "remove_nestedClassifiers";
850 Parameter <1758 -1759> {} "vertex";
851 Method <1761 1764 -1765> {PUBLIC} "get_nestedClassifiers";
852 TypeParameter <1760 -1761 -1763> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_nestedClassifiers().V";
853 ParametrizedType <1762 1763 -1764 1768 1769 -1770> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Classifier.get_nestedClassifiers|V>";
854 Method <1767 1770 -1771 1775> {PUBLIC} "get_nestedClassifiers";
855 TypeParameter <1766 -1767 -1769 -1773> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_nestedClassifiers(VertexFilter<V>).V";
856 ParametrizedType <1772 1773 -1774> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Classifier.get_nestedClassifiers|V>";
857 Parameter <1774 -1775> {} "filter";
858 Method <1776 -1777 1779> {PUBLIC} "add_superclass";
859 Parameter <1778 -1779> {} "vertex";
860 Method <1783 -1784> {PUBLIC} "remove_superclass";
861 WildcardType <1780 -1782> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
862 Method <1785 -1786 1788> {PUBLIC} "remove_superclass";
863 Parameter <1787 -1788> {} "vertex";
864 Method <1789 -1790> {PUBLIC} "get_superclass";
865 Method <1791 -1792 1794> {PUBLIC} "add_typeParams";
866 Parameter <1793 -1794> {} "vertex";
867 Method <1798 -1799> {PUBLIC} "remove_typeParams";
868 WildcardType <1795 -1797> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
869 Method <1800 -1801 1803> {PUBLIC} "remove_typeParams";
870 Parameter <1802 -1803> {} "vertex";
871 Method <1805 1808 -1809> {PUBLIC} "get_typeParams";
872 TypeParameter <1804 -1805 -1807> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_typeParams().V";
873 ParametrizedType <1806 1807 -1808 1812 1813 -1814> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Classifier.get_typeParams|V>";
874 Method <1811 1814 -1815 1819> {PUBLIC} "get_typeParams";
875 TypeParameter <1810 -1811 -1813 -1817> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_typeParams(VertexFilter<V>).V";
876 ParametrizedType <1816 1817 -1818> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Classifier.get_typeParams|V>";
877 Parameter <1818 -1819> {} "filter";
878 Method <1820 -1821 1823> {PUBLIC} "add_implementors";
879 Parameter <1822 -1823> {} "vertex";
880 Method <1827 -1828> {PUBLIC} "remove_implementors";
881 WildcardType <1824 -1826> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
882 Method <1829 -1830 1832> {PUBLIC} "remove_implementors";
883 Parameter <1831 -1832> {} "vertex";
884 Method <1834 1837 -1838> {PUBLIC} "get_implementors";
885 TypeParameter <1833 -1834 -1836> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_implementors().V";
886 ParametrizedType <1835 1836 -1837 1841 1842 -1843> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Classifier.get_implementors|V>";
887 Method <1840 1843 -1844 1848> {PUBLIC} "get_implementors";
888 TypeParameter <1839 -1840 -1842 -1846> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_implementors(VertexFilter<V>).V";
889 ParametrizedType <1845 1846 -1847> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Classifier.get_implementors|V>";
890 Parameter <1847 -1848> {} "filter";
891 Method <1849 -1850 1852> {PUBLIC} "add_methods";
892 Parameter <1851 -1852> {} "vertex";
893 Method <1856 -1857> {PUBLIC} "remove_methods";
894 WildcardType <1853 -1855> "? extends Method" "? extends de.uni_koblenz.jgralab.jex.schema.Method";
895 Method <1858 -1859 1861> {PUBLIC} "remove_methods";
896 Parameter <1860 -1861> {} "vertex";
897 Method <1863 1866 -1867> {PUBLIC} "get_methods";
898 TypeParameter <1862 -1863 -1865> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_methods().V";
899 ParametrizedType <1864 1865 -1866 1870 1871 -1872> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Classifier.get_methods|V>";
900 Method <1869 1872 -1873 1877> {PUBLIC} "get_methods";
901 TypeParameter <1868 -1869 -1871 -1875> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_methods(VertexFilter<V>).V";
902 ParametrizedType <1874 1875 -1876> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Classifier.get_methods|V>";
903 Parameter <1876 -1877> {} "filter";
904 Method <1878 -1879 1881> {PUBLIC} "add_parent";
905 Parameter <1880 -1881> {} "vertex";
906 Method <1885 -1886> {PUBLIC} "remove_parent";
907 WildcardType <1882 -1884> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
908 Method <1887 -1888 1890> {PUBLIC} "remove_parent";
909 Parameter <1889 -1890> {} "vertex";
910 Method <1891 -1892> {PUBLIC} "get_parent";
911 Method <1893 -1894 1896> {PUBLIC} "add_arrayType";
912 Parameter <1895 -1896> {} "vertex";
913 Method <1900 -1901> {PUBLIC} "remove_arrayType";
914 WildcardType <1897 -1899> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
915 Method <1902 -1903 1905> {PUBLIC} "remove_arrayType";
916 Parameter <1904 -1905> {} "vertex";
917 Method <1907 1910 -1911> {PUBLIC} "get_arrayType";
918 TypeParameter <1906 -1907 -1909> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_arrayType().V";
919 ParametrizedType <1908 1909 -1910 1914 1915 -1916> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Classifier.get_arrayType|V>";
920 Method <1913 1916 -1917 1921> {PUBLIC} "get_arrayType";
921 TypeParameter <1912 -1913 -1915 -1919> n "V" "de.uni_koblenz.jgralab.jex.schema.Classifier.get_arrayType(VertexFilter<V>).V";
922 ParametrizedType <1918 1919 -1920> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Classifier.get_arrayType|V>";
923 Parameter <1920 -1921> {} "filter";
924 Method <1924 -1925> {PUBLIC} "getHasGenericTypeIncidences";
925 ParametrizedType <1922 1923 -1924 1926 1927 -1928 3933 3934 -3935 5549 5550 -5551 5553 5554 -5555 7615 7616 -7617 7619 7620 -7621 8696 8697 -8698 8700 8701 -8702 10850 10851 -10852 10854 10855 -10856 12896 12897 -12898 12900 12901 -12902 13607 13608 -13609 15459 15460 -15461 15463 15464 -15465> n "Iterable<HasGenericType>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.HasGenericType>";
926 Method <1928 -1929 1931> {PUBLIC} "getHasGenericTypeIncidences";
927 Parameter <1930 -1931> {} "direction";
928 Method <1934 -1935> {PUBLIC} "getExtendsIncidences";
929 Method <1938 -1939 1941> {PUBLIC} "getExtendsIncidences";
930 Parameter <1940 -1941> {} "direction";
931 Method <1944 -1945> {PUBLIC} "getImplementsIncidences";
932 Method <1948 -1949 1951> {PUBLIC} "getImplementsIncidences";
933 Parameter <1950 -1951> {} "direction";
934 SourceFile <1954 2118> 210 "src/de/uni_koblenz/jgralab/jex/schema/Constructor.java";
935 Interface <-1955 -1963 -3079 -3092 -3769 -3831 -3863 -4058 -4062 -4066 -4471 -4480 4655 4656 4657 4658 4660 4662 -4663 4664 4666 4668 4670 4672 4674 4678 4680 4684 4691 4693 4701 4707 4713 4720 4722 4730 4736 4742 4749 4751 4759 4765 4771 4778 4780 4788 4794 4800 4807 4809 4813 4817 4821 4827 4831 -4834 -4835 -5083 -5085 -5092 -5094 -5820 -5833 -8777 -8853 -11581 -11655 -13343 -13351 -13469 -13521 -13529 -13732 -13736 -13740 -13982 -14059 -14657 -14659 -14666 -14668 -16662 -16707 -17067 -17112 -17293 -17367> {PUBLIC} "MethodLike" "de.uni_koblenz.jgralab.jex.schema.MethodLike";
936 Field <1957 -1958> {PUBLIC FINAL STATIC} "VC";
937 Method <1959 -1960> {PUBLIC} "getNextConstructor";
938 Method <1961 -1962> {PUBLIC} "getNextMember";
939 Method <1963 -1964> {PUBLIC} "getNextMethodLike";
940 Method <1965 -1966> {PUBLIC} "getNextModifiableElement";
941 Method <1967 -1968> {PUBLIC} "getNextNamedElement";
942 Method <1969 -1970> {PUBLIC} "getNextTypeParametrizable";
943 Method <1971 -1972> {PUBLIC} "getFirstDeclaresConstructorIncidence";
944 Method <1973 -1974 1976> {PUBLIC} "getFirstDeclaresConstructorIncidence";
945 Parameter <1975 -1976> {} "orientation";
946 Method <1977 -1978 1980> {PUBLIC} "add_typeParams";
947 Parameter <1979 -1980> {} "vertex";
948 Method <1984 -1985> {PUBLIC} "remove_typeParams";
949 WildcardType <1981 -1983> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
950 Method <1986 -1987 1989> {PUBLIC} "remove_typeParams";
951 Parameter <1988 -1989> {} "vertex";
952 Method <1991 1994 -1995> {PUBLIC} "get_typeParams";
953 TypeParameter <1990 -1991 -1993> n "V" "de.uni_koblenz.jgralab.jex.schema.Constructor.get_typeParams().V";
954 ParametrizedType <1992 1993 -1994 1998 1999 -2000> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Constructor.get_typeParams|V>";
955 Method <1997 2000 -2001 2005> {PUBLIC} "get_typeParams";
956 TypeParameter <1996 -1997 -1999 -2003> n "V" "de.uni_koblenz.jgralab.jex.schema.Constructor.get_typeParams(VertexFilter<V>).V";
957 ParametrizedType <2002 2003 -2004> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Constructor.get_typeParams|V>";
958 Parameter <2004 -2005> {} "filter";
959 Method <2006 -2007 2009> {PUBLIC} "add_exceptions";
960 Interface <-2006 -3859 -3861 -3922 -4525 -4677 -4679 -4712 -4825 -4829 5822 5824 -5825 5826 -5827 5828 -5829 5830 5834 5836 -5837 -5838 -5868 -5870 -5981 -5985 -7018 -7020 -7556 -7560 -7806 -7808 -7940 -7944 -8134 -8136 -8637 -8641 -8885 -8887 -8926 -9069 -9073 -10249 -10251 -10791 -10795 -12334 -12336 -12837 -12841 -13517 -13519 -13525 -13596 -14099 -14101 -14140 -14308 -14312 -14887 -14889 -15390 -15394 -15630 -15632 -15749 -15753 -17072 -17104 -17106 -17108 -17298 -17351 -17353 -17355 -17514 -17516 -17996 -18000 -18218 -18220 -18367 -18371> {PUBLIC} "Throws" "de.uni_koblenz.jgralab.jex.schema.Throws";
961 Parameter <2008 -2009> {} "vertex";
962 Method <2013 -2014> {PUBLIC} "remove_exceptions";
963 WildcardType <2010 -2012> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
964 Method <2015 -2016 2018> {PUBLIC} "remove_exceptions";
965 Parameter <2017 -2018> {} "vertex";
966 Method <2020 2023 -2024> {PUBLIC} "get_exceptions";
967 TypeParameter <2019 -2020 -2022> n "V" "de.uni_koblenz.jgralab.jex.schema.Constructor.get_exceptions().V";
968 ParametrizedType <2021 2022 -2023 2027 2028 -2029> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Constructor.get_exceptions|V>";
969 Method <2026 2029 -2030 2034> {PUBLIC} "get_exceptions";
970 TypeParameter <2025 -2026 -2028 -2032> n "V" "de.uni_koblenz.jgralab.jex.schema.Constructor.get_exceptions(VertexFilter<V>).V";
971 ParametrizedType <2031 2032 -2033> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Constructor.get_exceptions|V>";
972 Parameter <2033 -2034> {} "filter";
973 Method <2035 -2036 2038> {PUBLIC} "add_params";
974 Interface <-2035 3081 3083 -3084 3085 -3086 3087 -3088 3089 3093 3095 -3096 -3097 -3765 -3767 -3906 -4554 -4671 -4673 -4741 -4815 -4819 -5075 -5077 -5081 -5141 -5145 -8879 -8881 -8955 -9059 -9063 -11586 -11639 -11641 -11643 -13339 -13341 -13347 -13580 -14093 -14095 -14169 -14298 -14302 -14649 -14651 -14655 -14735 -14739 -16667 -16699 -16701 -16703> {PUBLIC} "HasParam" "de.uni_koblenz.jgralab.jex.schema.HasParam";
975 Interface <-2037 -2039 -2046 -2048 -2054 -3080 -3094 -3771 -3841 -3843 -4202 -4206 -4210 -4556 -4558 -4565 -4567 -4573 -4743 -4745 -4752 -4754 -4760 5062 5063 5064 5066 5068 5070 -5071 5072 5074 5076 5078 5082 5089 5091 5095 5097 5104 5106 5114 5120 5126 5133 5135 5139 5143 5147 -5150 -5151 -8957 -8959 -8966 -8968 -8974 -11582 -11657 -13345 -13353 -13483 -13485 -13487 -13876 -13880 -13884 -14171 -14173 -14180 -14182 -14188 -14556 -14633 -16663 -16709> {PUBLIC} "Parameter" "de.uni_koblenz.jgralab.jex.schema.Parameter";
976 Parameter <2037 -2038> {} "vertex";
977 Method <2042 -2043> {PUBLIC} "remove_params";
978 WildcardType <2039 -2041> "? extends Parameter" "? extends de.uni_koblenz.jgralab.jex.schema.Parameter";
979 ParametrizedType <2040 2041 -2042 4559 4560 -4561 4746 4747 -4748 8960 8961 -8962 14174 14175 -14176> n "List<? extends Parameter>" "java.util.List<? extends de.uni_koblenz.jgralab.jex.schema.Parameter>";
980 Method <2044 -2045 2047> {PUBLIC} "remove_params";
981 Parameter <2046 -2047> {} "vertex";
982 Method <2049 2052 -2053> {PUBLIC} "get_params";
983 TypeParameter <2048 -2049 -2051> n "V" "de.uni_koblenz.jgralab.jex.schema.Constructor.get_params().V";
984 ParametrizedType <2050 2051 -2052 2056 2057 -2058> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Constructor.get_params|V>";
985 Method <2055 2058 -2059 2063> {PUBLIC} "get_params";
986 TypeParameter <2054 -2055 -2057 -2061> n "V" "de.uni_koblenz.jgralab.jex.schema.Constructor.get_params(VertexFilter<V>).V";
987 ParametrizedType <2060 2061 -2062> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Constructor.get_params|V>";
988 Parameter <2062 -2063> {} "filter";
989 Method <2064 -2065 2067> {PUBLIC} "add_importers";
990 Parameter <2066 -2067> {} "vertex";
991 Method <2071 -2072> {PUBLIC} "remove_importers";
992 WildcardType <2068 -2070> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
993 Method <2073 -2074 2076> {PUBLIC} "remove_importers";
994 Parameter <2075 -2076> {} "vertex";
995 Method <2078 2081 -2082> {PUBLIC} "get_importers";
996 TypeParameter <2077 -2078 -2080> n "V" "de.uni_koblenz.jgralab.jex.schema.Constructor.get_importers().V";
997 ParametrizedType <2079 2080 -2081 2085 2086 -2087> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Constructor.get_importers|V>";
998 Method <2084 2087 -2088 2092> {PUBLIC} "get_importers";
999 TypeParameter <2083 -2084 -2086 -2090> n "V" "de.uni_koblenz.jgralab.jex.schema.Constructor.get_importers(VertexFilter<V>).V";
1000 ParametrizedType <2089 2090 -2091> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Constructor.get_importers|V>";
1001 Parameter <2091 -2092> {} "filter";
1002 Method <2093 -2094 2096> {PUBLIC} "add_parent";
1003 Parameter <2095 -2096> {} "vertex";
1004 Method <2100 -2101> {PUBLIC} "remove_parent";
1005 WildcardType <2097 -2099> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
1006 Method <2102 -2103 2105> {PUBLIC} "remove_parent";
1007 Parameter <2104 -2105> {} "vertex";
1008 Method <2106 -2107> {PUBLIC} "get_parent";
1009 Method <2110 -2111> {PUBLIC} "getDeclaresConstructorIncidences";
1010 Method <2114 -2115 2117> {PUBLIC} "getDeclaresConstructorIncidences";
1011 Parameter <2116 -2117> {} "direction";
1012 SourceFile <2120 2121 2122 2138> 42 "src/de/uni_koblenz/jgralab/jex/schema/ContainsClassifier.java";
1013 Interface <-2122 -2134 -2141 -2153 -2155 -3643 -3651 -3653 -3837 -3839 -4166 -4170 -4174 4930 4931 4933 4935 -4936 4937 4939 4941 4943 4947 4949 4953 4960 4962 4970 4976 4982 4989 4991 4999 5005 5011 -5012 -5014 5018 5020 -5021 -5023 5028 -5029 5034 5042 5046 5052 5056 -5059 -5060 -9098 -9171 -9184 -9257 -9259 -13093 -13101 -13109 -13111 -13117 -13119 -13475 -13477 -13479 -13840 -13844 -13848 -14337 -14406 -14488 -14490 -14497 -14499 -14505 -15807 -15851 -15863 -15907 -15909> {PUBLIC} "Package" "de.uni_koblenz.jgralab.jex.schema.Package";
1014 Interface <-2123 -2142 -2162 -2183 -2212 -2241 -2270 -2299 -2327 -2355 -2888 -3001 -3021 -3041 -3061 -3081 -3101 -3121 -3141 -3161 -3181 -3201 -5822 -9102 -9114 -9188 -9200 -9276 -9288 -9372 -9384 -9468 -9480 -9564 -9576 -9660 -9672 -9755 -9767 -9850 -9864 -10933 -10946 -11237 -11250 -11324 -11337 -11411 -11424 -11498 -11511 -11585 -11598 -11672 -11685 -11759 -11772 -11846 -11859 -11933 -11946 -12020 -12033 -12107 -12122 -15811 -15867 -15925 -15991 -16057 -16123 -16189 -16254 -16319 -16381 -16438 -16495 -16552 -16609 -16666 -16723 -16780 -16837 -16894 -16951 -17008 -17071 -17297 -17310> {PUBLIC} "Edge" "de.uni_koblenz.jgralab.Edge";
1015 Interface <-2124 -2143 -2163 -2184 -2213 -2242 -2271 -2300 -2328 -2356 -2889 -3002 -3022 -3042 -3062 -3082 -3102 -3122 -3142 -3162 -3182 -3202 -4306 -5823 -9112 -9198 -9286 -9382 -9478 -9574 -9670 -9765 -9862 -10944 -11248 -11335 -11422 -11509 -11596 -11683 -11770 -11857 -11944 -12031 -12120 -15817 -15873 -15931 -15997 -16063 -16129 -16195 -16260 -16325 -16388 -16445 -16502 -16559 -16616 -16673 -16730 -16787 -16844 -16901 -16958 -17015 -17078 -17308> {PUBLIC} "EdgeClass" "de.uni_koblenz.jgralab.schema.EdgeClass";
1016 Field <2124 -2125> {PUBLIC FINAL STATIC} "EC";
1017 Method <2126 -2127> {PUBLIC} "getNextContainsClassifierInGraph";
1018 Method <2128 -2129> {PUBLIC} "getNextContainsClassifierIncidence";
1019 Method <2130 -2131 2133> {PUBLIC} "getNextContainsClassifierIncidence";
1020 Parameter <2132 -2133> {} "orientation";
1021 Method <2134 -2135> {PUBLIC} "getAlpha";
1022 Method <2136 -2137> {PUBLIC} "getOmega";
1023 SourceFile <2140 2141 2157> 41 "src/de/uni_koblenz/jgralab/jex/schema/ContainsPackage.java";
1024 Interface <2142 2144 -2145 2146 -2147 2148 -2149 2150 2154 2156 -2157 -2158 -3647 -3649 -3890 -4940 -4942 -5010 -5040 -5044 -9187 -9241 -9243 -9245 -13105 -13107 -13113 -13564 -14410 -14412 -14486 -14516 -14520 -15866 -15899 -15901 -15903> {PUBLIC} "ContainsPackage" "de.uni_koblenz.jgralab.jex.schema.ContainsPackage";
1025 Field <2143 -2144> {PUBLIC FINAL STATIC} "EC";
1026 Method <2145 -2146> {PUBLIC} "getNextContainsPackageInGraph";
1027 Method <2147 -2148> {PUBLIC} "getNextContainsPackageIncidence";
1028 Method <2149 -2150 2152> {PUBLIC} "getNextContainsPackageIncidence";
1029 Parameter <2151 -2152> {} "orientation";
1030 Method <2153 -2154> {PUBLIC} "getAlpha";
1031 Method <2155 -2156> {PUBLIC} "getOmega";
1032 SourceFile <2159 2160 2161 2177> 42 "src/de/uni_koblenz/jgralab/jex/schema/Declares.java";
1033 Field <2163 -2164> {PUBLIC FINAL STATIC} "EC";
1034 Method <2165 -2166> {PUBLIC} "getNextDeclaresInGraph";
1035 Method <2167 -2168> {PUBLIC} "getNextDeclaresIncidence";
1036 Method <2169 -2170 2172> {PUBLIC} "getNextDeclaresIncidence";
1037 Parameter <2171 -2172> {} "orientation";
1038 Method <2173 -2174> {PUBLIC} "getAlpha";
1039 Method <2175 -2176> {PUBLIC} "getOmega";
1040 SourceFile <2179 2180 2181 2206> 58 "src/de/uni_koblenz/jgralab/jex/schema/DeclaresAnnotationElement.java";
1041 Field <2184 -2185> {PUBLIC FINAL STATIC} "EC";
1042 Method <2186 -2187> {PUBLIC} "getNextDeclaresInGraph";
1043 Method <2188 -2189> {PUBLIC} "getNextDeclaresAnnotationElementInGraph";
1044 Method <2190 -2191> {PUBLIC} "getNextDeclaresIncidence";
1045 Method <2192 -2193 2195> {PUBLIC} "getNextDeclaresIncidence";
1046 Parameter <2194 -2195> {} "orientation";
1047 Method <2196 -2197> {PUBLIC} "getNextDeclaresAnnotationElementIncidence";
1048 Method <2198 -2199 2201> {PUBLIC} "getNextDeclaresAnnotationElementIncidence";
1049 Parameter <2200 -2201> {} "orientation";
1050 Method <2202 -2203> {PUBLIC} "getAlpha";
1051 Method <2204 -2205> {PUBLIC} "getOmega";
1052 SourceFile <2208 2209 2210 2235> 58 "src/de/uni_koblenz/jgralab/jex/schema/DeclaresConstructor.java";
1053 Field <2213 -2214> {PUBLIC FINAL STATIC} "EC";
1054 Method <2215 -2216> {PUBLIC} "getNextDeclaresInGraph";
1055 Method <2217 -2218> {PUBLIC} "getNextDeclaresConstructorInGraph";
1056 Method <2219 -2220> {PUBLIC} "getNextDeclaresIncidence";
1057 Method <2221 -2222 2224> {PUBLIC} "getNextDeclaresIncidence";
1058 Parameter <2223 -2224> {} "orientation";
1059 Method <2225 -2226> {PUBLIC} "getNextDeclaresConstructorIncidence";
1060 Method <2227 -2228 2230> {PUBLIC} "getNextDeclaresConstructorIncidence";
1061 Parameter <2229 -2230> {} "orientation";
1062 Method <2231 -2232> {PUBLIC} "getAlpha";
1063 Method <2233 -2234> {PUBLIC} "getOmega";
1064 SourceFile <2237 2238 2239 2264> 58 "src/de/uni_koblenz/jgralab/jex/schema/DeclaresEnumConst.java";
1065 Interface <-2238 -2260 2379 2380 2382 2384 2386 -2387 2388 2390 2392 2394 2396 2398 2400 2402 2404 2408 2415 2417 2425 2431 2437 2444 2446 2454 2460 2466 2473 2475 2483 2489 2495 2502 2504 2508 2510 2517 2519 2527 2533 2539 2546 2548 2556 2562 2568 2575 2577 2585 2591 2597 2604 2606 2614 2620 2626 2633 2635 2639 2641 2648 2650 2658 2664 2670 2677 2679 2687 2693 2699 2706 2708 2716 2722 2728 2735 2737 2741 2743 2750 2752 2760 2766 2772 2779 2781 2789 2795 2803 2807 -2810 -2811 -3677 -3713 -3715 -4046 -4050 -4054 -9462 -9545 -10109 -10193 -13159 -13167 -13235 -13237 -13239 -13720 -13724 -13728 -16051 -16105> {PUBLIC} "Enum" "de.uni_koblenz.jgralab.jex.schema.Enum";
1066 Interface <-2239 -2262 -2744 -2746 -2753 -2755 -2761 2813 2814 2816 -2817 2818 2820 2822 2824 2826 2830 2837 2839 2847 2853 2859 2866 2868 2872 2876 2880 -2883 -2884 -3679 -3717 -3719 -4070 -4074 -4078 -9463 -9547 -9941 -10000 -10664 -10666 -10673 -10675 -10681 -13161 -13169 -13243 -13245 -13247 -13744 -13748 -13752 -16052 -16107> {PUBLIC} "EnumConst" "de.uni_koblenz.jgralab.jex.schema.EnumConst";
1067 Interface <2240 2241 2243 2245 -2246 2247 2249 2251 -2254 2255 -2256 2257 2261 2263 -2264 -2265 -2401 -2403 -2742 -2801 -2805 -2823 -2825 -2874 -2878 -3673 -3675 -3962 -9467 -9523 -9531 -9533 -10006 -10008 -10069 -10073 -10225 -10227 -10662 -10751 -10755 -13155 -13157 -13163 -13636 -16056 -16091 -16099 -16101> {PUBLIC} "DeclaresEnumConst" "de.uni_koblenz.jgralab.jex.schema.DeclaresEnumConst";
1068 Field <2242 -2243> {PUBLIC FINAL STATIC} "EC";
1069 Method <2244 -2245> {PUBLIC} "getNextDeclaresInGraph";
1070 Method <2246 -2247> {PUBLIC} "getNextDeclaresEnumConstInGraph";
1071 Method <2248 -2249> {PUBLIC} "getNextDeclaresIncidence";
1072 Method <2250 -2251 2253> {PUBLIC} "getNextDeclaresIncidence";
1073 Parameter <2252 -2253> {} "orientation";
1074 Method <2254 -2255> {PUBLIC} "getNextDeclaresEnumConstIncidence";
1075 Method <2256 -2257 2259> {PUBLIC} "getNextDeclaresEnumConstIncidence";
1076 Parameter <2258 -2259> {} "orientation";
1077 Method <2260 -2261> {PUBLIC} "getAlpha";
1078 Method <2262 -2263> {PUBLIC} "getOmega";
1079 SourceFile <2266 2267 2268 2293> 58 "src/de/uni_koblenz/jgralab/jex/schema/DeclaresField.java";
1080 Field <2271 -2272> {PUBLIC FINAL STATIC} "EC";
1081 Method <2273 -2274> {PUBLIC} "getNextDeclaresInGraph";
1082 Method <2275 -2276> {PUBLIC} "getNextDeclaresFieldInGraph";
1083 Method <2277 -2278> {PUBLIC} "getNextDeclaresIncidence";
1084 Method <2279 -2280 2282> {PUBLIC} "getNextDeclaresIncidence";
1085 Parameter <2281 -2282> {} "orientation";
1086 Method <2283 -2284> {PUBLIC} "getNextDeclaresFieldIncidence";
1087 Method <2285 -2286 2288> {PUBLIC} "getNextDeclaresFieldIncidence";
1088 Parameter <2287 -2288> {} "orientation";
1089 Method <2289 -2290> {PUBLIC} "getAlpha";
1090 Method <2291 -2292> {PUBLIC} "getOmega";
1091 SourceFile <2295 2296 2297 2322> 58 "src/de/uni_koblenz/jgralab/jex/schema/DeclaresMethod.java";
1092 Field <2300 -2301> {PUBLIC FINAL STATIC} "EC";
1093 Method <2302 -2303> {PUBLIC} "getNextDeclaresInGraph";
1094 Method <2304 -2305> {PUBLIC} "getNextDeclaresMethodInGraph";
1095 Method <2306 -2307> {PUBLIC} "getNextDeclaresIncidence";
1096 Method <2308 -2309 2311> {PUBLIC} "getNextDeclaresIncidence";
1097 Parameter <2310 -2311> {} "orientation";
1098 Method <2312 -2313> {PUBLIC} "getNextDeclaresMethodIncidence";
1099 Method <2314 -2315 2317> {PUBLIC} "getNextDeclaresMethodIncidence";
1100 Parameter <2316 -2317> {} "orientation";
1101 Method <2318 -2319> {PUBLIC} "getAlpha";
1102 Method <2320 -2321> {PUBLIC} "getOmega";
1103 SourceFile <2324 2325 2350> 57 "src/de/uni_koblenz/jgralab/jex/schema/DeclaresNestedClassifier.java";
1104 Field <2328 -2329> {PUBLIC FINAL STATIC} "EC";
1105 Method <2330 -2331> {PUBLIC} "getNextDeclaresInGraph";
1106 Method <2332 -2333> {PUBLIC} "getNextDeclaresNestedClassifierInGraph";
1107 Method <2334 -2335> {PUBLIC} "getNextDeclaresIncidence";
1108 Method <2336 -2337 2339> {PUBLIC} "getNextDeclaresIncidence";
1109 Parameter <2338 -2339> {} "orientation";
1110 Method <2340 -2341> {PUBLIC} "getNextDeclaresNestedClassifierIncidence";
1111 Method <2342 -2343 2345> {PUBLIC} "getNextDeclaresNestedClassifierIncidence";
1112 Parameter <2344 -2345> {} "orientation";
1113 Method <2346 -2347> {PUBLIC} "getAlpha";
1114 Method <2348 -2349> {PUBLIC} "getOmega";
1115 SourceFile <2352 2353 2354 2376> 46 "src/de/uni_koblenz/jgralab/jex/schema/Defines.java";
1116 Field <2356 -2357> {PUBLIC FINAL STATIC} "EC";
1117 Method <2358 -2359> {PUBLIC} "get_lineNo";
1118 Method <2360 -2361 2363> {PUBLIC} "set_lineNo";
1119 Parameter <2362 -2363> {} "_lineNo";
1120 Method <2364 -2365> {PUBLIC} "getNextDefinesInGraph";
1121 Method <2366 -2367> {PUBLIC} "getNextDefinesIncidence";
1122 Method <2368 -2369 2371> {PUBLIC} "getNextDefinesIncidence";
1123 Parameter <2370 -2371> {} "orientation";
1124 Method <2372 -2373> {PUBLIC} "getAlpha";
1125 Method <2374 -2375> {PUBLIC} "getOmega";
1126 SourceFile <2378 2810> 511 "src/de/uni_koblenz/jgralab/jex/schema/Enum.java";
1127 Field <2381 -2382> {PUBLIC FINAL STATIC} "VC";
1128 Method <2383 -2384> {PUBLIC} "getNextAbstractClassifier";
1129 Method <2385 -2386> {PUBLIC} "getNextClassifier";
1130 Method <2387 -2388> {PUBLIC} "getNextEnum";
1131 Method <2389 -2390> {PUBLIC} "getNextMember";
1132 Method <2391 -2392> {PUBLIC} "getNextModifiableElement";
1133 Method <2393 -2394> {PUBLIC} "getNextNamedElement";
1134 Method <2395 -2396> {PUBLIC} "getNextQualifiedNamedElement";
1135 Method <2397 -2398> {PUBLIC} "getNextType";
1136 Method <2399 -2400> {PUBLIC} "getNextTypeParametrizable";
1137 Method <2401 -2402> {PUBLIC} "getFirstDeclaresEnumConstIncidence";
1138 Method <2403 -2404 2406> {PUBLIC} "getFirstDeclaresEnumConstIncidence";
1139 Parameter <2405 -2406> {} "orientation";
1140 Method <2407 -2408 2410> {PUBLIC} "add_constructors";
1141 Parameter <2409 -2410> {} "vertex";
1142 Method <2414 -2415> {PUBLIC} "remove_constructors";
1143 WildcardType <2411 -2413> "? extends Constructor" "? extends de.uni_koblenz.jgralab.jex.schema.Constructor";
1144 Method <2416 -2417 2419> {PUBLIC} "remove_constructors";
1145 Parameter <2418 -2419> {} "vertex";
1146 Method <2421 2424 -2425> {PUBLIC} "get_constructors";
1147 TypeParameter <2420 -2421 -2423> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_constructors().V";
1148 ParametrizedType <2422 2423 -2424 2428 2429 -2430> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Enum.get_constructors|V>";
1149 Method <2427 2430 -2431 2435> {PUBLIC} "get_constructors";
1150 TypeParameter <2426 -2427 -2429 -2433> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_constructors(VertexFilter<V>).V";
1151 ParametrizedType <2432 2433 -2434> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Enum.get_constructors|V>";
1152 Parameter <2434 -2435> {} "filter";
1153 Method <2436 -2437 2439> {PUBLIC} "add_importers";
1154 Parameter <2438 -2439> {} "vertex";
1155 Method <2443 -2444> {PUBLIC} "remove_importers";
1156 WildcardType <2440 -2442> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
1157 Method <2445 -2446 2448> {PUBLIC} "remove_importers";
1158 Parameter <2447 -2448> {} "vertex";
1159 Method <2450 2453 -2454> {PUBLIC} "get_importers";
1160 TypeParameter <2449 -2450 -2452> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_importers().V";
1161 ParametrizedType <2451 2452 -2453 2457 2458 -2459> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Enum.get_importers|V>";
1162 Method <2456 2459 -2460 2464> {PUBLIC} "get_importers";
1163 TypeParameter <2455 -2456 -2458 -2462> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_importers(VertexFilter<V>).V";
1164 ParametrizedType <2461 2462 -2463> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Enum.get_importers|V>";
1165 Parameter <2463 -2464> {} "filter";
1166 Method <2465 -2466 2468> {PUBLIC} "add_fields";
1167 Parameter <2467 -2468> {} "vertex";
1168 Method <2472 -2473> {PUBLIC} "remove_fields";
1169 WildcardType <2469 -2471> "? extends Field" "? extends de.uni_koblenz.jgralab.jex.schema.Field";
1170 Method <2474 -2475 2477> {PUBLIC} "remove_fields";
1171 Parameter <2476 -2477> {} "vertex";
1172 Method <2479 2482 -2483> {PUBLIC} "get_fields";
1173 TypeParameter <2478 -2479 -2481> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_fields().V";
1174 ParametrizedType <2480 2481 -2482 2486 2487 -2488> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Enum.get_fields|V>";
1175 Method <2485 2488 -2489 2493> {PUBLIC} "get_fields";
1176 TypeParameter <2484 -2485 -2487 -2491> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_fields(VertexFilter<V>).V";
1177 ParametrizedType <2490 2491 -2492> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Enum.get_fields|V>";
1178 Parameter <2492 -2493> {} "filter";
1179 Method <2494 -2495 2497> {PUBLIC} "add_sourceFile";
1180 Parameter <2496 -2497> {} "vertex";
1181 Method <2501 -2502> {PUBLIC} "remove_sourceFile";
1182 WildcardType <2498 -2500> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
1183 Method <2503 -2504 2506> {PUBLIC} "remove_sourceFile";
1184 Parameter <2505 -2506> {} "vertex";
1185 Method <2507 -2508> {PUBLIC} "get_sourceFile";
1186 Method <2509 -2510 2512> {PUBLIC} "add_members";
1187 Parameter <2511 -2512> {} "vertex";
1188 Method <2516 -2517> {PUBLIC} "remove_members";
1189 WildcardType <2513 -2515> "? extends Member" "? extends de.uni_koblenz.jgralab.jex.schema.Member";
1190 Method <2518 -2519 2521> {PUBLIC} "remove_members";
1191 Parameter <2520 -2521> {} "vertex";
1192 Method <2523 2526 -2527> {PUBLIC} "get_members";
1193 TypeParameter <2522 -2523 -2525> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_members().V";
1194 ParametrizedType <2524 2525 -2526 2530 2531 -2532> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Enum.get_members|V>";
1195 Method <2529 2532 -2533 2537> {PUBLIC} "get_members";
1196 TypeParameter <2528 -2529 -2531 -2535> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_members(VertexFilter<V>).V";
1197 ParametrizedType <2534 2535 -2536> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Enum.get_members|V>";
1198 Parameter <2536 -2537> {} "filter";
1199 Method <2538 -2539 2541> {PUBLIC} "add_subclasses";
1200 Parameter <2540 -2541> {} "vertex";
1201 Method <2545 -2546> {PUBLIC} "remove_subclasses";
1202 WildcardType <2542 -2544> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
1203 Method <2547 -2548 2550> {PUBLIC} "remove_subclasses";
1204 Parameter <2549 -2550> {} "vertex";
1205 Method <2552 2555 -2556> {PUBLIC} "get_subclasses";
1206 TypeParameter <2551 -2552 -2554> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_subclasses().V";
1207 ParametrizedType <2553 2554 -2555 2559 2560 -2561> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Enum.get_subclasses|V>";
1208 Method <2558 2561 -2562 2566> {PUBLIC} "get_subclasses";
1209 TypeParameter <2557 -2558 -2560 -2564> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_subclasses(VertexFilter<V>).V";
1210 ParametrizedType <2563 2564 -2565> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Enum.get_subclasses|V>";
1211 Parameter <2565 -2566> {} "filter";
1212 Method <2567 -2568 2570> {PUBLIC} "add_interfaces";
1213 Parameter <2569 -2570> {} "vertex";
1214 Method <2574 -2575> {PUBLIC} "remove_interfaces";
1215 WildcardType <2571 -2573> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
1216 Method <2576 -2577 2579> {PUBLIC} "remove_interfaces";
1217 Parameter <2578 -2579> {} "vertex";
1218 Method <2581 2584 -2585> {PUBLIC} "get_interfaces";
1219 TypeParameter <2580 -2581 -2583> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_interfaces().V";
1220 ParametrizedType <2582 2583 -2584 2588 2589 -2590> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Enum.get_interfaces|V>";
1221 Method <2587 2590 -2591 2595> {PUBLIC} "get_interfaces";
1222 TypeParameter <2586 -2587 -2589 -2593> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_interfaces(VertexFilter<V>).V";
1223 ParametrizedType <2592 2593 -2594> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Enum.get_interfaces|V>";
1224 Parameter <2594 -2595> {} "filter";
1225 Method <2596 -2597 2599> {PUBLIC} "add_nestedClassifiers";
1226 Parameter <2598 -2599> {} "vertex";
1227 Method <2603 -2604> {PUBLIC} "remove_nestedClassifiers";
1228 WildcardType <2600 -2602> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
1229 Method <2605 -2606 2608> {PUBLIC} "remove_nestedClassifiers";
1230 Parameter <2607 -2608> {} "vertex";
1231 Method <2610 2613 -2614> {PUBLIC} "get_nestedClassifiers";
1232 TypeParameter <2609 -2610 -2612> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_nestedClassifiers().V";
1233 ParametrizedType <2611 2612 -2613 2617 2618 -2619> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Enum.get_nestedClassifiers|V>";
1234 Method <2616 2619 -2620 2624> {PUBLIC} "get_nestedClassifiers";
1235 TypeParameter <2615 -2616 -2618 -2622> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_nestedClassifiers(VertexFilter<V>).V";
1236 ParametrizedType <2621 2622 -2623> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Enum.get_nestedClassifiers|V>";
1237 Parameter <2623 -2624> {} "filter";
1238 Method <2625 -2626 2628> {PUBLIC} "add_superclass";
1239 Parameter <2627 -2628> {} "vertex";
1240 Method <2632 -2633> {PUBLIC} "remove_superclass";
1241 WildcardType <2629 -2631> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
1242 Method <2634 -2635 2637> {PUBLIC} "remove_superclass";
1243 Parameter <2636 -2637> {} "vertex";
1244 Method <2638 -2639> {PUBLIC} "get_superclass";
1245 Method <2640 -2641 2643> {PUBLIC} "add_typeParams";
1246 Parameter <2642 -2643> {} "vertex";
1247 Method <2647 -2648> {PUBLIC} "remove_typeParams";
1248 WildcardType <2644 -2646> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
1249 Method <2649 -2650 2652> {PUBLIC} "remove_typeParams";
1250 Parameter <2651 -2652> {} "vertex";
1251 Method <2654 2657 -2658> {PUBLIC} "get_typeParams";
1252 TypeParameter <2653 -2654 -2656> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_typeParams().V";
1253 ParametrizedType <2655 2656 -2657 2661 2662 -2663> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Enum.get_typeParams|V>";
1254 Method <2660 2663 -2664 2668> {PUBLIC} "get_typeParams";
1255 TypeParameter <2659 -2660 -2662 -2666> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_typeParams(VertexFilter<V>).V";
1256 ParametrizedType <2665 2666 -2667> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Enum.get_typeParams|V>";
1257 Parameter <2667 -2668> {} "filter";
1258 Method <2669 -2670 2672> {PUBLIC} "add_implementors";
1259 Parameter <2671 -2672> {} "vertex";
1260 Method <2676 -2677> {PUBLIC} "remove_implementors";
1261 WildcardType <2673 -2675> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
1262 Method <2678 -2679 2681> {PUBLIC} "remove_implementors";
1263 Parameter <2680 -2681> {} "vertex";
1264 Method <2683 2686 -2687> {PUBLIC} "get_implementors";
1265 TypeParameter <2682 -2683 -2685> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_implementors().V";
1266 ParametrizedType <2684 2685 -2686 2690 2691 -2692> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Enum.get_implementors|V>";
1267 Method <2689 2692 -2693 2697> {PUBLIC} "get_implementors";
1268 TypeParameter <2688 -2689 -2691 -2695> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_implementors(VertexFilter<V>).V";
1269 ParametrizedType <2694 2695 -2696> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Enum.get_implementors|V>";
1270 Parameter <2696 -2697> {} "filter";
1271 Method <2698 -2699 2701> {PUBLIC} "add_methods";
1272 Parameter <2700 -2701> {} "vertex";
1273 Method <2705 -2706> {PUBLIC} "remove_methods";
1274 WildcardType <2702 -2704> "? extends Method" "? extends de.uni_koblenz.jgralab.jex.schema.Method";
1275 Method <2707 -2708 2710> {PUBLIC} "remove_methods";
1276 Parameter <2709 -2710> {} "vertex";
1277 Method <2712 2715 -2716> {PUBLIC} "get_methods";
1278 TypeParameter <2711 -2712 -2714> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_methods().V";
1279 ParametrizedType <2713 2714 -2715 2719 2720 -2721> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Enum.get_methods|V>";
1280 Method <2718 2721 -2722 2726> {PUBLIC} "get_methods";
1281 TypeParameter <2717 -2718 -2720 -2724> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_methods(VertexFilter<V>).V";
1282 ParametrizedType <2723 2724 -2725> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Enum.get_methods|V>";
1283 Parameter <2725 -2726> {} "filter";
1284 Method <2727 -2728 2730> {PUBLIC} "add_parent";
1285 Parameter <2729 -2730> {} "vertex";
1286 Method <2734 -2735> {PUBLIC} "remove_parent";
1287 WildcardType <2731 -2733> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
1288 Method <2736 -2737 2739> {PUBLIC} "remove_parent";
1289 Parameter <2738 -2739> {} "vertex";
1290 Method <2740 -2741> {PUBLIC} "get_parent";
1291 Method <2742 -2743 2745> {PUBLIC} "add_enumConsts";
1292 Parameter <2744 -2745> {} "vertex";
1293 Method <2749 -2750> {PUBLIC} "remove_enumConsts";
1294 WildcardType <2746 -2748> "? extends EnumConst" "? extends de.uni_koblenz.jgralab.jex.schema.EnumConst";
1295 ParametrizedType <2747 2748 -2749 10667 10668 -10669> n "List<? extends EnumConst>" "java.util.List<? extends de.uni_koblenz.jgralab.jex.schema.EnumConst>";
1296 Method <2751 -2752 2754> {PUBLIC} "remove_enumConsts";
1297 Parameter <2753 -2754> {} "vertex";
1298 Method <2756 2759 -2760> {PUBLIC} "get_enumConsts";
1299 TypeParameter <2755 -2756 -2758> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_enumConsts().V";
1300 ParametrizedType <2757 2758 -2759 2763 2764 -2765> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Enum.get_enumConsts|V>";
1301 Method <2762 2765 -2766 2770> {PUBLIC} "get_enumConsts";
1302 TypeParameter <2761 -2762 -2764 -2768> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_enumConsts(VertexFilter<V>).V";
1303 ParametrizedType <2767 2768 -2769> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Enum.get_enumConsts|V>";
1304 Parameter <2769 -2770> {} "filter";
1305 Method <2771 -2772 2774> {PUBLIC} "add_arrayType";
1306 Parameter <2773 -2774> {} "vertex";
1307 Method <2778 -2779> {PUBLIC} "remove_arrayType";
1308 WildcardType <2775 -2777> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
1309 Method <2780 -2781 2783> {PUBLIC} "remove_arrayType";
1310 Parameter <2782 -2783> {} "vertex";
1311 Method <2785 2788 -2789> {PUBLIC} "get_arrayType";
1312 TypeParameter <2784 -2785 -2787> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_arrayType().V";
1313 ParametrizedType <2786 2787 -2788 2792 2793 -2794> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Enum.get_arrayType|V>";
1314 Method <2791 2794 -2795 2799> {PUBLIC} "get_arrayType";
1315 TypeParameter <2790 -2791 -2793 -2797> n "V" "de.uni_koblenz.jgralab.jex.schema.Enum.get_arrayType(VertexFilter<V>).V";
1316 ParametrizedType <2796 2797 -2798> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Enum.get_arrayType|V>";
1317 Parameter <2798 -2799> {} "filter";
1318 Method <2802 -2803> {PUBLIC} "getDeclaresEnumConstIncidences";
1319 ParametrizedType <2800 2801 -2802 2804 2805 -2806 2873 2874 -2875 2877 2878 -2879 3961 3962 -3963 10068 10069 -10070 10072 10073 -10074 10750 10751 -10752 10754 10755 -10756 13635 13636 -13637> n "Iterable<DeclaresEnumConst>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.DeclaresEnumConst>";
1320 Method <2806 -2807 2809> {PUBLIC} "getDeclaresEnumConstIncidences";
1321 Parameter <2808 -2809> {} "direction";
1322 SourceFile <2812 2883> 108 "src/de/uni_koblenz/jgralab/jex/schema/EnumConst.java";
1323 Field <2815 -2816> {PUBLIC FINAL STATIC} "VC";
1324 Method <2817 -2818> {PUBLIC} "getNextEnumConst";
1325 Method <2819 -2820> {PUBLIC} "getNextMember";
1326 Method <2821 -2822> {PUBLIC} "getNextNamedElement";
1327 Method <2823 -2824> {PUBLIC} "getFirstDeclaresEnumConstIncidence";
1328 Method <2825 -2826 2828> {PUBLIC} "getFirstDeclaresEnumConstIncidence";
1329 Parameter <2827 -2828> {} "orientation";
1330 Method <2829 -2830 2832> {PUBLIC} "add_importers";
1331 Parameter <2831 -2832> {} "vertex";
1332 Method <2836 -2837> {PUBLIC} "remove_importers";
1333 WildcardType <2833 -2835> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
1334 Method <2838 -2839 2841> {PUBLIC} "remove_importers";
1335 Parameter <2840 -2841> {} "vertex";
1336 Method <2843 2846 -2847> {PUBLIC} "get_importers";
1337 TypeParameter <2842 -2843 -2845> n "V" "de.uni_koblenz.jgralab.jex.schema.EnumConst.get_importers().V";
1338 ParametrizedType <2844 2845 -2846 2850 2851 -2852> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.EnumConst.get_importers|V>";
1339 Method <2849 2852 -2853 2857> {PUBLIC} "get_importers";
1340 TypeParameter <2848 -2849 -2851 -2855> n "V" "de.uni_koblenz.jgralab.jex.schema.EnumConst.get_importers(VertexFilter<V>).V";
1341 ParametrizedType <2854 2855 -2856> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.EnumConst.get_importers|V>";
1342 Parameter <2856 -2857> {} "filter";
1343 Method <2858 -2859 2861> {PUBLIC} "add_parent";
1344 Parameter <2860 -2861> {} "vertex";
1345 Method <2865 -2866> {PUBLIC} "remove_parent";
1346 WildcardType <2862 -2864> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
1347 Method <2867 -2868 2870> {PUBLIC} "remove_parent";
1348 Parameter <2869 -2870> {} "vertex";
1349 Method <2871 -2872> {PUBLIC} "get_parent";
1350 Method <2875 -2876> {PUBLIC} "getDeclaresEnumConstIncidences";
1351 Method <2879 -2880 2882> {PUBLIC} "getDeclaresEnumConstIncidences";
1352 Parameter <2881 -2882> {} "direction";
1353 SourceFile <2885 2886 2887 2903> 42 "src/de/uni_koblenz/jgralab/jex/schema/Extends.java";
1354 Field <2889 -2890> {PUBLIC FINAL STATIC} "EC";
1355 Method <2891 -2892> {PUBLIC} "getNextExtendsInGraph";
1356 Method <2893 -2894> {PUBLIC} "getNextExtendsIncidence";
1357 Method <2895 -2896 2898> {PUBLIC} "getNextExtendsIncidence";
1358 Parameter <2897 -2898> {} "orientation";
1359 Method <2899 -2900> {PUBLIC} "getAlpha";
1360 Method <2901 -2902> {PUBLIC} "getOmega";
1361 SourceFile <2905 2996> 145 "src/de/uni_koblenz/jgralab/jex/schema/Field.java";
1362 Field <2909 -2910> {PUBLIC FINAL STATIC} "VC";
1363 Method <2911 -2912> {PUBLIC} "getNextField";
1364 Method <2913 -2914> {PUBLIC} "getNextMember";
1365 Method <2915 -2916> {PUBLIC} "getNextModifiableElement";
1366 Method <2917 -2918> {PUBLIC} "getNextNamedElement";
1367 Method <2919 -2920> {PUBLIC} "getNextTypedElement";
1368 Method <2921 -2922> {PUBLIC} "getFirstDeclaresFieldIncidence";
1369 Method <2923 -2924 2926> {PUBLIC} "getFirstDeclaresFieldIncidence";
1370 Parameter <2925 -2926> {} "orientation";
1371 Method <2927 -2928 2930> {PUBLIC} "add_importers";
1372 Parameter <2929 -2930> {} "vertex";
1373 Method <2934 -2935> {PUBLIC} "remove_importers";
1374 WildcardType <2931 -2933> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
1375 Method <2936 -2937 2939> {PUBLIC} "remove_importers";
1376 Parameter <2938 -2939> {} "vertex";
1377 Method <2941 2944 -2945> {PUBLIC} "get_importers";
1378 TypeParameter <2940 -2941 -2943> n "V" "de.uni_koblenz.jgralab.jex.schema.Field.get_importers().V";
1379 ParametrizedType <2942 2943 -2944 2948 2949 -2950> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Field.get_importers|V>";
1380 Method <2947 2950 -2951 2955> {PUBLIC} "get_importers";
1381 TypeParameter <2946 -2947 -2949 -2953> n "V" "de.uni_koblenz.jgralab.jex.schema.Field.get_importers(VertexFilter<V>).V";
1382 ParametrizedType <2952 2953 -2954> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Field.get_importers|V>";
1383 Parameter <2954 -2955> {} "filter";
1384 Method <2956 -2957 2959> {PUBLIC} "add_parent";
1385 Parameter <2958 -2959> {} "vertex";
1386 Method <2963 -2964> {PUBLIC} "remove_parent";
1387 WildcardType <2960 -2962> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
1388 Method <2965 -2966 2968> {PUBLIC} "remove_parent";
1389 Parameter <2967 -2968> {} "vertex";
1390 Method <2969 -2970> {PUBLIC} "get_parent";
1391 Method <2971 -2972 2974> {PUBLIC} "add_type";
1392 Parameter <2973 -2974> {} "vertex";
1393 Method <2978 -2979> {PUBLIC} "remove_type";
1394 WildcardType <2975 -2977> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
1395 Method <2980 -2981 2983> {PUBLIC} "remove_type";
1396 Parameter <2982 -2983> {} "vertex";
1397 Method <2984 -2985> {PUBLIC} "get_type";
1398 Method <2988 -2989> {PUBLIC} "getDeclaresFieldIncidences";
1399 Method <2992 -2993 2995> {PUBLIC} "getDeclaresFieldIncidences";
1400 Parameter <2994 -2995> {} "direction";
1401 SourceFile <2998 2999 3000 3016> 42 "src/de/uni_koblenz/jgralab/jex/schema/HasBound.java";
1402 Interface <3001 3003 -3004 3005 -3006 3007 -3008 3009 3013 3015 -3016 -3017 -3733 -3735 -3930 -5880 -5882 -6001 -6005 -6049 -6051 -6331 -6415 -6419 -7030 -7032 -7576 -7580 -7824 -7826 -7970 -7974 -8146 -8148 -8657 -8661 -10261 -10263 -10811 -10815 -11238 -11291 -11293 -11295 -12346 -12348 -12857 -12861 -13275 -13277 -13283 -13604 -14899 -14901 -15410 -15414 -15648 -15650 -15779 -15783 -16439 -16471 -16473 -16475 -17526 -17528 -17862 -18016 -18020 -18236 -18238 -18397 -18401> {PUBLIC} "HasBound" "de.uni_koblenz.jgralab.jex.schema.HasBound";
1403 Field <3002 -3003> {PUBLIC FINAL STATIC} "EC";
1404 Method <3004 -3005> {PUBLIC} "getNextHasBoundInGraph";
1405 Method <3006 -3007> {PUBLIC} "getNextHasBoundIncidence";
1406 Method <3008 -3009 3011> {PUBLIC} "getNextHasBoundIncidence";
1407 Parameter <3010 -3011> {} "orientation";
1408 Method <3012 -3013> {PUBLIC} "getAlpha";
1409 Method <3014 -3015> {PUBLIC} "getOmega";
1410 SourceFile <3018 3019 3020 3036> 42 "src/de/uni_koblenz/jgralab/jex/schema/HasElementType.java";
1411 Field <3022 -3023> {PUBLIC FINAL STATIC} "EC";
1412 Method <3024 -3025> {PUBLIC} "getNextHasElementTypeInGraph";
1413 Method <3026 -3027> {PUBLIC} "getNextHasElementTypeIncidence";
1414 Method <3028 -3029 3031> {PUBLIC} "getNextHasElementTypeIncidence";
1415 Parameter <3030 -3031> {} "orientation";
1416 Method <3032 -3033> {PUBLIC} "getAlpha";
1417 Method <3034 -3035> {PUBLIC} "getOmega";
1418 SourceFile <3038 3039 3040 3056> 42 "src/de/uni_koblenz/jgralab/jex/schema/HasGenericType.java";
1419 Interface <-3040 -3052 -3119 -3132 -3753 -3785 -3845 -3847 -3998 -4002 -4006 5153 5154 5156 5158 5160 5162 5164 -5165 5166 5168 5170 5172 5174 5176 5180 5182 5186 5193 5195 5203 5209 5215 5222 5224 5232 5238 5244 5251 5253 5261 5267 5273 5280 5282 5286 5288 5295 5297 5305 5311 5317 5324 5326 5334 5340 5346 5353 5355 5363 5369 5375 5382 5384 5392 5398 5404 5411 5413 5421 5427 5433 5440 5442 5446 5448 5455 5457 5465 5471 5477 5484 5486 5494 5500 5506 5513 5515 5519 5521 5528 5530 5538 5544 5552 5556 5562 5566 -5569 -5570 -11408 -11481 -11668 -11742 -13311 -13319 -13375 -13383 -13491 -13493 -13495 -13672 -13676 -13680 -14755 -14843 -16549 -16593 -16719 -16764> {PUBLIC} "ParametrizedType" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType";
1420 Field <3042 -3043> {PUBLIC FINAL STATIC} "EC";
1421 Method <3044 -3045> {PUBLIC} "getNextHasGenericTypeInGraph";
1422 Method <3046 -3047> {PUBLIC} "getNextHasGenericTypeIncidence";
1423 Method <3048 -3049 3051> {PUBLIC} "getNextHasGenericTypeIncidence";
1424 Parameter <3050 -3051> {} "orientation";
1425 Method <3052 -3053> {PUBLIC} "getAlpha";
1426 Method <3054 -3055> {PUBLIC} "getOmega";
1427 SourceFile <3058 3059 3060 3076> 42 "src/de/uni_koblenz/jgralab/jex/schema/HasLowerBound.java";
1428 Interface <-3060 -3072 -3160 -3172 -3761 -3801 -3877 -3879 -4142 -4146 -4150 6522 6523 6525 6527 6529 6531 -6532 6533 6535 6537 6541 6543 6547 6554 6556 6564 6570 6576 6583 6585 6589 6591 6598 6600 6608 6614 6620 6627 6629 6633 6637 6641 6647 6651 -6654 -6655 -11495 -11568 -11930 -12003 -13327 -13335 -13407 -13415 -13547 -13549 -13551 -13816 -13820 -13824 -16606 -16650 -16891 -16935 -18127 -18198> {PUBLIC} "WildcardType" "de.uni_koblenz.jgralab.jex.schema.WildcardType";
1429 Interface <3061 3063 -3064 3065 -3066 3067 -3068 3069 3073 3075 -3076 -3077 -3757 -3759 -3938 -5886 -5888 -6011 -6015 -6540 -6542 -6619 -6645 -6649 -7036 -7038 -7586 -7590 -7830 -7832 -7980 -7984 -8152 -8154 -8667 -8671 -10267 -10269 -10821 -10825 -11499 -11552 -11554 -11556 -12352 -12354 -12867 -12871 -13323 -13325 -13331 -13612 -14905 -14907 -15420 -15424 -15654 -15656 -15789 -15793 -16610 -16642 -16644 -16646 -17532 -17534 -18026 -18030 -18242 -18244 -18321 -18407 -18411> {PUBLIC} "HasLowerBound" "de.uni_koblenz.jgralab.jex.schema.HasLowerBound";
1430 Field <3062 -3063> {PUBLIC FINAL STATIC} "EC";
1431 Method <3064 -3065> {PUBLIC} "getNextHasLowerBoundInGraph";
1432 Method <3066 -3067> {PUBLIC} "getNextHasLowerBoundIncidence";
1433 Method <3068 -3069 3071> {PUBLIC} "getNextHasLowerBoundIncidence";
1434 Parameter <3070 -3071> {} "orientation";
1435 Method <3072 -3073> {PUBLIC} "getAlpha";
1436 Method <3074 -3075> {PUBLIC} "getOmega";
1437 SourceFile <3078 3079 3080 3096> 42 "src/de/uni_koblenz/jgralab/jex/schema/HasParam.java";
1438 Field <3082 -3083> {PUBLIC FINAL STATIC} "EC";
1439 Method <3084 -3085> {PUBLIC} "getNextHasParamInGraph";
1440 Method <3086 -3087> {PUBLIC} "getNextHasParamIncidence";
1441 Method <3088 -3089 3091> {PUBLIC} "getNextHasParamIncidence";
1442 Parameter <3090 -3091> {} "orientation";
1443 Method <3092 -3093> {PUBLIC} "getAlpha";
1444 Method <3094 -3095> {PUBLIC} "getOmega";
1445 SourceFile <3098 3099 3100 3116> 42 "src/de/uni_koblenz/jgralab/jex/schema/HasType.java";
1446 Field <3102 -3103> {PUBLIC FINAL STATIC} "EC";
1447 Method <3104 -3105> {PUBLIC} "getNextHasTypeInGraph";
1448 Method <3106 -3107> {PUBLIC} "getNextHasTypeIncidence";
1449 Method <3108 -3109 3111> {PUBLIC} "getNextHasTypeIncidence";
1450 Parameter <3110 -3111> {} "orientation";
1451 Method <3112 -3113> {PUBLIC} "getAlpha";
1452 Method <3114 -3115> {PUBLIC} "getOmega";
1453 SourceFile <3118 3119 3120 3136> 42 "src/de/uni_koblenz/jgralab/jex/schema/HasTypeArg.java";
1454 Interface <3121 3123 -3124 3125 -3126 3127 -3128 3129 3133 3135 -3136 -3137 -3781 -3783 -3946 -5179 -5181 -5447 -5560 -5564 -5862 -5864 -5971 -5975 -7000 -7002 -7526 -7530 -7800 -7802 -7930 -7934 -8116 -8118 -8607 -8611 -10231 -10233 -10761 -10765 -11673 -11726 -11728 -11730 -12316 -12318 -12807 -12811 -13371 -13373 -13379 -13620 -14869 -14871 -15227 -15360 -15364 -15624 -15626 -15739 -15743 -16724 -16756 -16758 -16760 -17496 -17498 -17966 -17970 -18212 -18214 -18357 -18361> {PUBLIC} "HasTypeArg" "de.uni_koblenz.jgralab.jex.schema.HasTypeArg";
1455 Field <3122 -3123> {PUBLIC FINAL STATIC} "EC";
1456 Method <3124 -3125> {PUBLIC} "getNextHasTypeArgInGraph";
1457 Method <3126 -3127> {PUBLIC} "getNextHasTypeArgIncidence";
1458 Method <3128 -3129 3131> {PUBLIC} "getNextHasTypeArgIncidence";
1459 Parameter <3130 -3131> {} "orientation";
1460 Method <3132 -3133> {PUBLIC} "getAlpha";
1461 Method <3134 -3135> {PUBLIC} "getOmega";
1462 SourceFile <3138 3139 3140 3156> 42 "src/de/uni_koblenz/jgralab/jex/schema/HasTypeParam.java";
1463 Field <3142 -3143> {PUBLIC FINAL STATIC} "EC";
1464 Method <3144 -3145> {PUBLIC} "getNextHasTypeParamInGraph";
1465 Method <3146 -3147> {PUBLIC} "getNextHasTypeParamIncidence";
1466 Method <3148 -3149 3151> {PUBLIC} "getNextHasTypeParamIncidence";
1467 Parameter <3150 -3151> {} "orientation";
1468 Method <3152 -3153> {PUBLIC} "getAlpha";
1469 Method <3154 -3155> {PUBLIC} "getOmega";
1470 SourceFile <3158 3159 3160 3176> 42 "src/de/uni_koblenz/jgralab/jex/schema/HasUpperBound.java";
1471 Interface <3161 3163 -3164 3165 -3166 3167 -3168 3169 3173 3175 -3176 -3177 -3797 -3799 -3942 -5850 -5852 -5951 -5955 -6534 -6536 -6575 -6635 -6639 -6988 -6990 -7506 -7510 -7788 -7790 -7910 -7914 -8104 -8106 -8587 -8591 -10213 -10215 -10731 -10735 -11934 -11987 -11989 -11991 -12304 -12306 -12787 -12791 -13403 -13405 -13411 -13616 -14857 -14859 -15340 -15344 -15612 -15614 -15719 -15723 -16895 -16927 -16929 -16931 -17484 -17486 -17946 -17950 -18200 -18202 -18277 -18337 -18341> {PUBLIC} "HasUpperBound" "de.uni_koblenz.jgralab.jex.schema.HasUpperBound";
1472 Field <3162 -3163> {PUBLIC FINAL STATIC} "EC";
1473 Method <3164 -3165> {PUBLIC} "getNextHasUpperBoundInGraph";
1474 Method <3166 -3167> {PUBLIC} "getNextHasUpperBoundIncidence";
1475 Method <3168 -3169 3171> {PUBLIC} "getNextHasUpperBoundIncidence";
1476 Parameter <3170 -3171> {} "orientation";
1477 Method <3172 -3173> {PUBLIC} "getAlpha";
1478 Method <3174 -3175> {PUBLIC} "getOmega";
1479 SourceFile <3178 3179 3180 3196> 42 "src/de/uni_koblenz/jgralab/jex/schema/Implements.java";
1480 Field <3182 -3183> {PUBLIC FINAL STATIC} "EC";
1481 Method <3184 -3185> {PUBLIC} "getNextImplementsInGraph";
1482 Method <3186 -3187> {PUBLIC} "getNextImplementsIncidence";
1483 Method <3188 -3189 3191> {PUBLIC} "getNextImplementsIncidence";
1484 Parameter <3190 -3191> {} "orientation";
1485 Method <3192 -3193> {PUBLIC} "getAlpha";
1486 Method <3194 -3195> {PUBLIC} "getOmega";
1487 SourceFile <3198 3199 3200 3222> 46 "src/de/uni_koblenz/jgralab/jex/schema/Imports.java";
1488 Field <3202 -3203> {PUBLIC FINAL STATIC} "EC";
1489 Method <3204 -3205> {PUBLIC} "get_lineNo";
1490 Method <3206 -3207 3209> {PUBLIC} "set_lineNo";
1491 Parameter <3208 -3209> {} "_lineNo";
1492 Method <3210 -3211> {PUBLIC} "getNextImportsInGraph";
1493 Method <3212 -3213> {PUBLIC} "getNextImportsIncidence";
1494 Method <3214 -3215 3217> {PUBLIC} "getNextImportsIncidence";
1495 Parameter <3216 -3217> {} "orientation";
1496 Method <3218 -3219> {PUBLIC} "getAlpha";
1497 Method <3220 -3221> {PUBLIC} "getOmega";
1498 SourceFile <3610> 458 "src/de/uni_koblenz/jgralab/jex/schema/Interface.java";
1499 Interface <3224 3225 3227 3229 3231 -3232 3233 3235 3237 3239 3241 3243 3245 3247 3254 3256 3264 3270 3276 3283 3285 3293 3299 3305 3312 3314 3322 3328 3334 3341 3343 3347 3349 3356 3358 3366 3372 3378 3385 3387 3395 3401 3407 3414 3416 3424 3430 3436 3443 3445 3453 3459 3465 3472 3474 3478 3480 3487 3489 3497 3503 3509 3516 3518 3526 3532 3538 3545 3547 3555 3561 3567 3574 3576 3580 3582 3589 3591 3599 3605 -3610 -3611 -3821 -3823 -4094 -4098 -4102 -12200 -12284 -13451 -13453 -13455 -13768 -13772 -13776> {PUBLIC} "Interface" "de.uni_koblenz.jgralab.jex.schema.Interface";
1500 Field <3226 -3227> {PUBLIC FINAL STATIC} "VC";
1501 Method <3228 -3229> {PUBLIC} "getNextAbstractClassifier";
1502 Method <3230 -3231> {PUBLIC} "getNextClassifier";
1503 Method <3232 -3233> {PUBLIC} "getNextInterface";
1504 Method <3234 -3235> {PUBLIC} "getNextMember";
1505 Method <3236 -3237> {PUBLIC} "getNextModifiableElement";
1506 Method <3238 -3239> {PUBLIC} "getNextNamedElement";
1507 Method <3240 -3241> {PUBLIC} "getNextQualifiedNamedElement";
1508 Method <3242 -3243> {PUBLIC} "getNextType";
1509 Method <3244 -3245> {PUBLIC} "getNextTypeParametrizable";
1510 Method <3246 -3247 3249> {PUBLIC} "add_constructors";
1511 Parameter <3248 -3249> {} "vertex";
1512 Method <3253 -3254> {PUBLIC} "remove_constructors";
1513 WildcardType <3250 -3252> "? extends Constructor" "? extends de.uni_koblenz.jgralab.jex.schema.Constructor";
1514 Method <3255 -3256 3258> {PUBLIC} "remove_constructors";
1515 Parameter <3257 -3258> {} "vertex";
1516 Method <3260 3263 -3264> {PUBLIC} "get_constructors";
1517 TypeParameter <3259 -3260 -3262> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_constructors().V";
1518 ParametrizedType <3261 3262 -3263 3267 3268 -3269> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Interface.get_constructors|V>";
1519 Method <3266 3269 -3270 3274> {PUBLIC} "get_constructors";
1520 TypeParameter <3265 -3266 -3268 -3272> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_constructors(VertexFilter<V>).V";
1521 ParametrizedType <3271 3272 -3273> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Interface.get_constructors|V>";
1522 Parameter <3273 -3274> {} "filter";
1523 Method <3275 -3276 3278> {PUBLIC} "add_importers";
1524 Parameter <3277 -3278> {} "vertex";
1525 Method <3282 -3283> {PUBLIC} "remove_importers";
1526 WildcardType <3279 -3281> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
1527 Method <3284 -3285 3287> {PUBLIC} "remove_importers";
1528 Parameter <3286 -3287> {} "vertex";
1529 Method <3289 3292 -3293> {PUBLIC} "get_importers";
1530 TypeParameter <3288 -3289 -3291> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_importers().V";
1531 ParametrizedType <3290 3291 -3292 3296 3297 -3298> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Interface.get_importers|V>";
1532 Method <3295 3298 -3299 3303> {PUBLIC} "get_importers";
1533 TypeParameter <3294 -3295 -3297 -3301> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_importers(VertexFilter<V>).V";
1534 ParametrizedType <3300 3301 -3302> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Interface.get_importers|V>";
1535 Parameter <3302 -3303> {} "filter";
1536 Method <3304 -3305 3307> {PUBLIC} "add_fields";
1537 Parameter <3306 -3307> {} "vertex";
1538 Method <3311 -3312> {PUBLIC} "remove_fields";
1539 WildcardType <3308 -3310> "? extends Field" "? extends de.uni_koblenz.jgralab.jex.schema.Field";
1540 Method <3313 -3314 3316> {PUBLIC} "remove_fields";
1541 Parameter <3315 -3316> {} "vertex";
1542 Method <3318 3321 -3322> {PUBLIC} "get_fields";
1543 TypeParameter <3317 -3318 -3320> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_fields().V";
1544 ParametrizedType <3319 3320 -3321 3325 3326 -3327> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Interface.get_fields|V>";
1545 Method <3324 3327 -3328 3332> {PUBLIC} "get_fields";
1546 TypeParameter <3323 -3324 -3326 -3330> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_fields(VertexFilter<V>).V";
1547 ParametrizedType <3329 3330 -3331> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Interface.get_fields|V>";
1548 Parameter <3331 -3332> {} "filter";
1549 Method <3333 -3334 3336> {PUBLIC} "add_sourceFile";
1550 Parameter <3335 -3336> {} "vertex";
1551 Method <3340 -3341> {PUBLIC} "remove_sourceFile";
1552 WildcardType <3337 -3339> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
1553 Method <3342 -3343 3345> {PUBLIC} "remove_sourceFile";
1554 Parameter <3344 -3345> {} "vertex";
1555 Method <3346 -3347> {PUBLIC} "get_sourceFile";
1556 Method <3348 -3349 3351> {PUBLIC} "add_members";
1557 Parameter <3350 -3351> {} "vertex";
1558 Method <3355 -3356> {PUBLIC} "remove_members";
1559 WildcardType <3352 -3354> "? extends Member" "? extends de.uni_koblenz.jgralab.jex.schema.Member";
1560 Method <3357 -3358 3360> {PUBLIC} "remove_members";
1561 Parameter <3359 -3360> {} "vertex";
1562 Method <3362 3365 -3366> {PUBLIC} "get_members";
1563 TypeParameter <3361 -3362 -3364> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_members().V";
1564 ParametrizedType <3363 3364 -3365 3369 3370 -3371> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Interface.get_members|V>";
1565 Method <3368 3371 -3372 3376> {PUBLIC} "get_members";
1566 TypeParameter <3367 -3368 -3370 -3374> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_members(VertexFilter<V>).V";
1567 ParametrizedType <3373 3374 -3375> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Interface.get_members|V>";
1568 Parameter <3375 -3376> {} "filter";
1569 Method <3377 -3378 3380> {PUBLIC} "add_subclasses";
1570 Parameter <3379 -3380> {} "vertex";
1571 Method <3384 -3385> {PUBLIC} "remove_subclasses";
1572 WildcardType <3381 -3383> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
1573 Method <3386 -3387 3389> {PUBLIC} "remove_subclasses";
1574 Parameter <3388 -3389> {} "vertex";
1575 Method <3391 3394 -3395> {PUBLIC} "get_subclasses";
1576 TypeParameter <3390 -3391 -3393> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_subclasses().V";
1577 ParametrizedType <3392 3393 -3394 3398 3399 -3400> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Interface.get_subclasses|V>";
1578 Method <3397 3400 -3401 3405> {PUBLIC} "get_subclasses";
1579 TypeParameter <3396 -3397 -3399 -3403> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_subclasses(VertexFilter<V>).V";
1580 ParametrizedType <3402 3403 -3404> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Interface.get_subclasses|V>";
1581 Parameter <3404 -3405> {} "filter";
1582 Method <3406 -3407 3409> {PUBLIC} "add_interfaces";
1583 Parameter <3408 -3409> {} "vertex";
1584 Method <3413 -3414> {PUBLIC} "remove_interfaces";
1585 WildcardType <3410 -3412> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
1586 Method <3415 -3416 3418> {PUBLIC} "remove_interfaces";
1587 Parameter <3417 -3418> {} "vertex";
1588 Method <3420 3423 -3424> {PUBLIC} "get_interfaces";
1589 TypeParameter <3419 -3420 -3422> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_interfaces().V";
1590 ParametrizedType <3421 3422 -3423 3427 3428 -3429> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Interface.get_interfaces|V>";
1591 Method <3426 3429 -3430 3434> {PUBLIC} "get_interfaces";
1592 TypeParameter <3425 -3426 -3428 -3432> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_interfaces(VertexFilter<V>).V";
1593 ParametrizedType <3431 3432 -3433> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Interface.get_interfaces|V>";
1594 Parameter <3433 -3434> {} "filter";
1595 Method <3435 -3436 3438> {PUBLIC} "add_nestedClassifiers";
1596 Parameter <3437 -3438> {} "vertex";
1597 Method <3442 -3443> {PUBLIC} "remove_nestedClassifiers";
1598 WildcardType <3439 -3441> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
1599 Method <3444 -3445 3447> {PUBLIC} "remove_nestedClassifiers";
1600 Parameter <3446 -3447> {} "vertex";
1601 Method <3449 3452 -3453> {PUBLIC} "get_nestedClassifiers";
1602 TypeParameter <3448 -3449 -3451> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_nestedClassifiers().V";
1603 ParametrizedType <3450 3451 -3452 3456 3457 -3458> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Interface.get_nestedClassifiers|V>";
1604 Method <3455 3458 -3459 3463> {PUBLIC} "get_nestedClassifiers";
1605 TypeParameter <3454 -3455 -3457 -3461> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_nestedClassifiers(VertexFilter<V>).V";
1606 ParametrizedType <3460 3461 -3462> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Interface.get_nestedClassifiers|V>";
1607 Parameter <3462 -3463> {} "filter";
1608 Method <3464 -3465 3467> {PUBLIC} "add_superclass";
1609 Parameter <3466 -3467> {} "vertex";
1610 Method <3471 -3472> {PUBLIC} "remove_superclass";
1611 WildcardType <3468 -3470> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
1612 Method <3473 -3474 3476> {PUBLIC} "remove_superclass";
1613 Parameter <3475 -3476> {} "vertex";
1614 Method <3477 -3478> {PUBLIC} "get_superclass";
1615 Method <3479 -3480 3482> {PUBLIC} "add_typeParams";
1616 Parameter <3481 -3482> {} "vertex";
1617 Method <3486 -3487> {PUBLIC} "remove_typeParams";
1618 WildcardType <3483 -3485> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
1619 Method <3488 -3489 3491> {PUBLIC} "remove_typeParams";
1620 Parameter <3490 -3491> {} "vertex";
1621 Method <3493 3496 -3497> {PUBLIC} "get_typeParams";
1622 TypeParameter <3492 -3493 -3495> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_typeParams().V";
1623 ParametrizedType <3494 3495 -3496 3500 3501 -3502> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Interface.get_typeParams|V>";
1624 Method <3499 3502 -3503 3507> {PUBLIC} "get_typeParams";
1625 TypeParameter <3498 -3499 -3501 -3505> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_typeParams(VertexFilter<V>).V";
1626 ParametrizedType <3504 3505 -3506> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Interface.get_typeParams|V>";
1627 Parameter <3506 -3507> {} "filter";
1628 Method <3508 -3509 3511> {PUBLIC} "add_implementors";
1629 Parameter <3510 -3511> {} "vertex";
1630 Method <3515 -3516> {PUBLIC} "remove_implementors";
1631 WildcardType <3512 -3514> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
1632 Method <3517 -3518 3520> {PUBLIC} "remove_implementors";
1633 Parameter <3519 -3520> {} "vertex";
1634 Method <3522 3525 -3526> {PUBLIC} "get_implementors";
1635 TypeParameter <3521 -3522 -3524> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_implementors().V";
1636 ParametrizedType <3523 3524 -3525 3529 3530 -3531> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Interface.get_implementors|V>";
1637 Method <3528 3531 -3532 3536> {PUBLIC} "get_implementors";
1638 TypeParameter <3527 -3528 -3530 -3534> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_implementors(VertexFilter<V>).V";
1639 ParametrizedType <3533 3534 -3535> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Interface.get_implementors|V>";
1640 Parameter <3535 -3536> {} "filter";
1641 Method <3537 -3538 3540> {PUBLIC} "add_methods";
1642 Parameter <3539 -3540> {} "vertex";
1643 Method <3544 -3545> {PUBLIC} "remove_methods";
1644 WildcardType <3541 -3543> "? extends Method" "? extends de.uni_koblenz.jgralab.jex.schema.Method";
1645 Method <3546 -3547 3549> {PUBLIC} "remove_methods";
1646 Parameter <3548 -3549> {} "vertex";
1647 Method <3551 3554 -3555> {PUBLIC} "get_methods";
1648 TypeParameter <3550 -3551 -3553> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_methods().V";
1649 ParametrizedType <3552 3553 -3554 3558 3559 -3560> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Interface.get_methods|V>";
1650 Method <3557 3560 -3561 3565> {PUBLIC} "get_methods";
1651 TypeParameter <3556 -3557 -3559 -3563> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_methods(VertexFilter<V>).V";
1652 ParametrizedType <3562 3563 -3564> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Interface.get_methods|V>";
1653 Parameter <3564 -3565> {} "filter";
1654 Method <3566 -3567 3569> {PUBLIC} "add_parent";
1655 Parameter <3568 -3569> {} "vertex";
1656 Method <3573 -3574> {PUBLIC} "remove_parent";
1657 WildcardType <3570 -3572> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
1658 Method <3575 -3576 3578> {PUBLIC} "remove_parent";
1659 Parameter <3577 -3578> {} "vertex";
1660 Method <3579 -3580> {PUBLIC} "get_parent";
1661 Method <3581 -3582 3584> {PUBLIC} "add_arrayType";
1662 Parameter <3583 -3584> {} "vertex";
1663 Method <3588 -3589> {PUBLIC} "remove_arrayType";
1664 WildcardType <3585 -3587> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
1665 Method <3590 -3591 3593> {PUBLIC} "remove_arrayType";
1666 Parameter <3592 -3593> {} "vertex";
1667 Method <3595 3598 -3599> {PUBLIC} "get_arrayType";
1668 TypeParameter <3594 -3595 -3597> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_arrayType().V";
1669 ParametrizedType <3596 3597 -3598 3602 3603 -3604> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Interface.get_arrayType|V>";
1670 Method <3601 3604 -3605 3609> {PUBLIC} "get_arrayType";
1671 TypeParameter <3600 -3601 -3603 -3607> n "V" "de.uni_koblenz.jgralab.jex.schema.Interface.get_arrayType(VertexFilter<V>).V";
1672 ParametrizedType <3606 3607 -3608> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Interface.get_arrayType|V>";
1673 Parameter <3608 -3609> {} "filter";
1674 SourceFile <4297> 995 "src/de/uni_koblenz/jgralab/jex/schema/JavaGraph.java";
1675 Interface <3612 3614 3616 3618 3620 3622 3624 3626 3628 3630 3632 3634 3636 3638 3640 3642 3648 3650 3656 3658 3660 3666 3668 3674 3676 3682 3684 3690 3692 3698 3700 3706 3708 3714 3716 3718 3720 3722 3724 3730 3732 3734 3736 3742 3744 3750 3752 3758 3760 3766 3768 3774 3776 3782 3784 3790 3792 3798 3800 3806 3808 3814 3816 3822 3824 3826 3828 3830 3832 3834 3836 3838 3840 3842 3844 3846 3848 3850 3852 3854 3856 3858 3860 3862 3868 3870 3872 3874 3876 3878 3880 3884 3888 3892 3896 3900 3904 3908 3912 3916 3920 3924 3928 3932 3936 3940 3944 3948 3952 3956 3960 3964 3968 3972 3976 3980 3988 3992 4000 4004 4012 4016 4024 4028 4036 4040 4048 4052 4060 4064 4072 4076 4084 4088 4096 4100 4108 4112 4120 4124 4132 4136 4144 4148 4156 4160 4168 4172 4180 4184 4192 4196 4204 4208 4216 4220 4228 4232 4240 4244 4252 4256 4264 4268 4276 4280 4288 4292 -4297 -4298 -4323 -4327 -4337 -4341 -4351 -4356 -4363 -4370 -4379 -4386 -12985> {PUBLIC} "JavaGraph" "de.uni_koblenz.jgralab.jex.schema.JavaGraph";
1676 Interface <-3612 -6679 -6897 -7717 -8013 -8788 -9106 -9192 -9280 -9376 -9472 -9568 -9664 -9759 -9856 -9949 -10122 -10938 -11030 -11242 -11329 -11416 -11503 -11590 -11677 -11764 -11851 -11938 -12025 -12114 -12213 -12984 -13004 -13994 -14347 -14568 -14768 -15541 -15803 -15815 -15860 -15871 -15916 -15929 -15982 -15995 -16048 -16061 -16114 -16127 -16180 -16193 -16246 -16258 -16311 -16323 -16374 -16386 -16431 -16443 -16488 -16500 -16545 -16557 -16602 -16614 -16659 -16671 -16716 -16728 -16773 -16785 -16830 -16842 -16887 -16899 -16944 -16956 -17001 -17013 -17064 -17076 -17135 -17302 -17395 -18135> {PUBLIC} "Graph" "de.uni_koblenz.jgralab.Graph";
1677 Interface <-3613 -4308 -13002> {PUBLIC} "GraphClass" "de.uni_koblenz.jgralab.schema.GraphClass";
1678 Field <3613 -3614> {PUBLIC FINAL STATIC} "GC";
1679 Method <3615 -3616> {PUBLIC} "getFirstAbstractClassifier";
1680 Method <3617 -3618> {PUBLIC} "getFirstAnnotation";
1681 Method <3619 -3620> {PUBLIC} "createAnnotation";
1682 Method <3621 -3622> {PUBLIC} "getFirstAnnotationElement";
1683 Method <3623 -3624> {PUBLIC} "createAnnotationElement";
1684 Method <3625 -3626> {PUBLIC} "getFirstArrayType";
1685 Method <3627 -3628> {PUBLIC} "createArrayType";
1686 Method <3629 -3630> {PUBLIC} "getFirstClass";
1687 Method <3631 -3632> {PUBLIC} "createClass";
1688 Method <3633 -3634> {PUBLIC} "getFirstClassifier";
1689 Method <3635 -3636> {PUBLIC} "getFirstConstructor";
1690 Method <3637 -3638> {PUBLIC} "createConstructor";
1691 Method <3639 -3640> {PUBLIC} "getFirstContainsClassifier";
1692 Method <3641 -3642 3644 3646> {PUBLIC} "createContainsClassifier";
1693 Parameter <3643 -3644> {} "alpha";
1694 Parameter <3645 -3646> {} "omega";
1695 Method <3647 -3648> {PUBLIC} "getFirstContainsPackage";
1696 Method <3649 -3650 3652 3654> {PUBLIC} "createContainsPackage";
1697 Parameter <3651 -3652> {} "alpha";
1698 Parameter <3653 -3654> {} "omega";
1699 Method <3655 -3656> {PUBLIC} "getFirstDeclares";
1700 Method <3657 -3658> {PUBLIC} "getFirstDeclaresAnnotationElement";
1701 Method <3659 -3660 3662 3664> {PUBLIC} "createDeclaresAnnotationElement";
1702 Parameter <3661 -3662> {} "alpha";
1703 Parameter <3663 -3664> {} "omega";
1704 Method <3665 -3666> {PUBLIC} "getFirstDeclaresConstructor";
1705 Method <3667 -3668 3670 3672> {PUBLIC} "createDeclaresConstructor";
1706 Parameter <3669 -3670> {} "alpha";
1707 Parameter <3671 -3672> {} "omega";
1708 Method <3673 -3674> {PUBLIC} "getFirstDeclaresEnumConst";
1709 Method <3675 -3676 3678 3680> {PUBLIC} "createDeclaresEnumConst";
1710 Parameter <3677 -3678> {} "alpha";
1711 Parameter <3679 -3680> {} "omega";
1712 Method <3681 -3682> {PUBLIC} "getFirstDeclaresField";
1713 Method <3683 -3684 3686 3688> {PUBLIC} "createDeclaresField";
1714 Parameter <3685 -3686> {} "alpha";
1715 Parameter <3687 -3688> {} "omega";
1716 Method <3689 -3690> {PUBLIC} "getFirstDeclaresMethod";
1717 Method <3691 -3692 3694 3696> {PUBLIC} "createDeclaresMethod";
1718 Parameter <3693 -3694> {} "alpha";
1719 Parameter <3695 -3696> {} "omega";
1720 Method <3697 -3698> {PUBLIC} "getFirstDeclaresNestedClassifier";
1721 Method <3699 -3700 3702 3704> {PUBLIC} "createDeclaresNestedClassifier";
1722 Parameter <3701 -3702> {} "alpha";
1723 Parameter <3703 -3704> {} "omega";
1724 Method <3705 -3706> {PUBLIC} "getFirstDefines";
1725 Method <3707 -3708 3710 3712> {PUBLIC} "createDefines";
1726 Parameter <3709 -3710> {} "alpha";
1727 Parameter <3711 -3712> {} "omega";
1728 Method <3713 -3714> {PUBLIC} "getFirstEnum";
1729 Method <3715 -3716> {PUBLIC} "createEnum";
1730 Method <3717 -3718> {PUBLIC} "getFirstEnumConst";
1731 Method <3719 -3720> {PUBLIC} "createEnumConst";
1732 Method <3721 -3722> {PUBLIC} "getFirstExtends";
1733 Method <3723 -3724 3726 3728> {PUBLIC} "createExtends";
1734 Parameter <3725 -3726> {} "alpha";
1735 Parameter <3727 -3728> {} "omega";
1736 Method <3729 -3730> {PUBLIC} "getFirstField";
1737 Method <3731 -3732> {PUBLIC} "createField";
1738 Method <3733 -3734> {PUBLIC} "getFirstHasBound";
1739 Method <3735 -3736 3738 3740> {PUBLIC} "createHasBound";
1740 Parameter <3737 -3738> {} "alpha";
1741 Parameter <3739 -3740> {} "omega";
1742 Method <3741 -3742> {PUBLIC} "getFirstHasElementType";
1743 Method <3743 -3744 3746 3748> {PUBLIC} "createHasElementType";
1744 Parameter <3745 -3746> {} "alpha";
1745 Parameter <3747 -3748> {} "omega";
1746 Method <3749 -3750> {PUBLIC} "getFirstHasGenericType";
1747 Method <3751 -3752 3754 3756> {PUBLIC} "createHasGenericType";
1748 Parameter <3753 -3754> {} "alpha";
1749 Parameter <3755 -3756> {} "omega";
1750 Method <3757 -3758> {PUBLIC} "getFirstHasLowerBound";
1751 Method <3759 -3760 3762 3764> {PUBLIC} "createHasLowerBound";
1752 Parameter <3761 -3762> {} "alpha";
1753 Parameter <3763 -3764> {} "omega";
1754 Method <3765 -3766> {PUBLIC} "getFirstHasParam";
1755 Method <3767 -3768 3770 3772> {PUBLIC} "createHasParam";
1756 Parameter <3769 -3770> {} "alpha";
1757 Parameter <3771 -3772> {} "omega";
1758 Method <3773 -3774> {PUBLIC} "getFirstHasType";
1759 Method <3775 -3776 3778 3780> {PUBLIC} "createHasType";
1760 Parameter <3777 -3778> {} "alpha";
1761 Parameter <3779 -3780> {} "omega";
1762 Method <3781 -3782> {PUBLIC} "getFirstHasTypeArg";
1763 Method <3783 -3784 3786 3788> {PUBLIC} "createHasTypeArg";
1764 Parameter <3785 -3786> {} "alpha";
1765 Parameter <3787 -3788> {} "omega";
1766 Method <3789 -3790> {PUBLIC} "getFirstHasTypeParam";
1767 Method <3791 -3792 3794 3796> {PUBLIC} "createHasTypeParam";
1768 Parameter <3793 -3794> {} "alpha";
1769 Parameter <3795 -3796> {} "omega";
1770 Method <3797 -3798> {PUBLIC} "getFirstHasUpperBound";
1771 Method <3799 -3800 3802 3804> {PUBLIC} "createHasUpperBound";
1772 Parameter <3801 -3802> {} "alpha";
1773 Parameter <3803 -3804> {} "omega";
1774 Method <3805 -3806> {PUBLIC} "getFirstImplements";
1775 Method <3807 -3808 3810 3812> {PUBLIC} "createImplements";
1776 Parameter <3809 -3810> {} "alpha";
1777 Parameter <3811 -3812> {} "omega";
1778 Method <3813 -3814> {PUBLIC} "getFirstImports";
1779 Method <3815 -3816 3818 3820> {PUBLIC} "createImports";
1780 Parameter <3817 -3818> {} "alpha";
1781 Parameter <3819 -3820> {} "omega";
1782 Method <3821 -3822> {PUBLIC} "getFirstInterface";
1783 Method <3823 -3824> {PUBLIC} "createInterface";
1784 Method <3825 -3826> {PUBLIC} "getFirstMember";
1785 Method <3827 -3828> {PUBLIC} "getFirstMethod";
1786 Method <3829 -3830> {PUBLIC} "createMethod";
1787 Method <3831 -3832> {PUBLIC} "getFirstMethodLike";
1788 Method <3833 -3834> {PUBLIC} "getFirstModifiableElement";
1789 Method <3835 -3836> {PUBLIC} "getFirstNamedElement";
1790 Method <3837 -3838> {PUBLIC} "getFirstPackage";
1791 Method <3839 -3840> {PUBLIC} "createPackage";
1792 Method <3841 -3842> {PUBLIC} "getFirstParameter";
1793 Method <3843 -3844> {PUBLIC} "createParameter";
1794 Method <3845 -3846> {PUBLIC} "getFirstParametrizedType";
1795 Method <3847 -3848> {PUBLIC} "createParametrizedType";
1796 Method <3849 -3850> {PUBLIC} "getFirstPrimitiveType";
1797 Interface <-3849 -3851 -4130 -4134 -4138 5571 5572 5574 5576 5578 5582 -5583 5584 5586 5588 5590 5597 5599 5607 5613 5619 5626 5628 5636 5642 -5647 -5648 -13499 -13501 -13503 -13804 -13808 -13812 -15529 -15606> {PUBLIC} "PrimitiveType" "de.uni_koblenz.jgralab.jex.schema.PrimitiveType";
1798 Method <3851 -3852> {PUBLIC} "createPrimitiveType";
1799 Method <3853 -3854> {PUBLIC} "getFirstQualifiedNamedElement";
1800 Method <3855 -3856> {PUBLIC} "getFirstSourceFile";
1801 Method <3857 -3858> {PUBLIC} "createSourceFile";
1802 Method <3859 -3860> {PUBLIC} "getFirstThrows";
1803 Method <3861 -3862 3864 3866> {PUBLIC} "createThrows";
1804 Parameter <3863 -3864> {} "alpha";
1805 Parameter <3865 -3866> {} "omega";
1806 Method <3867 -3868> {PUBLIC} "getFirstType";
1807 Method <3869 -3870> {PUBLIC} "getFirstTypeParameter";
1808 Method <3871 -3872> {PUBLIC} "createTypeParameter";
1809 Method <3873 -3874> {PUBLIC} "getFirstTypeParametrizable";
1810 Method <3875 -3876> {PUBLIC} "getFirstTypedElement";
1811 Method <3877 -3878> {PUBLIC} "getFirstWildcardType";
1812 Method <3879 -3880> {PUBLIC} "createWildcardType";
1813 Method <3883 -3884> {PUBLIC} "getHasTypeEdges";
1814 ParametrizedType <3881 3882 -3883 5960 5961 -5962 5964 5965 -5966 6509 6510 -6511 6513 6514 -6515 6833 6834 -6835 6837 6838 -6839 7645 7646 -7647 7649 7650 -7651 7919 7920 -7921 7923 7924 -7925 8726 8727 -8728 8730 8731 -8732 10880 10881 -10882 10884 10885 -10886 11184 11185 -11186 11188 11189 -11190 12926 12927 -12928 12930 12931 -12932 13555 13556 -13557 14257 14258 -14259 14261 14262 -14263 14714 14715 -14716 14718 14719 -14720 15479 15480 -15481 15483 15484 -15485 15728 15729 -15730 15732 15733 -15734 18075 18076 -18077 18079 18080 -18081 18346 18347 -18348 18350 18351 -18352> n "Iterable<HasType>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.HasType>";
1815 Method <3887 -3888> {PUBLIC} "getImportsEdges";
1816 ParametrizedType <3885 3886 -3887 4917 4918 -4919 4921 4922 -4923 5807 5808 -5809 5811 5812 -5813 6853 6854 -6855 6857 6858 -6859 7565 7566 -7567 7569 7570 -7571 7949 7950 -7951 7953 7954 -7955 8646 8647 -8648 8650 8651 -8652 9048 9049 -9050 9052 9053 -9054 10078 10079 -10080 10082 10083 -10084 10800 10801 -10802 10804 10805 -10806 11204 11205 -11206 11208 11209 -11210 12846 12847 -12848 12850 12851 -12852 13559 13560 -13561 14287 14288 -14289 14291 14292 -14293 14535 14536 -14537 14539 14540 -14541 14724 14725 -14726 14728 14729 -14730 15399 15400 -15401 15403 15404 -15405 15758 15759 -15760 15762 15763 -15764 17274 17275 -17276 17278 17279 -17280 18005 18006 -18007 18009 18010 -18011 18376 18377 -18378 18380 18381 -18382> n "Iterable<Imports>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Imports>";
1817 Method <3891 -3892> {PUBLIC} "getContainsPackageEdges";
1818 ParametrizedType <3889 3890 -3891 5039 5040 -5041 5043 5044 -5045 13563 13564 -13565 14515 14516 -14517 14519 14520 -14521> n "Iterable<ContainsPackage>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ContainsPackage>";
1819 Method <3895 -3896> {PUBLIC} "getContainsClassifierEdges";
1820 Method <3899 -3900> {PUBLIC} "getDefinesEdges";
1821 Method <3903 -3904> {PUBLIC} "getDeclaresEdges";
1822 Method <3907 -3908> {PUBLIC} "getHasParamEdges";
1823 ParametrizedType <3905 3906 -3907 4814 4815 -4816 4818 4819 -4820 5140 5141 -5142 5144 5145 -5146 9058 9059 -9060 9062 9063 -9064 13579 13580 -13581 14297 14298 -14299 14301 14302 -14303 14734 14735 -14736 14738 14739 -14740> n "Iterable<HasParam>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.HasParam>";
1824 Method <3911 -3912> {PUBLIC} "getExtendsEdges";
1825 Method <3915 -3916> {PUBLIC} "getImplementsEdges";
1826 Method <3919 -3920> {PUBLIC} "getHasElementTypeEdges";
1827 Method <3923 -3924> {PUBLIC} "getThrowsEdges";
1828 ParametrizedType <3921 3922 -3923 4824 4825 -4826 4828 4829 -4830 5980 5981 -5982 5984 5985 -5986 7555 7556 -7557 7559 7560 -7561 7939 7940 -7941 7943 7944 -7945 8636 8637 -8638 8640 8641 -8642 9068 9069 -9070 9072 9073 -9074 10790 10791 -10792 10794 10795 -10796 12836 12837 -12838 12840 12841 -12842 13595 13596 -13597 14307 14308 -14309 14311 14312 -14313 15389 15390 -15391 15393 15394 -15395 15748 15749 -15750 15752 15753 -15754 17995 17996 -17997 17999 18000 -18001 18366 18367 -18368 18370 18371 -18372> n "Iterable<Throws>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Throws>";
1829 Method <3927 -3928> {PUBLIC} "getHasTypeParamEdges";
1830 ParametrizedType <3925 3926 -3927 6404 6405 -6406 6408 6409 -6410 6467 6468 -6469 6471 6472 -6473 7665 7666 -7667 7669 7670 -7671 8746 8747 -8748 8750 8751 -8752 9038 9039 -9040 9042 9043 -9044 10900 10901 -10902 10904 10905 -10906 12946 12947 -12948 12950 12951 -12952 13599 13600 -13601 14267 14268 -14269 14271 14272 -14273 15499 15500 -15501 15503 15504 -15505 18095 18096 -18097 18099 18100 -18101> n "Iterable<HasTypeParam>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.HasTypeParam>";
1831 Method <3931 -3932> {PUBLIC} "getHasBoundEdges";
1832 ParametrizedType <3929 3930 -3931 6000 6001 -6002 6004 6005 -6006 6414 6415 -6416 6418 6419 -6420 7575 7576 -7577 7579 7580 -7581 7969 7970 -7971 7973 7974 -7975 8656 8657 -8658 8660 8661 -8662 10810 10811 -10812 10814 10815 -10816 12856 12857 -12858 12860 12861 -12862 13603 13604 -13605 15409 15410 -15411 15413 15414 -15415 15778 15779 -15780 15782 15783 -15784 18015 18016 -18017 18019 18020 -18021 18396 18397 -18398 18400 18401 -18402> n "Iterable<HasBound>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.HasBound>";
1833 Method <3935 -3936> {PUBLIC} "getHasGenericTypeEdges";
1834 Method <3939 -3940> {PUBLIC} "getHasLowerBoundEdges";
1835 ParametrizedType <3937 3938 -3939 6010 6011 -6012 6014 6015 -6016 6644 6645 -6646 6648 6649 -6650 7585 7586 -7587 7589 7590 -7591 7979 7980 -7981 7983 7984 -7985 8666 8667 -8668 8670 8671 -8672 10820 10821 -10822 10824 10825 -10826 12866 12867 -12868 12870 12871 -12872 13611 13612 -13613 15419 15420 -15421 15423 15424 -15425 15788 15789 -15790 15792 15793 -15794 18025 18026 -18027 18029 18030 -18031 18406 18407 -18408 18410 18411 -18412> n "Iterable<HasLowerBound>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.HasLowerBound>";
1836 Method <3943 -3944> {PUBLIC} "getHasUpperBoundEdges";
1837 ParametrizedType <3941 3942 -3943 5950 5951 -5952 5954 5955 -5956 6634 6635 -6636 6638 6639 -6640 7505 7506 -7507 7509 7510 -7511 7909 7910 -7911 7913 7914 -7915 8586 8587 -8588 8590 8591 -8592 10730 10731 -10732 10734 10735 -10736 12786 12787 -12788 12790 12791 -12792 13615 13616 -13617 15339 15340 -15341 15343 15344 -15345 15718 15719 -15720 15722 15723 -15724 17945 17946 -17947 17949 17950 -17951 18336 18337 -18338 18340 18341 -18342> n "Iterable<HasUpperBound>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.HasUpperBound>";
1838 Method <3947 -3948> {PUBLIC} "getHasTypeArgEdges";
1839 ParametrizedType <3945 3946 -3947 5559 5560 -5561 5563 5564 -5565 5970 5971 -5972 5974 5975 -5976 7525 7526 -7527 7529 7530 -7531 7929 7930 -7931 7933 7934 -7935 8606 8607 -8608 8610 8611 -8612 10760 10761 -10762 10764 10765 -10766 12806 12807 -12808 12810 12811 -12812 13619 13620 -13621 15359 15360 -15361 15363 15364 -15365 15738 15739 -15740 15742 15743 -15744 17965 17966 -17967 17969 17970 -17971 18356 18357 -18358 18360 18361 -18362> n "Iterable<HasTypeArg>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.HasTypeArg>";
1840 Method <3951 -3952> {PUBLIC} "getDeclaresFieldEdges";
1841 Method <3955 -3956> {PUBLIC} "getDeclaresMethodEdges";
1842 Method <3959 -3960> {PUBLIC} "getDeclaresConstructorEdges";
1843 Method <3963 -3964> {PUBLIC} "getDeclaresEnumConstEdges";
1844 Method <3967 -3968> {PUBLIC} "getDeclaresAnnotationElementEdges";
1845 Method <3971 -3972> {PUBLIC} "getDeclaresNestedClassifierEdges";
1846 Method <3975 -3976> {PUBLIC} "getTypeVertices";
1847 ParametrizedType <3973 3974 -3975 3977 3978 -3979 13647 13648 -13649 13651 13652 -13653> n "Iterable<Type>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Type>";
1848 Method <3979 -3980 3984> {PUBLIC} "getTypeVertices";
1849 ParametrizedType <3981 3982 -3983 13655 13656 -13657> n "VertexFilter<Type>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Type>";
1850 Parameter <3983 -3984> {} "filter";
1851 Method <3987 -3988> {PUBLIC} "getConstructorVertices";
1852 ParametrizedType <3985 3986 -3987 3989 3990 -3991 13659 13660 -13661 13663 13664 -13665> n "Iterable<Constructor>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Constructor>";
1853 Method <3991 -3992 3996> {PUBLIC} "getConstructorVertices";
1854 ParametrizedType <3993 3994 -3995 13667 13668 -13669> n "VertexFilter<Constructor>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Constructor>";
1855 Parameter <3995 -3996> {} "filter";
1856 Method <3999 -4000> {PUBLIC} "getParametrizedTypeVertices";
1857 ParametrizedType <3997 3998 -3999 4001 4002 -4003 13671 13672 -13673 13675 13676 -13677> n "Iterable<ParametrizedType>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ParametrizedType>";
1858 Method <4003 -4004 4008> {PUBLIC} "getParametrizedTypeVertices";
1859 ParametrizedType <4005 4006 -4007 13679 13680 -13681> n "VertexFilter<ParametrizedType>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.ParametrizedType>";
1860 Parameter <4007 -4008> {} "filter";
1861 Method <4011 -4012> {PUBLIC} "getQualifiedNamedElementVertices";
1862 ParametrizedType <4009 4010 -4011 4013 4014 -4015 13683 13684 -13685 13687 13688 -13689> n "Iterable<QualifiedNamedElement>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.QualifiedNamedElement>";
1863 Method <4015 -4016 4020> {PUBLIC} "getQualifiedNamedElementVertices";
1864 ParametrizedType <4017 4018 -4019 13691 13692 -13693> n "VertexFilter<QualifiedNamedElement>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.QualifiedNamedElement>";
1865 Parameter <4019 -4020> {} "filter";
1866 Method <4023 -4024> {PUBLIC} "getArrayTypeVertices";
1867 ParametrizedType <4021 4022 -4023 4025 4026 -4027 13695 13696 -13697 13699 13700 -13701> n "Iterable<ArrayType>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ArrayType>";
1868 Method <4027 -4028 4032> {PUBLIC} "getArrayTypeVertices";
1869 ParametrizedType <4029 4030 -4031 13703 13704 -13705> n "VertexFilter<ArrayType>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.ArrayType>";
1870 Parameter <4031 -4032> {} "filter";
1871 Method <4035 -4036> {PUBLIC} "getTypedElementVertices";
1872 ParametrizedType <4033 4034 -4035 4037 4038 -4039 13707 13708 -13709 13711 13712 -13713> n "Iterable<TypedElement>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.TypedElement>";
1873 Method <4039 -4040 4044> {PUBLIC} "getTypedElementVertices";
1874 ParametrizedType <4041 4042 -4043 13715 13716 -13717> n "VertexFilter<TypedElement>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.TypedElement>";
1875 Parameter <4043 -4044> {} "filter";
1876 Method <4047 -4048> {PUBLIC} "getEnumVertices";
1877 ParametrizedType <4045 4046 -4047 4049 4050 -4051 13719 13720 -13721 13723 13724 -13725> n "Iterable<Enum>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Enum>";
1878 Method <4051 -4052 4056> {PUBLIC} "getEnumVertices";
1879 ParametrizedType <4053 4054 -4055 13727 13728 -13729> n "VertexFilter<Enum>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Enum>";
1880 Parameter <4055 -4056> {} "filter";
1881 Method <4059 -4060> {PUBLIC} "getMethodLikeVertices";
1882 ParametrizedType <4057 4058 -4059 4061 4062 -4063 13731 13732 -13733 13735 13736 -13737> n "Iterable<MethodLike>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.MethodLike>";
1883 Method <4063 -4064 4068> {PUBLIC} "getMethodLikeVertices";
1884 ParametrizedType <4065 4066 -4067 13739 13740 -13741> n "VertexFilter<MethodLike>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.MethodLike>";
1885 Parameter <4067 -4068> {} "filter";
1886 Method <4071 -4072> {PUBLIC} "getEnumConstVertices";
1887 ParametrizedType <4069 4070 -4071 4073 4074 -4075 13743 13744 -13745 13747 13748 -13749> n "Iterable<EnumConst>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.EnumConst>";
1888 Method <4075 -4076 4080> {PUBLIC} "getEnumConstVertices";
1889 ParametrizedType <4077 4078 -4079 13751 13752 -13753> n "VertexFilter<EnumConst>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.EnumConst>";
1890 Parameter <4079 -4080> {} "filter";
1891 Method <4083 -4084> {PUBLIC} "getNamedElementVertices";
1892 ParametrizedType <4081 4082 -4083 4085 4086 -4087 13755 13756 -13757 13759 13760 -13761> n "Iterable<NamedElement>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.NamedElement>";
1893 Method <4087 -4088 4092> {PUBLIC} "getNamedElementVertices";
1894 ParametrizedType <4089 4090 -4091 13763 13764 -13765> n "VertexFilter<NamedElement>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.NamedElement>";
1895 Parameter <4091 -4092> {} "filter";
1896 Method <4095 -4096> {PUBLIC} "getInterfaceVertices";
1897 ParametrizedType <4093 4094 -4095 4097 4098 -4099 13767 13768 -13769 13771 13772 -13773> n "Iterable<Interface>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Interface>";
1898 Method <4099 -4100 4104> {PUBLIC} "getInterfaceVertices";
1899 ParametrizedType <4101 4102 -4103 13775 13776 -13777> n "VertexFilter<Interface>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Interface>";
1900 Parameter <4103 -4104> {} "filter";
1901 Method <4107 -4108> {PUBLIC} "getSourceFileVertices";
1902 ParametrizedType <4105 4106 -4107 4109 4110 -4111 13779 13780 -13781 13783 13784 -13785> n "Iterable<SourceFile>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.SourceFile>";
1903 Method <4111 -4112 4116> {PUBLIC} "getSourceFileVertices";
1904 ParametrizedType <4113 4114 -4115 13787 13788 -13789> n "VertexFilter<SourceFile>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.SourceFile>";
1905 Parameter <4115 -4116> {} "filter";
1906 Method <4119 -4120> {PUBLIC} "getFieldVertices";
1907 ParametrizedType <4117 4118 -4119 4121 4122 -4123 13791 13792 -13793 13795 13796 -13797> n "Iterable<Field>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Field>";
1908 Method <4123 -4124 4128> {PUBLIC} "getFieldVertices";
1909 ParametrizedType <4125 4126 -4127 13799 13800 -13801> n "VertexFilter<Field>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Field>";
1910 Parameter <4127 -4128> {} "filter";
1911 Method <4131 -4132> {PUBLIC} "getPrimitiveTypeVertices";
1912 ParametrizedType <4129 4130 -4131 4133 4134 -4135 13803 13804 -13805 13807 13808 -13809> n "Iterable<PrimitiveType>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.PrimitiveType>";
1913 Method <4135 -4136 4140> {PUBLIC} "getPrimitiveTypeVertices";
1914 ParametrizedType <4137 4138 -4139 13811 13812 -13813> n "VertexFilter<PrimitiveType>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.PrimitiveType>";
1915 Parameter <4139 -4140> {} "filter";
1916 Method <4143 -4144> {PUBLIC} "getWildcardTypeVertices";
1917 ParametrizedType <4141 4142 -4143 4145 4146 -4147 13815 13816 -13817 13819 13820 -13821> n "Iterable<WildcardType>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.WildcardType>";
1918 Method <4147 -4148 4152> {PUBLIC} "getWildcardTypeVertices";
1919 ParametrizedType <4149 4150 -4151 13823 13824 -13825> n "VertexFilter<WildcardType>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.WildcardType>";
1920 Parameter <4151 -4152> {} "filter";
1921 Method <4155 -4156> {PUBLIC} "getClassifierVertices";
1922 ParametrizedType <4153 4154 -4155 4157 4158 -4159 13827 13828 -13829 13831 13832 -13833> n "Iterable<Classifier>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Classifier>";
1923 Method <4159 -4160 4164> {PUBLIC} "getClassifierVertices";
1924 ParametrizedType <4161 4162 -4163 13835 13836 -13837> n "VertexFilter<Classifier>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Classifier>";
1925 Parameter <4163 -4164> {} "filter";
1926 Method <4167 -4168> {PUBLIC} "getPackageVertices";
1927 ParametrizedType <4165 4166 -4167 4169 4170 -4171 13839 13840 -13841 13843 13844 -13845> n "Iterable<Package>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Package>";
1928 Method <4171 -4172 4176> {PUBLIC} "getPackageVertices";
1929 ParametrizedType <4173 4174 -4175 13847 13848 -13849> n "VertexFilter<Package>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Package>";
1930 Parameter <4175 -4176> {} "filter";
1931 Method <4179 -4180> {PUBLIC} "getAnnotationVertices";
1932 ParametrizedType <4177 4178 -4179 4181 4182 -4183 13851 13852 -13853 13855 13856 -13857> n "Iterable<Annotation>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Annotation>";
1933 Method <4183 -4184 4188> {PUBLIC} "getAnnotationVertices";
1934 ParametrizedType <4185 4186 -4187 13859 13860 -13861> n "VertexFilter<Annotation>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Annotation>";
1935 Parameter <4187 -4188> {} "filter";
1936 Method <4191 -4192> {PUBLIC} "getMemberVertices";
1937 ParametrizedType <4189 4190 -4191 4193 4194 -4195 13863 13864 -13865 13867 13868 -13869> n "Iterable<Member>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Member>";
1938 Method <4195 -4196 4200> {PUBLIC} "getMemberVertices";
1939 ParametrizedType <4197 4198 -4199 13871 13872 -13873> n "VertexFilter<Member>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Member>";
1940 Parameter <4199 -4200> {} "filter";
1941 Method <4203 -4204> {PUBLIC} "getParameterVertices";
1942 ParametrizedType <4201 4202 -4203 4205 4206 -4207 13875 13876 -13877 13879 13880 -13881> n "Iterable<Parameter>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Parameter>";
1943 Method <4207 -4208 4212> {PUBLIC} "getParameterVertices";
1944 ParametrizedType <4209 4210 -4211 13883 13884 -13885> n "VertexFilter<Parameter>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Parameter>";
1945 Parameter <4211 -4212> {} "filter";
1946 Method <4215 -4216> {PUBLIC} "getTypeParameterVertices";
1947 ParametrizedType <4213 4214 -4215 4217 4218 -4219 13887 13888 -13889 13891 13892 -13893> n "Iterable<TypeParameter>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.TypeParameter>";
1948 Method <4219 -4220 4224> {PUBLIC} "getTypeParameterVertices";
1949 ParametrizedType <4221 4222 -4223 13895 13896 -13897> n "VertexFilter<TypeParameter>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.TypeParameter>";
1950 Parameter <4223 -4224> {} "filter";
1951 Method <4227 -4228> {PUBLIC} "getClassVertices";
1952 ParametrizedType <4225 4226 -4227 4229 4230 -4231 13899 13900 -13901 13903 13904 -13905> n "Iterable<Class>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Class>";
1953 Method <4231 -4232 4236> {PUBLIC} "getClassVertices";
1954 ParametrizedType <4233 4234 -4235 13907 13908 -13909> n "VertexFilter<Class>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Class>";
1955 Parameter <4235 -4236> {} "filter";
1956 Method <4239 -4240> {PUBLIC} "getModifiableElementVertices";
1957 ParametrizedType <4237 4238 -4239 4241 4242 -4243 13911 13912 -13913 13915 13916 -13917> n "Iterable<ModifiableElement>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ModifiableElement>";
1958 Method <4243 -4244 4248> {PUBLIC} "getModifiableElementVertices";
1959 ParametrizedType <4245 4246 -4247 13919 13920 -13921> n "VertexFilter<ModifiableElement>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.ModifiableElement>";
1960 Parameter <4247 -4248> {} "filter";
1961 Method <4251 -4252> {PUBLIC} "getMethodVertices";
1962 ParametrizedType <4249 4250 -4251 4253 4254 -4255 13923 13924 -13925 13927 13928 -13929> n "Iterable<Method>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Method>";
1963 Method <4255 -4256 4260> {PUBLIC} "getMethodVertices";
1964 ParametrizedType <4257 4258 -4259 13931 13932 -13933> n "VertexFilter<Method>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Method>";
1965 Parameter <4259 -4260> {} "filter";
1966 Method <4263 -4264> {PUBLIC} "getAbstractClassifierVertices";
1967 ParametrizedType <4261 4262 -4263 4265 4266 -4267 13935 13936 -13937 13939 13940 -13941> n "Iterable<AbstractClassifier>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier>";
1968 Method <4267 -4268 4272> {PUBLIC} "getAbstractClassifierVertices";
1969 ParametrizedType <4269 4270 -4271 13943 13944 -13945> n "VertexFilter<AbstractClassifier>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.AbstractClassifier>";
1970 Parameter <4271 -4272> {} "filter";
1971 Method <4275 -4276> {PUBLIC} "getAnnotationElementVertices";
1972 ParametrizedType <4273 4274 -4275 4277 4278 -4279 13947 13948 -13949 13951 13952 -13953> n "Iterable<AnnotationElement>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.AnnotationElement>";
1973 Method <4279 -4280 4284> {PUBLIC} "getAnnotationElementVertices";
1974 ParametrizedType <4281 4282 -4283 13955 13956 -13957> n "VertexFilter<AnnotationElement>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.AnnotationElement>";
1975 Parameter <4283 -4284> {} "filter";
1976 Method <4287 -4288> {PUBLIC} "getTypeParametrizableVertices";
1977 ParametrizedType <4285 4286 -4287 4289 4290 -4291 13959 13960 -13961 13963 13964 -13965> n "Iterable<TypeParametrizable>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.TypeParametrizable>";
1978 Method <4291 -4292 4296> {PUBLIC} "getTypeParametrizableVertices";
1979 ParametrizedType <4293 4294 -4295 13967 13968 -13969> n "VertexFilter<TypeParametrizable>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.TypeParametrizable>";
1980 Parameter <4295 -4296> {} "filter";
1981 SourceFile <4299 4301> 13 "src/de/uni_koblenz/jgralab/jex/schema/JavaGraphFactory.java";
1982 Interface <-4299 -4300 -4319 -4339 -4343 -4383 -4390> {PUBLIC} "GraphFactory" "de.uni_koblenz.jgralab.GraphFactory";
1983 Interface <4300 -4301 -4302 -12970 -12972> {PUBLIC} "JavaGraphFactory" "de.uni_koblenz.jgralab.jex.schema.JavaGraphFactory";
1984 SourceFile <4303 4304 4305 4306 4307 4308 4309 4310 4397> 410 "src/de/uni_koblenz/jgralab/jex/schema/JavaSchema.java";
1985 Class <-4303 -6661 -6718 -6730 -6878 -6942 -6954 -7700 -7758 -7770 -7994 -8058 -8070 -8771 -8827 -8839 -9092 -9133 -9145 -9179 -9219 -9231 -9265 -9307 -9319 -9361 -9403 -9415 -9457 -9499 -9511 -9553 -9595 -9607 -9649 -9691 -9703 -9745 -9786 -9798 -9840 -9889 -9901 -9936 -9978 -9990 -10103 -10167 -10179 -10924 -10965 -10977 -11012 -11069 -11081 -11228 -11269 -11281 -11315 -11356 -11368 -11402 -11443 -11455 -11489 -11530 -11542 -11576 -11617 -11629 -11663 -11704 -11716 -11750 -11791 -11803 -11837 -11878 -11890 -11924 -11965 -11977 -12011 -12052 -12064 -12098 -12147 -12159 -12194 -12258 -12270 -12979 -13023 -13035 -13976 -14033 -14045 -14332 -14382 -14394 -14550 -14607 -14619 -14749 -14813 -14825 -15524 -15582 -15594 -15804 -15821 -15833 -15861 -15877 -15889 -15917 -15935 -15947 -15983 -16001 -16013 -16049 -16067 -16079 -16115 -16133 -16145 -16181 -16199 -16211 -16247 -16264 -16276 -16312 -16335 -16347 -16375 -16392 -16404 -16432 -16449 -16461 -16489 -16506 -16518 -16546 -16563 -16575 -16603 -16620 -16632 -16660 -16677 -16689 -16717 -16734 -16746 -16774 -16791 -16803 -16831 -16848 -16860 -16888 -16905 -16917 -16945 -16962 -16974 -17002 -17025 -17037 -17065 -17082 -17094 -17121 -17170 -17182 -17288 -17329 -17341 -17376 -17440 -17452 -18120 -18170 -18182> {PUBLIC} "GraphIO" "de.uni_koblenz.jgralab.GraphIO";
1986 Class <-4304 -4355 -4362 -4369 -4378 -4385 -4394 -6662 -6720 -6727 -6732 -6739 -6879 -6944 -6951 -6956 -6963 -7701 -7760 -7767 -7772 -7779 -7995 -8060 -8067 -8072 -8079 -8772 -8829 -8836 -8841 -8848 -9094 -9135 -9142 -9147 -9154 -9181 -9221 -9228 -9233 -9240 -9267 -9309 -9316 -9321 -9328 -9363 -9405 -9412 -9417 -9424 -9459 -9501 -9508 -9513 -9520 -9555 -9597 -9604 -9609 -9616 -9651 -9693 -9700 -9705 -9712 -9747 -9788 -9795 -9800 -9807 -9842 -9891 -9898 -9903 -9910 -9937 -9980 -9987 -9992 -9999 -10104 -10169 -10176 -10181 -10188 -10926 -10967 -10974 -10979 -10986 -11013 -11071 -11078 -11083 -11090 -11230 -11271 -11278 -11283 -11290 -11317 -11358 -11365 -11370 -11377 -11404 -11445 -11452 -11457 -11464 -11491 -11532 -11539 -11544 -11551 -11578 -11619 -11626 -11631 -11638 -11665 -11706 -11713 -11718 -11725 -11752 -11793 -11800 -11805 -11812 -11839 -11880 -11887 -11892 -11899 -11926 -11967 -11974 -11979 -11986 -12013 -12054 -12061 -12066 -12073 -12100 -12149 -12156 -12161 -12168 -12195 -12260 -12267 -12272 -12279 -12980 -13025 -13032 -13037 -13044 -13977 -14035 -14042 -14047 -14054 -14333 -14384 -14391 -14396 -14403 -14551 -14609 -14616 -14621 -14628 -14750 -14815 -14822 -14827 -14834 -15525 -15584 -15591 -15596 -15603 -15805 -15823 -15830 -15835 -15842 -15862 -15879 -15886 -15891 -15898 -15918 -15937 -15944 -15949 -15956 -15984 -16003 -16010 -16015 -16022 -16050 -16069 -16076 -16081 -16088 -16116 -16135 -16142 -16147 -16154 -16182 -16201 -16208 -16213 -16220 -16248 -16266 -16273 -16278 -16285 -16313 -16337 -16344 -16349 -16356 -16376 -16394 -16401 -16406 -16413 -16433 -16451 -16458 -16463 -16470 -16490 -16508 -16515 -16520 -16527 -16547 -16565 -16572 -16577 -16584 -16604 -16622 -16629 -16634 -16641 -16661 -16679 -16686 -16691 -16698 -16718 -16736 -16743 -16748 -16755 -16775 -16793 -16800 -16805 -16812 -16832 -16850 -16857 -16862 -16869 -16889 -16907 -16914 -16919 -16926 -16946 -16964 -16971 -16976 -16983 -17003 -17027 -17034 -17039 -17046 -17066 -17084 -17091 -17096 -17103 -17122 -17172 -17179 -17184 -17191 -17290 -17331 -17338 -17343 -17350 -17377 -17442 -17449 -17454 -17461 -18121 -18172 -18179 -18184 -18191> {PUBLIC} "GraphIOException" "de.uni_koblenz.jgralab.exception.GraphIOException";
1987 Class <-4305 -4311> {PUBLIC} "SchemaImpl" "de.uni_koblenz.jgralab.schema.impl.SchemaImpl";
1988 Interface <-4307> {PUBLIC} "EnumDomain" "de.uni_koblenz.jgralab.schema.EnumDomain";
1989 Class <-4310 -4312> {PUBLIC} "WeakReference" "java.lang.ref.WeakReference";
1990 Class <4311 -4313 4315 -4316 4317 4318 4320 4324 4328 4338 4342 4352 4357 4364 4371 4380 4387 4396 -4397 -4398> {PUBLIC} "JavaSchema" "de.uni_koblenz.jgralab.jex.schema.JavaSchema";
1991 ParametrizedType <4312 4313 -4314> n "WeakReference<JavaSchema>" "java.lang.ref.WeakReference<de.uni_koblenz.jgralab.jex.schema.JavaSchema>";
1992 Field <4314 -4315> {STATIC} "theInstance";
1993 Method <4316 -4317> {PUBLIC SYNCHRONIZED STATIC} "instance";
1994 Constructor <-4318> {PRIVATE} "JavaSchema";
1995 Method <4319 -4320 4322> {PUBLIC} "createDefaultGraphFactory";
1996 Annotation <> {PUBLIC} "Override" "java.lang.Override";
1997 Enum <-4321 -4325 -4329 -4367 -4374 -12969> {FINAL} "ImplementationType" "de.uni_koblenz.jgralab.ImplementationType";
1998 Parameter <4321 -4322> {} "implementationType";
1999 Method <4323 -4324 4326> {PUBLIC} "createJavaGraph";
2000 Parameter <4325 -4326> {} "implType";
2001 Method <4327 -4328 4330 4332 4334 4336> {PUBLIC} "createJavaGraph";
2002 Parameter <4329 -4330> {} "implType";
2003 Class <-4331 -4345 -4353 -4358 -4365 -4372 -4381 -4388 -4866 -4874 -4878 -5660 -5668 -5672 -5719 -5723 -6674 -6691 -6696 -6710 -6714 -6723 -6725 -6734 -6736 -6890 -6892 -6909 -6914 -6928 -6932 -6934 -6938 -6947 -6949 -6958 -6960 -7710 -7712 -7729 -7734 -7744 -7748 -7750 -7754 -7763 -7765 -7774 -7776 -8006 -8008 -8025 -8030 -8044 -8048 -8050 -8054 -8063 -8065 -8074 -8076 -8783 -8800 -8805 -8819 -8823 -8832 -8834 -8843 -8845 -9122 -9127 -9138 -9140 -9149 -9151 -9208 -9213 -9224 -9226 -9235 -9237 -9296 -9301 -9312 -9314 -9323 -9325 -9392 -9397 -9408 -9410 -9419 -9421 -9488 -9493 -9504 -9506 -9515 -9517 -9584 -9589 -9600 -9602 -9611 -9613 -9680 -9685 -9696 -9698 -9707 -9709 -9775 -9780 -9791 -9793 -9802 -9804 -9872 -9877 -9894 -9896 -9905 -9907 -9944 -9961 -9966 -9970 -9974 -9983 -9985 -9994 -9996 -10115 -10117 -10134 -10139 -10153 -10157 -10159 -10163 -10172 -10174 -10183 -10185 -10954 -10959 -10970 -10972 -10981 -10983 -11025 -11042 -11047 -11061 -11065 -11074 -11076 -11085 -11087 -11258 -11263 -11274 -11276 -11285 -11287 -11345 -11350 -11361 -11363 -11372 -11374 -11432 -11437 -11448 -11450 -11459 -11461 -11519 -11524 -11535 -11537 -11546 -11548 -11606 -11611 -11622 -11624 -11633 -11635 -11693 -11698 -11709 -11711 -11720 -11722 -11780 -11785 -11796 -11798 -11807 -11809 -11867 -11872 -11883 -11885 -11894 -11896 -11954 -11959 -11970 -11972 -11981 -11983 -12041 -12046 -12057 -12059 -12068 -12070 -12130 -12135 -12152 -12154 -12163 -12165 -12206 -12208 -12225 -12230 -12244 -12248 -12250 -12254 -12263 -12265 -12274 -12276 -12993 -13000 -13012 -13017 -13028 -13030 -13039 -13041 -13989 -14006 -14011 -14025 -14029 -14038 -14040 -14049 -14051 -14340 -14342 -14359 -14364 -14368 -14372 -14374 -14378 -14387 -14389 -14398 -14400 -14563 -14580 -14585 -14599 -14603 -14612 -14614 -14623 -14625 -14761 -14763 -14780 -14785 -14799 -14803 -14805 -14809 -14818 -14820 -14829 -14831 -15532 -15534 -15553 -15558 -15562 -15566 -15568 -15572 -15587 -15589 -15598 -15600 -15826 -15828 -15837 -15839 -15882 -15884 -15893 -15895 -15940 -15942 -15951 -15953 -16006 -16008 -16017 -16019 -16072 -16074 -16083 -16085 -16138 -16140 -16149 -16151 -16204 -16206 -16215 -16217 -16269 -16271 -16280 -16282 -16340 -16342 -16351 -16353 -16397 -16399 -16408 -16410 -16454 -16456 -16465 -16467 -16511 -16513 -16522 -16524 -16568 -16570 -16579 -16581 -16625 -16627 -16636 -16638 -16682 -16684 -16693 -16695 -16739 -16741 -16750 -16752 -16796 -16798 -16807 -16809 -16853 -16855 -16864 -16866 -16910 -16912 -16921 -16923 -16967 -16969 -16978 -16980 -17030 -17032 -17041 -17043 -17087 -17089 -17098 -17100 -17130 -17147 -17152 -17162 -17166 -17175 -17177 -17186 -17188 -17318 -17323 -17334 -17336 -17345 -17347 -17388 -17390 -17407 -17412 -17426 -17430 -17432 -17436 -17445 -17447 -17456 -17458 -18128 -18130 -18147 -18152 -18156 -18160 -18162 -18166 -18175 -18177 -18186 -18188> {FINAL} "String" "java.lang.String";
2004 Parameter <4331 -4332> {} "id";
2005 Parameter <4333 -4334> {} "vMax";
2006 Parameter <4335 -4336> {} "eMax";
2007 Method <4337 -4338 4340> {PUBLIC} "createJavaGraph";
2008 Parameter <4339 -4340> {} "factory";
2009 Method <4341 -4342 4344 4346 4348 4350> {PUBLIC} "createJavaGraph";
2010 Parameter <4343 -4344> {} "factory";
2011 Parameter <4345 -4346> {} "id";
2012 Parameter <4347 -4348> {} "vMax";
2013 Parameter <4349 -4350> {} "eMax";
2014 Method <4351 -4352 4354 4355> {PUBLIC} "loadJavaGraph";
2015 Parameter <4353 -4354> {} "filename";
2016 Method <4356 -4357 4359 4361 4362> {PUBLIC} "loadJavaGraph";
2017 Parameter <4358 -4359> {} "filename";
2018 Interface <-4360 -4376 -4392> {PUBLIC} "ProgressFunction" "de.uni_koblenz.jgralab.ProgressFunction";
2019 Parameter <4360 -4361> {} "pf";
2020 Method <4363 -4364 4366 4368 4369> {PUBLIC} "loadJavaGraph";
2021 Parameter <4365 -4366> {} "filename";
2022 Parameter <4367 -4368> {} "implType";
2023 Method <4370 -4371 4373 4375 4377 4378> {PUBLIC} "loadJavaGraph";
2024 Parameter <4372 -4373> {} "filename";
2025 Parameter <4374 -4375> {} "implType";
2026 Parameter <4376 -4377> {} "pf";
2027 Method <4379 -4380 4382 4384 4385> {PUBLIC} "loadJavaGraph";
2028 Parameter <4381 -4382> {} "filename";
2029 Parameter <4383 -4384> {} "factory";
2030 Method <4386 -4387 4389 4391 4393 4394> {PUBLIC} "loadJavaGraph";
2031 Parameter <4388 -4389> {} "filename";
2032 Parameter <4390 -4391> {} "factory";
2033 Parameter <4392 -4393> {} "pf";
2034 Method <4395 -4396> {PUBLIC} "reopen";
2035 SourceFile <4399 4468> 103 "src/de/uni_koblenz/jgralab/jex/schema/Member.java";
2036 Field <4402 -4403> {PUBLIC FINAL STATIC} "VC";
2037 Method <4404 -4405> {PUBLIC} "getNextMember";
2038 Method <4406 -4407> {PUBLIC} "getNextNamedElement";
2039 Method <4408 -4409> {PUBLIC} "getFirstDeclaresIncidence";
2040 Method <4410 -4411 4413> {PUBLIC} "getFirstDeclaresIncidence";
2041 Parameter <4412 -4413> {} "orientation";
2042 Method <4414 -4415 4417> {PUBLIC} "add_importers";
2043 Parameter <4416 -4417> {} "vertex";
2044 Method <4421 -4422> {PUBLIC} "remove_importers";
2045 WildcardType <4418 -4420> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
2046 Method <4423 -4424 4426> {PUBLIC} "remove_importers";
2047 Parameter <4425 -4426> {} "vertex";
2048 Method <4428 4431 -4432> {PUBLIC} "get_importers";
2049 TypeParameter <4427 -4428 -4430> n "V" "de.uni_koblenz.jgralab.jex.schema.Member.get_importers().V";
2050 ParametrizedType <4429 4430 -4431 4435 4436 -4437> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Member.get_importers|V>";
2051 Method <4434 4437 -4438 4442> {PUBLIC} "get_importers";
2052 TypeParameter <4433 -4434 -4436 -4440> n "V" "de.uni_koblenz.jgralab.jex.schema.Member.get_importers(VertexFilter<V>).V";
2053 ParametrizedType <4439 4440 -4441> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Member.get_importers|V>";
2054 Parameter <4441 -4442> {} "filter";
2055 Method <4443 -4444 4446> {PUBLIC} "add_parent";
2056 Parameter <4445 -4446> {} "vertex";
2057 Method <4450 -4451> {PUBLIC} "remove_parent";
2058 WildcardType <4447 -4449> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
2059 Method <4452 -4453 4455> {PUBLIC} "remove_parent";
2060 Parameter <4454 -4455> {} "vertex";
2061 Method <4456 -4457> {PUBLIC} "get_parent";
2062 Method <4460 -4461> {PUBLIC} "getDeclaresIncidences";
2063 Method <4464 -4465 4467> {PUBLIC} "getDeclaresIncidences";
2064 Parameter <4466 -4467> {} "direction";
2065 SourceFile <4470 4652> 242 "src/de/uni_koblenz/jgralab/jex/schema/Method.java";
2066 Field <4474 -4475> {PUBLIC FINAL STATIC} "VC";
2067 Method <4476 -4477> {PUBLIC} "getNextMember";
2068 Method <4478 -4479> {PUBLIC} "getNextMethod";
2069 Method <4480 -4481> {PUBLIC} "getNextMethodLike";
2070 Method <4482 -4483> {PUBLIC} "getNextModifiableElement";
2071 Method <4484 -4485> {PUBLIC} "getNextNamedElement";
2072 Method <4486 -4487> {PUBLIC} "getNextTypeParametrizable";
2073 Method <4488 -4489> {PUBLIC} "getNextTypedElement";
2074 Method <4490 -4491> {PUBLIC} "getFirstDeclaresMethodIncidence";
2075 Method <4492 -4493 4495> {PUBLIC} "getFirstDeclaresMethodIncidence";
2076 Parameter <4494 -4495> {} "orientation";
2077 Method <4496 -4497 4499> {PUBLIC} "add_typeParams";
2078 Parameter <4498 -4499> {} "vertex";
2079 Method <4503 -4504> {PUBLIC} "remove_typeParams";
2080 WildcardType <4500 -4502> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
2081 Method <4505 -4506 4508> {PUBLIC} "remove_typeParams";
2082 Parameter <4507 -4508> {} "vertex";
2083 Method <4510 4513 -4514> {PUBLIC} "get_typeParams";
2084 TypeParameter <4509 -4510 -4512> n "V" "de.uni_koblenz.jgralab.jex.schema.Method.get_typeParams().V";
2085 ParametrizedType <4511 4512 -4513 4517 4518 -4519> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Method.get_typeParams|V>";
2086 Method <4516 4519 -4520 4524> {PUBLIC} "get_typeParams";
2087 TypeParameter <4515 -4516 -4518 -4522> n "V" "de.uni_koblenz.jgralab.jex.schema.Method.get_typeParams(VertexFilter<V>).V";
2088 ParametrizedType <4521 4522 -4523> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Method.get_typeParams|V>";
2089 Parameter <4523 -4524> {} "filter";
2090 Method <4525 -4526 4528> {PUBLIC} "add_exceptions";
2091 Parameter <4527 -4528> {} "vertex";
2092 Method <4532 -4533> {PUBLIC} "remove_exceptions";
2093 WildcardType <4529 -4531> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
2094 Method <4534 -4535 4537> {PUBLIC} "remove_exceptions";
2095 Parameter <4536 -4537> {} "vertex";
2096 Method <4539 4542 -4543> {PUBLIC} "get_exceptions";
2097 TypeParameter <4538 -4539 -4541> n "V" "de.uni_koblenz.jgralab.jex.schema.Method.get_exceptions().V";
2098 ParametrizedType <4540 4541 -4542 4546 4547 -4548> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Method.get_exceptions|V>";
2099 Method <4545 4548 -4549 4553> {PUBLIC} "get_exceptions";
2100 TypeParameter <4544 -4545 -4547 -4551> n "V" "de.uni_koblenz.jgralab.jex.schema.Method.get_exceptions(VertexFilter<V>).V";
2101 ParametrizedType <4550 4551 -4552> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Method.get_exceptions|V>";
2102 Parameter <4552 -4553> {} "filter";
2103 Method <4554 -4555 4557> {PUBLIC} "add_params";
2104 Parameter <4556 -4557> {} "vertex";
2105 Method <4561 -4562> {PUBLIC} "remove_params";
2106 WildcardType <4558 -4560> "? extends Parameter" "? extends de.uni_koblenz.jgralab.jex.schema.Parameter";
2107 Method <4563 -4564 4566> {PUBLIC} "remove_params";
2108 Parameter <4565 -4566> {} "vertex";
2109 Method <4568 4571 -4572> {PUBLIC} "get_params";
2110 TypeParameter <4567 -4568 -4570> n "V" "de.uni_koblenz.jgralab.jex.schema.Method.get_params().V";
2111 ParametrizedType <4569 4570 -4571 4575 4576 -4577> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Method.get_params|V>";
2112 Method <4574 4577 -4578 4582> {PUBLIC} "get_params";
2113 TypeParameter <4573 -4574 -4576 -4580> n "V" "de.uni_koblenz.jgralab.jex.schema.Method.get_params(VertexFilter<V>).V";
2114 ParametrizedType <4579 4580 -4581> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Method.get_params|V>";
2115 Parameter <4581 -4582> {} "filter";
2116 Method <4583 -4584 4586> {PUBLIC} "add_importers";
2117 Parameter <4585 -4586> {} "vertex";
2118 Method <4590 -4591> {PUBLIC} "remove_importers";
2119 WildcardType <4587 -4589> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
2120 Method <4592 -4593 4595> {PUBLIC} "remove_importers";
2121 Parameter <4594 -4595> {} "vertex";
2122 Method <4597 4600 -4601> {PUBLIC} "get_importers";
2123 TypeParameter <4596 -4597 -4599> n "V" "de.uni_koblenz.jgralab.jex.schema.Method.get_importers().V";
2124 ParametrizedType <4598 4599 -4600 4604 4605 -4606> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Method.get_importers|V>";
2125 Method <4603 4606 -4607 4611> {PUBLIC} "get_importers";
2126 TypeParameter <4602 -4603 -4605 -4609> n "V" "de.uni_koblenz.jgralab.jex.schema.Method.get_importers(VertexFilter<V>).V";
2127 ParametrizedType <4608 4609 -4610> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Method.get_importers|V>";
2128 Parameter <4610 -4611> {} "filter";
2129 Method <4612 -4613 4615> {PUBLIC} "add_parent";
2130 Parameter <4614 -4615> {} "vertex";
2131 Method <4619 -4620> {PUBLIC} "remove_parent";
2132 WildcardType <4616 -4618> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
2133 Method <4621 -4622 4624> {PUBLIC} "remove_parent";
2134 Parameter <4623 -4624> {} "vertex";
2135 Method <4625 -4626> {PUBLIC} "get_parent";
2136 Method <4627 -4628 4630> {PUBLIC} "add_type";
2137 Parameter <4629 -4630> {} "vertex";
2138 Method <4634 -4635> {PUBLIC} "remove_type";
2139 WildcardType <4631 -4633> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
2140 Method <4636 -4637 4639> {PUBLIC} "remove_type";
2141 Parameter <4638 -4639> {} "vertex";
2142 Method <4640 -4641> {PUBLIC} "get_type";
2143 Method <4644 -4645> {PUBLIC} "getDeclaresMethodIncidences";
2144 Method <4648 -4649 4651> {PUBLIC} "getDeclaresMethodIncidences";
2145 Parameter <4650 -4651> {} "direction";
2146 SourceFile <4654 4834> 227 "src/de/uni_koblenz/jgralab/jex/schema/MethodLike.java";
2147 Field <4659 -4660> {PUBLIC FINAL STATIC} "VC";
2148 Method <4661 -4662> {PUBLIC} "getNextMember";
2149 Method <4663 -4664> {PUBLIC} "getNextMethodLike";
2150 Method <4665 -4666> {PUBLIC} "getNextModifiableElement";
2151 Method <4667 -4668> {PUBLIC} "getNextNamedElement";
2152 Method <4669 -4670> {PUBLIC} "getNextTypeParametrizable";
2153 Method <4671 -4672> {PUBLIC} "getFirstHasParamIncidence";
2154 Method <4673 -4674 4676> {PUBLIC} "getFirstHasParamIncidence";
2155 Parameter <4675 -4676> {} "orientation";
2156 Method <4677 -4678> {PUBLIC} "getFirstThrowsIncidence";
2157 Method <4679 -4680 4682> {PUBLIC} "getFirstThrowsIncidence";
2158 Parameter <4681 -4682> {} "orientation";
2159 Method <4683 -4684 4686> {PUBLIC} "add_typeParams";
2160 Parameter <4685 -4686> {} "vertex";
2161 Method <4690 -4691> {PUBLIC} "remove_typeParams";
2162 WildcardType <4687 -4689> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
2163 Method <4692 -4693 4695> {PUBLIC} "remove_typeParams";
2164 Parameter <4694 -4695> {} "vertex";
2165 Method <4697 4700 -4701> {PUBLIC} "get_typeParams";
2166 TypeParameter <4696 -4697 -4699> n "V" "de.uni_koblenz.jgralab.jex.schema.MethodLike.get_typeParams().V";
2167 ParametrizedType <4698 4699 -4700 4704 4705 -4706> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.MethodLike.get_typeParams|V>";
2168 Method <4703 4706 -4707 4711> {PUBLIC} "get_typeParams";
2169 TypeParameter <4702 -4703 -4705 -4709> n "V" "de.uni_koblenz.jgralab.jex.schema.MethodLike.get_typeParams(VertexFilter<V>).V";
2170 ParametrizedType <4708 4709 -4710> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.MethodLike.get_typeParams|V>";
2171 Parameter <4710 -4711> {} "filter";
2172 Method <4712 -4713 4715> {PUBLIC} "add_exceptions";
2173 Parameter <4714 -4715> {} "vertex";
2174 Method <4719 -4720> {PUBLIC} "remove_exceptions";
2175 WildcardType <4716 -4718> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
2176 Method <4721 -4722 4724> {PUBLIC} "remove_exceptions";
2177 Parameter <4723 -4724> {} "vertex";
2178 Method <4726 4729 -4730> {PUBLIC} "get_exceptions";
2179 TypeParameter <4725 -4726 -4728> n "V" "de.uni_koblenz.jgralab.jex.schema.MethodLike.get_exceptions().V";
2180 ParametrizedType <4727 4728 -4729 4733 4734 -4735> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.MethodLike.get_exceptions|V>";
2181 Method <4732 4735 -4736 4740> {PUBLIC} "get_exceptions";
2182 TypeParameter <4731 -4732 -4734 -4738> n "V" "de.uni_koblenz.jgralab.jex.schema.MethodLike.get_exceptions(VertexFilter<V>).V";
2183 ParametrizedType <4737 4738 -4739> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.MethodLike.get_exceptions|V>";
2184 Parameter <4739 -4740> {} "filter";
2185 Method <4741 -4742 4744> {PUBLIC} "add_params";
2186 Parameter <4743 -4744> {} "vertex";
2187 Method <4748 -4749> {PUBLIC} "remove_params";
2188 WildcardType <4745 -4747> "? extends Parameter" "? extends de.uni_koblenz.jgralab.jex.schema.Parameter";
2189 Method <4750 -4751 4753> {PUBLIC} "remove_params";
2190 Parameter <4752 -4753> {} "vertex";
2191 Method <4755 4758 -4759> {PUBLIC} "get_params";
2192 TypeParameter <4754 -4755 -4757> n "V" "de.uni_koblenz.jgralab.jex.schema.MethodLike.get_params().V";
2193 ParametrizedType <4756 4757 -4758 4762 4763 -4764> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.MethodLike.get_params|V>";
2194 Method <4761 4764 -4765 4769> {PUBLIC} "get_params";
2195 TypeParameter <4760 -4761 -4763 -4767> n "V" "de.uni_koblenz.jgralab.jex.schema.MethodLike.get_params(VertexFilter<V>).V";
2196 ParametrizedType <4766 4767 -4768> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.MethodLike.get_params|V>";
2197 Parameter <4768 -4769> {} "filter";
2198 Method <4770 -4771 4773> {PUBLIC} "add_importers";
2199 Parameter <4772 -4773> {} "vertex";
2200 Method <4777 -4778> {PUBLIC} "remove_importers";
2201 WildcardType <4774 -4776> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
2202 Method <4779 -4780 4782> {PUBLIC} "remove_importers";
2203 Parameter <4781 -4782> {} "vertex";
2204 Method <4784 4787 -4788> {PUBLIC} "get_importers";
2205 TypeParameter <4783 -4784 -4786> n "V" "de.uni_koblenz.jgralab.jex.schema.MethodLike.get_importers().V";
2206 ParametrizedType <4785 4786 -4787 4791 4792 -4793> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.MethodLike.get_importers|V>";
2207 Method <4790 4793 -4794 4798> {PUBLIC} "get_importers";
2208 TypeParameter <4789 -4790 -4792 -4796> n "V" "de.uni_koblenz.jgralab.jex.schema.MethodLike.get_importers(VertexFilter<V>).V";
2209 ParametrizedType <4795 4796 -4797> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.MethodLike.get_importers|V>";
2210 Parameter <4797 -4798> {} "filter";
2211 Method <4799 -4800 4802> {PUBLIC} "add_parent";
2212 Parameter <4801 -4802> {} "vertex";
2213 Method <4806 -4807> {PUBLIC} "remove_parent";
2214 WildcardType <4803 -4805> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
2215 Method <4808 -4809 4811> {PUBLIC} "remove_parent";
2216 Parameter <4810 -4811> {} "vertex";
2217 Method <4812 -4813> {PUBLIC} "get_parent";
2218 Method <4816 -4817> {PUBLIC} "getHasParamIncidences";
2219 Method <4820 -4821 4823> {PUBLIC} "getHasParamIncidences";
2220 Parameter <4822 -4823> {} "direction";
2221 Method <4826 -4827> {PUBLIC} "getThrowsIncidences";
2222 Method <4830 -4831 4833> {PUBLIC} "getThrowsIncidences";
2223 Parameter <4832 -4833> {} "direction";
2224 SourceFile <4851> 22 "src/de/uni_koblenz/jgralab/jex/schema/ModifiableElement.java";
2225 Field <4837 -4838> {PUBLIC FINAL STATIC} "VC";
2226 Method <4841 -4842> {PUBLIC} "get_modifiers";
2227 Interface <-4839 -4845 -6670 -6700 -6706 -6886 -6918 -6924 -8002 -8034 -8040 -8779 -8809 -8815 -10111 -10143 -10149 -11021 -11051 -11057 -12202 -12234 -12240 -13985 -14015 -14021 -14559 -14589 -14595 -14757 -14789 -14795 -17384 -17416 -17422> {PUBLIC} "PSet" "org.pcollections.PSet";
2228 Enum <-4840 -4846 4853 4854 4855 4856 4857 4858 4859 4860 4861 4862 4863 -4864 4865 -4868 -4869 -6671 -6701 -6707 -6887 -6919 -6925 -8003 -8035 -8041 -8780 -8810 -8816 -10112 -10144 -10150 -11022 -11052 -11058 -12203 -12235 -12241 -13986 -14016 -14022 -14560 -14590 -14596 -14758 -14790 -14796 -17385 -17417 -17423> {PUBLIC} "Modifiers" "de.uni_koblenz.jgralab.jex.schema.Modifiers";
2229 ParametrizedType <4839 4840 -4841 4845 4846 -4847 6670 6671 -6672 6700 6701 -6702 6706 6707 -6708 6886 6887 -6888 6918 6919 -6920 6924 6925 -6926 8002 8003 -8004 8034 8035 -8036 8040 8041 -8042 8779 8780 -8781 8809 8810 -8811 8815 8816 -8817 10111 10112 -10113 10143 10144 -10145 10149 10150 -10151 11021 11022 -11023 11051 11052 -11053 11057 11058 -11059 12202 12203 -12204 12234 12235 -12236 12240 12241 -12242 13985 13986 -13987 14015 14016 -14017 14021 14022 -14023 14559 14560 -14561 14589 14590 -14591 14595 14596 -14597 14757 14758 -14759 14789 14790 -14791 14795 14796 -14797 17384 17385 -17386 17416 17417 -17418 17422 17423 -17424> n "PSet<Modifiers>" "org.pcollections.PSet<de.uni_koblenz.jgralab.jex.schema.Modifiers>";
2230 Method <4843 -4844 4848> {PUBLIC} "set_modifiers";
2231 Parameter <4847 -4848> {} "_modifiers";
2232 Method <4849 -4850> {PUBLIC} "getNextModifiableElement";
2233 SourceFile <4868> 20 "src/de/uni_koblenz/jgralab/jex/schema/Modifiers.java";
2234 EnumConst <-4853> "ABSTRACT";
2235 EnumConst <-4854> "FINAL";
2236 EnumConst <-4855> "NATIVE";
2237 EnumConst <-4856> "PRIVATE";
2238 EnumConst <-4857> "PROTECTED";
2239 EnumConst <-4858> "PUBLIC";
2240 EnumConst <-4859> "STATIC";
2241 EnumConst <-4860> "STRICTFP";
2242 EnumConst <-4861> "SYNCHRONIZED";
2243 EnumConst <-4862> "TRANSIENT";
2244 EnumConst <-4863> "VOLATILE";
2245 Method <4864 -4865 4867> {PUBLIC STATIC} "valueOfPermitNull";
2246 Parameter <4866 -4867> {} "val";
2247 SourceFile <4870 4927> 75 "src/de/uni_koblenz/jgralab/jex/schema/NamedElement.java";
2248 Field <4872 -4873> {PUBLIC FINAL STATIC} "VC";
2249 Method <4874 -4875> {PUBLIC} "get_name";
2250 Method <4876 -4877 4879> {PUBLIC} "set_name";
2251 Parameter <4878 -4879> {} "_name";
2252 Method <4880 -4881> {PUBLIC} "getNextNamedElement";
2253 Method <4882 -4883> {PUBLIC} "getFirstImportsIncidence";
2254 Method <4884 -4885 4887> {PUBLIC} "getFirstImportsIncidence";
2255 Parameter <4886 -4887> {} "orientation";
2256 Method <4888 -4889 4891> {PUBLIC} "add_importers";
2257 Parameter <4890 -4891> {} "vertex";
2258 Method <4895 -4896> {PUBLIC} "remove_importers";
2259 WildcardType <4892 -4894> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
2260 Method <4897 -4898 4900> {PUBLIC} "remove_importers";
2261 Parameter <4899 -4900> {} "vertex";
2262 Method <4902 4905 -4906> {PUBLIC} "get_importers";
2263 TypeParameter <4901 -4902 -4904> n "V" "de.uni_koblenz.jgralab.jex.schema.NamedElement.get_importers().V";
2264 ParametrizedType <4903 4904 -4905 4909 4910 -4911> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.NamedElement.get_importers|V>";
2265 Method <4908 4911 -4912 4916> {PUBLIC} "get_importers";
2266 TypeParameter <4907 -4908 -4910 -4914> n "V" "de.uni_koblenz.jgralab.jex.schema.NamedElement.get_importers(VertexFilter<V>).V";
2267 ParametrizedType <4913 4914 -4915> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.NamedElement.get_importers|V>";
2268 Parameter <4915 -4916> {} "filter";
2269 Method <4919 -4920> {PUBLIC} "getImportsIncidences";
2270 Method <4923 -4924 4926> {PUBLIC} "getImportsIncidences";
2271 Parameter <4925 -4926> {} "direction";
2272 SourceFile <4929 5059> 161 "src/de/uni_koblenz/jgralab/jex/schema/Package.java";
2273 Field <4932 -4933> {PUBLIC FINAL STATIC} "VC";
2274 Method <4934 -4935> {PUBLIC} "getNextNamedElement";
2275 Method <4936 -4937> {PUBLIC} "getNextPackage";
2276 Method <4938 -4939> {PUBLIC} "getNextQualifiedNamedElement";
2277 Method <4940 -4941> {PUBLIC} "getFirstContainsPackageIncidence";
2278 Method <4942 -4943 4945> {PUBLIC} "getFirstContainsPackageIncidence";
2279 Parameter <4944 -4945> {} "orientation";
2280 Method <4946 -4947> {PUBLIC} "getFirstContainsClassifierIncidence";
2281 Method <4948 -4949 4951> {PUBLIC} "getFirstContainsClassifierIncidence";
2282 Parameter <4950 -4951> {} "orientation";
2283 Method <4952 -4953 4955> {PUBLIC} "add_importers";
2284 Parameter <4954 -4955> {} "vertex";
2285 Method <4959 -4960> {PUBLIC} "remove_importers";
2286 WildcardType <4956 -4958> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
2287 Method <4961 -4962 4964> {PUBLIC} "remove_importers";
2288 Parameter <4963 -4964> {} "vertex";
2289 Method <4966 4969 -4970> {PUBLIC} "get_importers";
2290 TypeParameter <4965 -4966 -4968> n "V" "de.uni_koblenz.jgralab.jex.schema.Package.get_importers().V";
2291 ParametrizedType <4967 4968 -4969 4973 4974 -4975> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Package.get_importers|V>";
2292 Method <4972 4975 -4976 4980> {PUBLIC} "get_importers";
2293 TypeParameter <4971 -4972 -4974 -4978> n "V" "de.uni_koblenz.jgralab.jex.schema.Package.get_importers(VertexFilter<V>).V";
2294 ParametrizedType <4977 4978 -4979> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Package.get_importers|V>";
2295 Parameter <4979 -4980> {} "filter";
2296 Method <4981 -4982 4984> {PUBLIC} "add_types";
2297 Parameter <4983 -4984> {} "vertex";
2298 Method <4988 -4989> {PUBLIC} "remove_types";
2299 WildcardType <4985 -4987> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
2300 Method <4990 -4991 4993> {PUBLIC} "remove_types";
2301 Parameter <4992 -4993> {} "vertex";
2302 Method <4995 4998 -4999> {PUBLIC} "get_types";
2303 TypeParameter <4994 -4995 -4997> n "V" "de.uni_koblenz.jgralab.jex.schema.Package.get_types().V";
2304 ParametrizedType <4996 4997 -4998 5002 5003 -5004> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Package.get_types|V>";
2305 Method <5001 5004 -5005 5009> {PUBLIC} "get_types";
2306 TypeParameter <5000 -5001 -5003 -5007> n "V" "de.uni_koblenz.jgralab.jex.schema.Package.get_types(VertexFilter<V>).V";
2307 ParametrizedType <5006 5007 -5008> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Package.get_types|V>";
2308 Parameter <5008 -5009> {} "filter";
2309 Method <5010 -5011 5013> {PUBLIC} "add_subPackages";
2310 Parameter <5012 -5013> {} "vertex";
2311 Method <5017 -5018> {PUBLIC} "remove_subPackages";
2312 WildcardType <5014 -5016> "? extends Package" "? extends de.uni_koblenz.jgralab.jex.schema.Package";
2313 ParametrizedType <5015 5016 -5017 14491 14492 -14493> n "List<? extends Package>" "java.util.List<? extends de.uni_koblenz.jgralab.jex.schema.Package>";
2314 Method <5019 -5020 5022> {PUBLIC} "remove_subPackages";
2315 Parameter <5021 -5022> {} "vertex";
2316 Method <5024 5027 -5028> {PUBLIC} "get_subPackages";
2317 TypeParameter <5023 -5024 -5026> n "V" "de.uni_koblenz.jgralab.jex.schema.Package.get_subPackages().V";
2318 ParametrizedType <5025 5026 -5027 5031 5032 -5033> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Package.get_subPackages|V>";
2319 Method <5030 5033 -5034 5038> {PUBLIC} "get_subPackages";
2320 TypeParameter <5029 -5030 -5032 -5036> n "V" "de.uni_koblenz.jgralab.jex.schema.Package.get_subPackages(VertexFilter<V>).V";
2321 ParametrizedType <5035 5036 -5037> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Package.get_subPackages|V>";
2322 Parameter <5037 -5038> {} "filter";
2323 Method <5041 -5042> {PUBLIC} "getContainsPackageIncidences";
2324 Method <5045 -5046 5048> {PUBLIC} "getContainsPackageIncidences";
2325 Parameter <5047 -5048> {} "direction";
2326 Method <5051 -5052> {PUBLIC} "getContainsClassifierIncidences";
2327 Method <5055 -5056 5058> {PUBLIC} "getContainsClassifierIncidences";
2328 Parameter <5057 -5058> {} "direction";
2329 SourceFile <5061 5150> 140 "src/de/uni_koblenz/jgralab/jex/schema/Parameter.java";
2330 Field <5065 -5066> {PUBLIC FINAL STATIC} "VC";
2331 Method <5067 -5068> {PUBLIC} "getNextModifiableElement";
2332 Method <5069 -5070> {PUBLIC} "getNextNamedElement";
2333 Method <5071 -5072> {PUBLIC} "getNextParameter";
2334 Method <5073 -5074> {PUBLIC} "getNextTypedElement";
2335 Method <5075 -5076> {PUBLIC} "getFirstHasParamIncidence";
2336 Method <5077 -5078 5080> {PUBLIC} "getFirstHasParamIncidence";
2337 Parameter <5079 -5080> {} "orientation";
2338 Method <5081 -5082 5084> {PUBLIC} "add_method";
2339 Parameter <5083 -5084> {} "vertex";
2340 Method <5088 -5089> {PUBLIC} "remove_method";
2341 WildcardType <5085 -5087> "? extends MethodLike" "? extends de.uni_koblenz.jgralab.jex.schema.MethodLike";
2342 ParametrizedType <5086 5087 -5088 14660 14661 -14662> n "List<? extends MethodLike>" "java.util.List<? extends de.uni_koblenz.jgralab.jex.schema.MethodLike>";
2343 Method <5090 -5091 5093> {PUBLIC} "remove_method";
2344 Parameter <5092 -5093> {} "vertex";
2345 Method <5094 -5095> {PUBLIC} "get_method";
2346 Method <5096 -5097 5099> {PUBLIC} "add_importers";
2347 Parameter <5098 -5099> {} "vertex";
2348 Method <5103 -5104> {PUBLIC} "remove_importers";
2349 WildcardType <5100 -5102> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
2350 Method <5105 -5106 5108> {PUBLIC} "remove_importers";
2351 Parameter <5107 -5108> {} "vertex";
2352 Method <5110 5113 -5114> {PUBLIC} "get_importers";
2353 TypeParameter <5109 -5110 -5112> n "V" "de.uni_koblenz.jgralab.jex.schema.Parameter.get_importers().V";
2354 ParametrizedType <5111 5112 -5113 5117 5118 -5119> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Parameter.get_importers|V>";
2355 Method <5116 5119 -5120 5124> {PUBLIC} "get_importers";
2356 TypeParameter <5115 -5116 -5118 -5122> n "V" "de.uni_koblenz.jgralab.jex.schema.Parameter.get_importers(VertexFilter<V>).V";
2357 ParametrizedType <5121 5122 -5123> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Parameter.get_importers|V>";
2358 Parameter <5123 -5124> {} "filter";
2359 Method <5125 -5126 5128> {PUBLIC} "add_type";
2360 Parameter <5127 -5128> {} "vertex";
2361 Method <5132 -5133> {PUBLIC} "remove_type";
2362 WildcardType <5129 -5131> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
2363 Method <5134 -5135 5137> {PUBLIC} "remove_type";
2364 Parameter <5136 -5137> {} "vertex";
2365 Method <5138 -5139> {PUBLIC} "get_type";
2366 Method <5142 -5143> {PUBLIC} "getHasParamIncidences";
2367 Method <5146 -5147 5149> {PUBLIC} "getHasParamIncidences";
2368 Parameter <5148 -5149> {} "direction";
2369 SourceFile <5152 5569> 499 "src/de/uni_koblenz/jgralab/jex/schema/ParametrizedType.java";
2370 Field <5155 -5156> {PUBLIC FINAL STATIC} "VC";
2371 Method <5157 -5158> {PUBLIC} "getNextAbstractClassifier";
2372 Method <5159 -5160> {PUBLIC} "getNextMember";
2373 Method <5161 -5162> {PUBLIC} "getNextModifiableElement";
2374 Method <5163 -5164> {PUBLIC} "getNextNamedElement";
2375 Method <5165 -5166> {PUBLIC} "getNextParametrizedType";
2376 Method <5167 -5168> {PUBLIC} "getNextQualifiedNamedElement";
2377 Method <5169 -5170> {PUBLIC} "getNextType";
2378 Method <5171 -5172> {PUBLIC} "getNextTypeParametrizable";
2379 Method <5173 -5174> {PUBLIC} "getFirstHasGenericTypeIncidence";
2380 Method <5175 -5176 5178> {PUBLIC} "getFirstHasGenericTypeIncidence";
2381 Parameter <5177 -5178> {} "orientation";
2382 Method <5179 -5180> {PUBLIC} "getFirstHasTypeArgIncidence";
2383 Method <5181 -5182 5184> {PUBLIC} "getFirstHasTypeArgIncidence";
2384 Parameter <5183 -5184> {} "orientation";
2385 Method <5185 -5186 5188> {PUBLIC} "add_constructors";
2386 Parameter <5187 -5188> {} "vertex";
2387 Method <5192 -5193> {PUBLIC} "remove_constructors";
2388 WildcardType <5189 -5191> "? extends Constructor" "? extends de.uni_koblenz.jgralab.jex.schema.Constructor";
2389 Method <5194 -5195 5197> {PUBLIC} "remove_constructors";
2390 Parameter <5196 -5197> {} "vertex";
2391 Method <5199 5202 -5203> {PUBLIC} "get_constructors";
2392 TypeParameter <5198 -5199 -5201> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_constructors().V";
2393 ParametrizedType <5200 5201 -5202 5206 5207 -5208> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_constructors|V>";
2394 Method <5205 5208 -5209 5213> {PUBLIC} "get_constructors";
2395 TypeParameter <5204 -5205 -5207 -5211> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_constructors(VertexFilter<V>).V";
2396 ParametrizedType <5210 5211 -5212> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_constructors|V>";
2397 Parameter <5212 -5213> {} "filter";
2398 Method <5214 -5215 5217> {PUBLIC} "add_importers";
2399 Parameter <5216 -5217> {} "vertex";
2400 Method <5221 -5222> {PUBLIC} "remove_importers";
2401 WildcardType <5218 -5220> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
2402 Method <5223 -5224 5226> {PUBLIC} "remove_importers";
2403 Parameter <5225 -5226> {} "vertex";
2404 Method <5228 5231 -5232> {PUBLIC} "get_importers";
2405 TypeParameter <5227 -5228 -5230> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_importers().V";
2406 ParametrizedType <5229 5230 -5231 5235 5236 -5237> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_importers|V>";
2407 Method <5234 5237 -5238 5242> {PUBLIC} "get_importers";
2408 TypeParameter <5233 -5234 -5236 -5240> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_importers(VertexFilter<V>).V";
2409 ParametrizedType <5239 5240 -5241> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_importers|V>";
2410 Parameter <5241 -5242> {} "filter";
2411 Method <5243 -5244 5246> {PUBLIC} "add_fields";
2412 Parameter <5245 -5246> {} "vertex";
2413 Method <5250 -5251> {PUBLIC} "remove_fields";
2414 WildcardType <5247 -5249> "? extends Field" "? extends de.uni_koblenz.jgralab.jex.schema.Field";
2415 Method <5252 -5253 5255> {PUBLIC} "remove_fields";
2416 Parameter <5254 -5255> {} "vertex";
2417 Method <5257 5260 -5261> {PUBLIC} "get_fields";
2418 TypeParameter <5256 -5257 -5259> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_fields().V";
2419 ParametrizedType <5258 5259 -5260 5264 5265 -5266> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_fields|V>";
2420 Method <5263 5266 -5267 5271> {PUBLIC} "get_fields";
2421 TypeParameter <5262 -5263 -5265 -5269> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_fields(VertexFilter<V>).V";
2422 ParametrizedType <5268 5269 -5270> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_fields|V>";
2423 Parameter <5270 -5271> {} "filter";
2424 Method <5272 -5273 5275> {PUBLIC} "add_sourceFile";
2425 Parameter <5274 -5275> {} "vertex";
2426 Method <5279 -5280> {PUBLIC} "remove_sourceFile";
2427 WildcardType <5276 -5278> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
2428 Method <5281 -5282 5284> {PUBLIC} "remove_sourceFile";
2429 Parameter <5283 -5284> {} "vertex";
2430 Method <5285 -5286> {PUBLIC} "get_sourceFile";
2431 Method <5287 -5288 5290> {PUBLIC} "add_members";
2432 Parameter <5289 -5290> {} "vertex";
2433 Method <5294 -5295> {PUBLIC} "remove_members";
2434 WildcardType <5291 -5293> "? extends Member" "? extends de.uni_koblenz.jgralab.jex.schema.Member";
2435 Method <5296 -5297 5299> {PUBLIC} "remove_members";
2436 Parameter <5298 -5299> {} "vertex";
2437 Method <5301 5304 -5305> {PUBLIC} "get_members";
2438 TypeParameter <5300 -5301 -5303> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_members().V";
2439 ParametrizedType <5302 5303 -5304 5308 5309 -5310> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_members|V>";
2440 Method <5307 5310 -5311 5315> {PUBLIC} "get_members";
2441 TypeParameter <5306 -5307 -5309 -5313> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_members(VertexFilter<V>).V";
2442 ParametrizedType <5312 5313 -5314> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_members|V>";
2443 Parameter <5314 -5315> {} "filter";
2444 Method <5316 -5317 5319> {PUBLIC} "add_nestedClassifiers";
2445 Parameter <5318 -5319> {} "vertex";
2446 Method <5323 -5324> {PUBLIC} "remove_nestedClassifiers";
2447 WildcardType <5320 -5322> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
2448 Method <5325 -5326 5328> {PUBLIC} "remove_nestedClassifiers";
2449 Parameter <5327 -5328> {} "vertex";
2450 Method <5330 5333 -5334> {PUBLIC} "get_nestedClassifiers";
2451 TypeParameter <5329 -5330 -5332> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_nestedClassifiers().V";
2452 ParametrizedType <5331 5332 -5333 5337 5338 -5339> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_nestedClassifiers|V>";
2453 Method <5336 5339 -5340 5344> {PUBLIC} "get_nestedClassifiers";
2454 TypeParameter <5335 -5336 -5338 -5342> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_nestedClassifiers(VertexFilter<V>).V";
2455 ParametrizedType <5341 5342 -5343> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_nestedClassifiers|V>";
2456 Parameter <5343 -5344> {} "filter";
2457 Method <5345 -5346 5348> {PUBLIC} "add_subclasses";
2458 Parameter <5347 -5348> {} "vertex";
2459 Method <5352 -5353> {PUBLIC} "remove_subclasses";
2460 WildcardType <5349 -5351> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
2461 Method <5354 -5355 5357> {PUBLIC} "remove_subclasses";
2462 Parameter <5356 -5357> {} "vertex";
2463 Method <5359 5362 -5363> {PUBLIC} "get_subclasses";
2464 TypeParameter <5358 -5359 -5361> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_subclasses().V";
2465 ParametrizedType <5360 5361 -5362 5366 5367 -5368> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_subclasses|V>";
2466 Method <5365 5368 -5369 5373> {PUBLIC} "get_subclasses";
2467 TypeParameter <5364 -5365 -5367 -5371> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_subclasses(VertexFilter<V>).V";
2468 ParametrizedType <5370 5371 -5372> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_subclasses|V>";
2469 Parameter <5372 -5373> {} "filter";
2470 Method <5374 -5375 5377> {PUBLIC} "add_typeParams";
2471 Parameter <5376 -5377> {} "vertex";
2472 Method <5381 -5382> {PUBLIC} "remove_typeParams";
2473 WildcardType <5378 -5380> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
2474 Method <5383 -5384 5386> {PUBLIC} "remove_typeParams";
2475 Parameter <5385 -5386> {} "vertex";
2476 Method <5388 5391 -5392> {PUBLIC} "get_typeParams";
2477 TypeParameter <5387 -5388 -5390> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_typeParams().V";
2478 ParametrizedType <5389 5390 -5391 5395 5396 -5397> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_typeParams|V>";
2479 Method <5394 5397 -5398 5402> {PUBLIC} "get_typeParams";
2480 TypeParameter <5393 -5394 -5396 -5400> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_typeParams(VertexFilter<V>).V";
2481 ParametrizedType <5399 5400 -5401> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_typeParams|V>";
2482 Parameter <5401 -5402> {} "filter";
2483 Method <5403 -5404 5406> {PUBLIC} "add_implementors";
2484 Parameter <5405 -5406> {} "vertex";
2485 Method <5410 -5411> {PUBLIC} "remove_implementors";
2486 WildcardType <5407 -5409> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
2487 Method <5412 -5413 5415> {PUBLIC} "remove_implementors";
2488 Parameter <5414 -5415> {} "vertex";
2489 Method <5417 5420 -5421> {PUBLIC} "get_implementors";
2490 TypeParameter <5416 -5417 -5419> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_implementors().V";
2491 ParametrizedType <5418 5419 -5420 5424 5425 -5426> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_implementors|V>";
2492 Method <5423 5426 -5427 5431> {PUBLIC} "get_implementors";
2493 TypeParameter <5422 -5423 -5425 -5429> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_implementors(VertexFilter<V>).V";
2494 ParametrizedType <5428 5429 -5430> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_implementors|V>";
2495 Parameter <5430 -5431> {} "filter";
2496 Method <5432 -5433 5435> {PUBLIC} "add_genericType";
2497 Parameter <5434 -5435> {} "vertex";
2498 Method <5439 -5440> {PUBLIC} "remove_genericType";
2499 WildcardType <5436 -5438> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
2500 Method <5441 -5442 5444> {PUBLIC} "remove_genericType";
2501 Parameter <5443 -5444> {} "vertex";
2502 Method <5445 -5446> {PUBLIC} "get_genericType";
2503 Method <5447 -5448 5450> {PUBLIC} "add_typeArgs";
2504 Parameter <5449 -5450> {} "vertex";
2505 Method <5454 -5455> {PUBLIC} "remove_typeArgs";
2506 WildcardType <5451 -5453> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
2507 Method <5456 -5457 5459> {PUBLIC} "remove_typeArgs";
2508 Parameter <5458 -5459> {} "vertex";
2509 Method <5461 5464 -5465> {PUBLIC} "get_typeArgs";
2510 TypeParameter <5460 -5461 -5463> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_typeArgs().V";
2511 ParametrizedType <5462 5463 -5464 5468 5469 -5470> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_typeArgs|V>";
2512 Method <5467 5470 -5471 5475> {PUBLIC} "get_typeArgs";
2513 TypeParameter <5466 -5467 -5469 -5473> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_typeArgs(VertexFilter<V>).V";
2514 ParametrizedType <5472 5473 -5474> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_typeArgs|V>";
2515 Parameter <5474 -5475> {} "filter";
2516 Method <5476 -5477 5479> {PUBLIC} "add_methods";
2517 Parameter <5478 -5479> {} "vertex";
2518 Method <5483 -5484> {PUBLIC} "remove_methods";
2519 WildcardType <5480 -5482> "? extends Method" "? extends de.uni_koblenz.jgralab.jex.schema.Method";
2520 Method <5485 -5486 5488> {PUBLIC} "remove_methods";
2521 Parameter <5487 -5488> {} "vertex";
2522 Method <5490 5493 -5494> {PUBLIC} "get_methods";
2523 TypeParameter <5489 -5490 -5492> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_methods().V";
2524 ParametrizedType <5491 5492 -5493 5497 5498 -5499> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_methods|V>";
2525 Method <5496 5499 -5500 5504> {PUBLIC} "get_methods";
2526 TypeParameter <5495 -5496 -5498 -5502> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_methods(VertexFilter<V>).V";
2527 ParametrizedType <5501 5502 -5503> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_methods|V>";
2528 Parameter <5503 -5504> {} "filter";
2529 Method <5505 -5506 5508> {PUBLIC} "add_parent";
2530 Parameter <5507 -5508> {} "vertex";
2531 Method <5512 -5513> {PUBLIC} "remove_parent";
2532 WildcardType <5509 -5511> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
2533 Method <5514 -5515 5517> {PUBLIC} "remove_parent";
2534 Parameter <5516 -5517> {} "vertex";
2535 Method <5518 -5519> {PUBLIC} "get_parent";
2536 Method <5520 -5521 5523> {PUBLIC} "add_arrayType";
2537 Parameter <5522 -5523> {} "vertex";
2538 Method <5527 -5528> {PUBLIC} "remove_arrayType";
2539 WildcardType <5524 -5526> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
2540 Method <5529 -5530 5532> {PUBLIC} "remove_arrayType";
2541 Parameter <5531 -5532> {} "vertex";
2542 Method <5534 5537 -5538> {PUBLIC} "get_arrayType";
2543 TypeParameter <5533 -5534 -5536> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_arrayType().V";
2544 ParametrizedType <5535 5536 -5537 5541 5542 -5543> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_arrayType|V>";
2545 Method <5540 5543 -5544 5548> {PUBLIC} "get_arrayType";
2546 TypeParameter <5539 -5540 -5542 -5546> n "V" "de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_arrayType(VertexFilter<V>).V";
2547 ParametrizedType <5545 5546 -5547> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.ParametrizedType.get_arrayType|V>";
2548 Parameter <5547 -5548> {} "filter";
2549 Method <5551 -5552> {PUBLIC} "getHasGenericTypeIncidences";
2550 Method <5555 -5556 5558> {PUBLIC} "getHasGenericTypeIncidences";
2551 Parameter <5557 -5558> {} "direction";
2552 Method <5561 -5562> {PUBLIC} "getHasTypeArgIncidences";
2553 Method <5565 -5566 5568> {PUBLIC} "getHasTypeArgIncidences";
2554 Parameter <5567 -5568> {} "direction";
2555 SourceFile <5647> 95 "src/de/uni_koblenz/jgralab/jex/schema/PrimitiveType.java";
2556 Field <5573 -5574> {PUBLIC FINAL STATIC} "VC";
2557 Method <5575 -5576> {PUBLIC} "get_type";
2558 Enum <-5575 -5579 5649 5650 5651 5652 5653 5654 5655 5656 5657 -5658 5659 -5662 -5663 -15536 -15574 -15578> {PUBLIC} "PrimitiveTypes" "de.uni_koblenz.jgralab.jex.schema.PrimitiveTypes";
2559 Method <5577 -5578 5580> {PUBLIC} "set_type";
2560 Parameter <5579 -5580> {} "_type";
2561 Method <5581 -5582> {PUBLIC} "getNextNamedElement";
2562 Method <5583 -5584> {PUBLIC} "getNextPrimitiveType";
2563 Method <5585 -5586> {PUBLIC} "getNextQualifiedNamedElement";
2564 Method <5587 -5588> {PUBLIC} "getNextType";
2565 Method <5589 -5590 5592> {PUBLIC} "add_importers";
2566 Parameter <5591 -5592> {} "vertex";
2567 Method <5596 -5597> {PUBLIC} "remove_importers";
2568 WildcardType <5593 -5595> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
2569 Method <5598 -5599 5601> {PUBLIC} "remove_importers";
2570 Parameter <5600 -5601> {} "vertex";
2571 Method <5603 5606 -5607> {PUBLIC} "get_importers";
2572 TypeParameter <5602 -5603 -5605> n "V" "de.uni_koblenz.jgralab.jex.schema.PrimitiveType.get_importers().V";
2573 ParametrizedType <5604 5605 -5606 5610 5611 -5612> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.PrimitiveType.get_importers|V>";
2574 Method <5609 5612 -5613 5617> {PUBLIC} "get_importers";
2575 TypeParameter <5608 -5609 -5611 -5615> n "V" "de.uni_koblenz.jgralab.jex.schema.PrimitiveType.get_importers(VertexFilter<V>).V";
2576 ParametrizedType <5614 5615 -5616> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.PrimitiveType.get_importers|V>";
2577 Parameter <5616 -5617> {} "filter";
2578 Method <5618 -5619 5621> {PUBLIC} "add_arrayType";
2579 Parameter <5620 -5621> {} "vertex";
2580 Method <5625 -5626> {PUBLIC} "remove_arrayType";
2581 WildcardType <5622 -5624> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
2582 Method <5627 -5628 5630> {PUBLIC} "remove_arrayType";
2583 Parameter <5629 -5630> {} "vertex";
2584 Method <5632 5635 -5636> {PUBLIC} "get_arrayType";
2585 TypeParameter <5631 -5632 -5634> n "V" "de.uni_koblenz.jgralab.jex.schema.PrimitiveType.get_arrayType().V";
2586 ParametrizedType <5633 5634 -5635 5639 5640 -5641> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.PrimitiveType.get_arrayType|V>";
2587 Method <5638 5641 -5642 5646> {PUBLIC} "get_arrayType";
2588 TypeParameter <5637 -5638 -5640 -5644> n "V" "de.uni_koblenz.jgralab.jex.schema.PrimitiveType.get_arrayType(VertexFilter<V>).V";
2589 ParametrizedType <5643 5644 -5645> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.PrimitiveType.get_arrayType|V>";
2590 Parameter <5645 -5646> {} "filter";
2591 SourceFile <5662> 20 "src/de/uni_koblenz/jgralab/jex/schema/PrimitiveTypes.java";
2592 EnumConst <-5649> "BOOLEAN";
2593 EnumConst <-5650> "BYTE";
2594 EnumConst <-5651> "CHAR";
2595 EnumConst <-5652> "DOUBLE";
2596 EnumConst <-5653> "FLOAT";
2597 EnumConst <-5654> "INT";
2598 EnumConst <-5655> "LONG";
2599 EnumConst <-5656> "SHORT";
2600 EnumConst <-5657> "VOID";
2601 Method <5658 -5659 5661> {PUBLIC STATIC} "valueOfPermitNull";
2602 Parameter <5660 -5661> {} "val";
2603 SourceFile <5707> 56 "src/de/uni_koblenz/jgralab/jex/schema/QualifiedNamedElement.java";
2604 Field <5666 -5667> {PUBLIC FINAL STATIC} "VC";
2605 Method <5668 -5669> {PUBLIC} "get_qualifiedName";
2606 Method <5670 -5671 5673> {PUBLIC} "set_qualifiedName";
2607 Parameter <5672 -5673> {} "_qualifiedName";
2608 Method <5674 -5675> {PUBLIC} "getNextNamedElement";
2609 Method <5676 -5677> {PUBLIC} "getNextQualifiedNamedElement";
2610 Method <5678 -5679 5681> {PUBLIC} "add_importers";
2611 Parameter <5680 -5681> {} "vertex";
2612 Method <5685 -5686> {PUBLIC} "remove_importers";
2613 WildcardType <5682 -5684> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
2614 Method <5687 -5688 5690> {PUBLIC} "remove_importers";
2615 Parameter <5689 -5690> {} "vertex";
2616 Method <5692 5695 -5696> {PUBLIC} "get_importers";
2617 TypeParameter <5691 -5692 -5694> n "V" "de.uni_koblenz.jgralab.jex.schema.QualifiedNamedElement.get_importers().V";
2618 ParametrizedType <5693 5694 -5695 5699 5700 -5701> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.QualifiedNamedElement.get_importers|V>";
2619 Method <5698 5701 -5702 5706> {PUBLIC} "get_importers";
2620 TypeParameter <5697 -5698 -5700 -5704> n "V" "de.uni_koblenz.jgralab.jex.schema.QualifiedNamedElement.get_importers(VertexFilter<V>).V";
2621 ParametrizedType <5703 5704 -5705> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.QualifiedNamedElement.get_importers|V>";
2622 Parameter <5705 -5706> {} "filter";
2623 SourceFile <5709 5817> 130 "src/de/uni_koblenz/jgralab/jex/schema/SourceFile.java";
2624 Field <5711 -5712> {PUBLIC FINAL STATIC} "VC";
2625 Method <5713 -5714> {PUBLIC} "get_lines";
2626 Method <5715 -5716 5718> {PUBLIC} "set_lines";
2627 Parameter <5717 -5718> {} "_lines";
2628 Method <5719 -5720> {PUBLIC} "get_path";
2629 Method <5721 -5722 5724> {PUBLIC} "set_path";
2630 Parameter <5723 -5724> {} "_path";
2631 Method <5725 -5726> {PUBLIC} "getNextSourceFile";
2632 Method <5727 -5728> {PUBLIC} "getFirstDefinesIncidence";
2633 Method <5729 -5730 5732> {PUBLIC} "getFirstDefinesIncidence";
2634 Parameter <5731 -5732> {} "orientation";
2635 Method <5733 -5734> {PUBLIC} "getFirstImportsIncidence";
2636 Method <5735 -5736 5738> {PUBLIC} "getFirstImportsIncidence";
2637 Parameter <5737 -5738> {} "orientation";
2638 Method <5739 -5740 5742> {PUBLIC} "add_imports";
2639 Parameter <5741 -5742> {} "vertex";
2640 Method <5746 -5747> {PUBLIC} "remove_imports";
2641 WildcardType <5743 -5745> "? extends NamedElement" "? extends de.uni_koblenz.jgralab.jex.schema.NamedElement";
2642 ParametrizedType <5744 5745 -5746 17211 17212 -17213> n "List<? extends NamedElement>" "java.util.List<? extends de.uni_koblenz.jgralab.jex.schema.NamedElement>";
2643 Method <5748 -5749 5751> {PUBLIC} "remove_imports";
2644 Parameter <5750 -5751> {} "vertex";
2645 Method <5753 5756 -5757> {PUBLIC} "get_imports";
2646 TypeParameter <5752 -5753 -5755> n "V" "de.uni_koblenz.jgralab.jex.schema.SourceFile.get_imports().V";
2647 ParametrizedType <5754 5755 -5756 5760 5761 -5762> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.SourceFile.get_imports|V>";
2648 Method <5759 5762 -5763 5767> {PUBLIC} "get_imports";
2649 TypeParameter <5758 -5759 -5761 -5765> n "V" "de.uni_koblenz.jgralab.jex.schema.SourceFile.get_imports(VertexFilter<V>).V";
2650 ParametrizedType <5764 5765 -5766> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.SourceFile.get_imports|V>";
2651 Parameter <5766 -5767> {} "filter";
2652 Method <5768 -5769 5771> {PUBLIC} "add_classifiers";
2653 Parameter <5770 -5771> {} "vertex";
2654 Method <5775 -5776> {PUBLIC} "remove_classifiers";
2655 WildcardType <5772 -5774> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
2656 Method <5777 -5778 5780> {PUBLIC} "remove_classifiers";
2657 Parameter <5779 -5780> {} "vertex";
2658 Method <5782 5785 -5786> {PUBLIC} "get_classifiers";
2659 TypeParameter <5781 -5782 -5784> n "V" "de.uni_koblenz.jgralab.jex.schema.SourceFile.get_classifiers().V";
2660 ParametrizedType <5783 5784 -5785 5789 5790 -5791> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.SourceFile.get_classifiers|V>";
2661 Method <5788 5791 -5792 5796> {PUBLIC} "get_classifiers";
2662 TypeParameter <5787 -5788 -5790 -5794> n "V" "de.uni_koblenz.jgralab.jex.schema.SourceFile.get_classifiers(VertexFilter<V>).V";
2663 ParametrizedType <5793 5794 -5795> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.SourceFile.get_classifiers|V>";
2664 Parameter <5795 -5796> {} "filter";
2665 Method <5799 -5800> {PUBLIC} "getDefinesIncidences";
2666 Method <5803 -5804 5806> {PUBLIC} "getDefinesIncidences";
2667 Parameter <5805 -5806> {} "direction";
2668 Method <5809 -5810> {PUBLIC} "getImportsIncidences";
2669 Method <5813 -5814 5816> {PUBLIC} "getImportsIncidences";
2670 Parameter <5815 -5816> {} "direction";
2671 SourceFile <5819 5820 5821 5837> 42 "src/de/uni_koblenz/jgralab/jex/schema/Throws.java";
2672 Field <5823 -5824> {PUBLIC FINAL STATIC} "EC";
2673 Method <5825 -5826> {PUBLIC} "getNextThrowsInGraph";
2674 Method <5827 -5828> {PUBLIC} "getNextThrowsIncidence";
2675 Method <5829 -5830 5832> {PUBLIC} "getNextThrowsIncidence";
2676 Parameter <5831 -5832> {} "orientation";
2677 Method <5833 -5834> {PUBLIC} "getAlpha";
2678 Method <5835 -5836> {PUBLIC} "getOmega";
2679 SourceFile <5839 6020> 242 "src/de/uni_koblenz/jgralab/jex/schema/Type.java";
2680 Field <5842 -5843> {PUBLIC FINAL STATIC} "VC";
2681 Method <5844 -5845> {PUBLIC} "getNextNamedElement";
2682 Method <5846 -5847> {PUBLIC} "getNextQualifiedNamedElement";
2683 Method <5848 -5849> {PUBLIC} "getNextType";
2684 Method <5850 -5851> {PUBLIC} "getFirstHasUpperBoundIncidence";
2685 Method <5852 -5853 5855> {PUBLIC} "getFirstHasUpperBoundIncidence";
2686 Parameter <5854 -5855> {} "orientation";
2687 Method <5856 -5857> {PUBLIC} "getFirstHasTypeIncidence";
2688 Method <5858 -5859 5861> {PUBLIC} "getFirstHasTypeIncidence";
2689 Parameter <5860 -5861> {} "orientation";
2690 Method <5862 -5863> {PUBLIC} "getFirstHasTypeArgIncidence";
2691 Method <5864 -5865 5867> {PUBLIC} "getFirstHasTypeArgIncidence";
2692 Parameter <5866 -5867> {} "orientation";
2693 Method <5868 -5869> {PUBLIC} "getFirstThrowsIncidence";
2694 Method <5870 -5871 5873> {PUBLIC} "getFirstThrowsIncidence";
2695 Parameter <5872 -5873> {} "orientation";
2696 Method <5874 -5875> {PUBLIC} "getFirstHasElementTypeIncidence";
2697 Method <5876 -5877 5879> {PUBLIC} "getFirstHasElementTypeIncidence";
2698 Parameter <5878 -5879> {} "orientation";
2699 Method <5880 -5881> {PUBLIC} "getFirstHasBoundIncidence";
2700 Method <5882 -5883 5885> {PUBLIC} "getFirstHasBoundIncidence";
2701 Parameter <5884 -5885> {} "orientation";
2702 Method <5886 -5887> {PUBLIC} "getFirstHasLowerBoundIncidence";
2703 Method <5888 -5889 5891> {PUBLIC} "getFirstHasLowerBoundIncidence";
2704 Parameter <5890 -5891> {} "orientation";
2705 Method <5892 -5893 5895> {PUBLIC} "add_importers";
2706 Parameter <5894 -5895> {} "vertex";
2707 Method <5899 -5900> {PUBLIC} "remove_importers";
2708 WildcardType <5896 -5898> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
2709 Method <5901 -5902 5904> {PUBLIC} "remove_importers";
2710 Parameter <5903 -5904> {} "vertex";
2711 Method <5906 5909 -5910> {PUBLIC} "get_importers";
2712 TypeParameter <5905 -5906 -5908> n "V" "de.uni_koblenz.jgralab.jex.schema.Type.get_importers().V";
2713 ParametrizedType <5907 5908 -5909 5913 5914 -5915> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Type.get_importers|V>";
2714 Method <5912 5915 -5916 5920> {PUBLIC} "get_importers";
2715 TypeParameter <5911 -5912 -5914 -5918> n "V" "de.uni_koblenz.jgralab.jex.schema.Type.get_importers(VertexFilter<V>).V";
2716 ParametrizedType <5917 5918 -5919> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Type.get_importers|V>";
2717 Parameter <5919 -5920> {} "filter";
2718 Method <5921 -5922 5924> {PUBLIC} "add_arrayType";
2719 Parameter <5923 -5924> {} "vertex";
2720 Method <5928 -5929> {PUBLIC} "remove_arrayType";
2721 WildcardType <5925 -5927> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
2722 Method <5930 -5931 5933> {PUBLIC} "remove_arrayType";
2723 Parameter <5932 -5933> {} "vertex";
2724 Method <5935 5938 -5939> {PUBLIC} "get_arrayType";
2725 TypeParameter <5934 -5935 -5937> n "V" "de.uni_koblenz.jgralab.jex.schema.Type.get_arrayType().V";
2726 ParametrizedType <5936 5937 -5938 5942 5943 -5944> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.Type.get_arrayType|V>";
2727 Method <5941 5944 -5945 5949> {PUBLIC} "get_arrayType";
2728 TypeParameter <5940 -5941 -5943 -5947> n "V" "de.uni_koblenz.jgralab.jex.schema.Type.get_arrayType(VertexFilter<V>).V";
2729 ParametrizedType <5946 5947 -5948> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.Type.get_arrayType|V>";
2730 Parameter <5948 -5949> {} "filter";
2731 Method <5952 -5953> {PUBLIC} "getHasUpperBoundIncidences";
2732 Method <5956 -5957 5959> {PUBLIC} "getHasUpperBoundIncidences";
2733 Parameter <5958 -5959> {} "direction";
2734 Method <5962 -5963> {PUBLIC} "getHasTypeIncidences";
2735 Method <5966 -5967 5969> {PUBLIC} "getHasTypeIncidences";
2736 Parameter <5968 -5969> {} "direction";
2737 Method <5972 -5973> {PUBLIC} "getHasTypeArgIncidences";
2738 Method <5976 -5977 5979> {PUBLIC} "getHasTypeArgIncidences";
2739 Parameter <5978 -5979> {} "direction";
2740 Method <5982 -5983> {PUBLIC} "getThrowsIncidences";
2741 Method <5986 -5987 5989> {PUBLIC} "getThrowsIncidences";
2742 Parameter <5988 -5989> {} "direction";
2743 Method <5992 -5993> {PUBLIC} "getHasElementTypeIncidences";
2744 Method <5996 -5997 5999> {PUBLIC} "getHasElementTypeIncidences";
2745 Parameter <5998 -5999> {} "direction";
2746 Method <6002 -6003> {PUBLIC} "getHasBoundIncidences";
2747 Method <6006 -6007 6009> {PUBLIC} "getHasBoundIncidences";
2748 Parameter <6008 -6009> {} "direction";
2749 Method <6012 -6013> {PUBLIC} "getHasLowerBoundIncidences";
2750 Method <6016 -6017 6019> {PUBLIC} "getHasLowerBoundIncidences";
2751 Parameter <6018 -6019> {} "direction";
2752 SourceFile <6022 6424> 472 "src/de/uni_koblenz/jgralab/jex/schema/TypeParameter.java";
2753 Field <6025 -6026> {PUBLIC FINAL STATIC} "VC";
2754 Method <6027 -6028> {PUBLIC} "getNextAbstractClassifier";
2755 Method <6029 -6030> {PUBLIC} "getNextMember";
2756 Method <6031 -6032> {PUBLIC} "getNextModifiableElement";
2757 Method <6033 -6034> {PUBLIC} "getNextNamedElement";
2758 Method <6035 -6036> {PUBLIC} "getNextQualifiedNamedElement";
2759 Method <6037 -6038> {PUBLIC} "getNextType";
2760 Method <6039 -6040> {PUBLIC} "getNextTypeParameter";
2761 Method <6041 -6042> {PUBLIC} "getNextTypeParametrizable";
2762 Method <6043 -6044> {PUBLIC} "getFirstHasTypeParamIncidence";
2763 Method <6045 -6046 6048> {PUBLIC} "getFirstHasTypeParamIncidence";
2764 Parameter <6047 -6048> {} "orientation";
2765 Method <6049 -6050> {PUBLIC} "getFirstHasBoundIncidence";
2766 Method <6051 -6052 6054> {PUBLIC} "getFirstHasBoundIncidence";
2767 Parameter <6053 -6054> {} "orientation";
2768 Method <6055 -6056 6058> {PUBLIC} "add_constructors";
2769 Parameter <6057 -6058> {} "vertex";
2770 Method <6062 -6063> {PUBLIC} "remove_constructors";
2771 WildcardType <6059 -6061> "? extends Constructor" "? extends de.uni_koblenz.jgralab.jex.schema.Constructor";
2772 Method <6064 -6065 6067> {PUBLIC} "remove_constructors";
2773 Parameter <6066 -6067> {} "vertex";
2774 Method <6069 6072 -6073> {PUBLIC} "get_constructors";
2775 TypeParameter <6068 -6069 -6071> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_constructors().V";
2776 ParametrizedType <6070 6071 -6072 6076 6077 -6078> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_constructors|V>";
2777 Method <6075 6078 -6079 6083> {PUBLIC} "get_constructors";
2778 TypeParameter <6074 -6075 -6077 -6081> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_constructors(VertexFilter<V>).V";
2779 ParametrizedType <6080 6081 -6082> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_constructors|V>";
2780 Parameter <6082 -6083> {} "filter";
2781 Method <6084 -6085 6087> {PUBLIC} "add_importers";
2782 Parameter <6086 -6087> {} "vertex";
2783 Method <6091 -6092> {PUBLIC} "remove_importers";
2784 WildcardType <6088 -6090> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
2785 Method <6093 -6094 6096> {PUBLIC} "remove_importers";
2786 Parameter <6095 -6096> {} "vertex";
2787 Method <6098 6101 -6102> {PUBLIC} "get_importers";
2788 TypeParameter <6097 -6098 -6100> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_importers().V";
2789 ParametrizedType <6099 6100 -6101 6105 6106 -6107> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_importers|V>";
2790 Method <6104 6107 -6108 6112> {PUBLIC} "get_importers";
2791 TypeParameter <6103 -6104 -6106 -6110> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_importers(VertexFilter<V>).V";
2792 ParametrizedType <6109 6110 -6111> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_importers|V>";
2793 Parameter <6111 -6112> {} "filter";
2794 Method <6113 -6114 6116> {PUBLIC} "add_fields";
2795 Parameter <6115 -6116> {} "vertex";
2796 Method <6120 -6121> {PUBLIC} "remove_fields";
2797 WildcardType <6117 -6119> "? extends Field" "? extends de.uni_koblenz.jgralab.jex.schema.Field";
2798 Method <6122 -6123 6125> {PUBLIC} "remove_fields";
2799 Parameter <6124 -6125> {} "vertex";
2800 Method <6127 6130 -6131> {PUBLIC} "get_fields";
2801 TypeParameter <6126 -6127 -6129> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_fields().V";
2802 ParametrizedType <6128 6129 -6130 6134 6135 -6136> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_fields|V>";
2803 Method <6133 6136 -6137 6141> {PUBLIC} "get_fields";
2804 TypeParameter <6132 -6133 -6135 -6139> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_fields(VertexFilter<V>).V";
2805 ParametrizedType <6138 6139 -6140> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_fields|V>";
2806 Parameter <6140 -6141> {} "filter";
2807 Method <6142 -6143 6145> {PUBLIC} "add_sourceFile";
2808 Parameter <6144 -6145> {} "vertex";
2809 Method <6149 -6150> {PUBLIC} "remove_sourceFile";
2810 WildcardType <6146 -6148> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
2811 Method <6151 -6152 6154> {PUBLIC} "remove_sourceFile";
2812 Parameter <6153 -6154> {} "vertex";
2813 Method <6155 -6156> {PUBLIC} "get_sourceFile";
2814 Method <6157 -6158 6160> {PUBLIC} "add_members";
2815 Parameter <6159 -6160> {} "vertex";
2816 Method <6164 -6165> {PUBLIC} "remove_members";
2817 WildcardType <6161 -6163> "? extends Member" "? extends de.uni_koblenz.jgralab.jex.schema.Member";
2818 Method <6166 -6167 6169> {PUBLIC} "remove_members";
2819 Parameter <6168 -6169> {} "vertex";
2820 Method <6171 6174 -6175> {PUBLIC} "get_members";
2821 TypeParameter <6170 -6171 -6173> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_members().V";
2822 ParametrizedType <6172 6173 -6174 6178 6179 -6180> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_members|V>";
2823 Method <6177 6180 -6181 6185> {PUBLIC} "get_members";
2824 TypeParameter <6176 -6177 -6179 -6183> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_members(VertexFilter<V>).V";
2825 ParametrizedType <6182 6183 -6184> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_members|V>";
2826 Parameter <6184 -6185> {} "filter";
2827 Method <6186 -6187 6189> {PUBLIC} "add_nestedClassifiers";
2828 Parameter <6188 -6189> {} "vertex";
2829 Method <6193 -6194> {PUBLIC} "remove_nestedClassifiers";
2830 WildcardType <6190 -6192> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
2831 Method <6195 -6196 6198> {PUBLIC} "remove_nestedClassifiers";
2832 Parameter <6197 -6198> {} "vertex";
2833 Method <6200 6203 -6204> {PUBLIC} "get_nestedClassifiers";
2834 TypeParameter <6199 -6200 -6202> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_nestedClassifiers().V";
2835 ParametrizedType <6201 6202 -6203 6207 6208 -6209> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_nestedClassifiers|V>";
2836 Method <6206 6209 -6210 6214> {PUBLIC} "get_nestedClassifiers";
2837 TypeParameter <6205 -6206 -6208 -6212> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_nestedClassifiers(VertexFilter<V>).V";
2838 ParametrizedType <6211 6212 -6213> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_nestedClassifiers|V>";
2839 Parameter <6213 -6214> {} "filter";
2840 Method <6215 -6216 6218> {PUBLIC} "add_subclasses";
2841 Parameter <6217 -6218> {} "vertex";
2842 Method <6222 -6223> {PUBLIC} "remove_subclasses";
2843 WildcardType <6219 -6221> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
2844 Method <6224 -6225 6227> {PUBLIC} "remove_subclasses";
2845 Parameter <6226 -6227> {} "vertex";
2846 Method <6229 6232 -6233> {PUBLIC} "get_subclasses";
2847 TypeParameter <6228 -6229 -6231> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_subclasses().V";
2848 ParametrizedType <6230 6231 -6232 6236 6237 -6238> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_subclasses|V>";
2849 Method <6235 6238 -6239 6243> {PUBLIC} "get_subclasses";
2850 TypeParameter <6234 -6235 -6237 -6241> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_subclasses(VertexFilter<V>).V";
2851 ParametrizedType <6240 6241 -6242> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_subclasses|V>";
2852 Parameter <6242 -6243> {} "filter";
2853 Method <6244 -6245 6247> {PUBLIC} "add_typeParams";
2854 Parameter <6246 -6247> {} "vertex";
2855 Method <6251 -6252> {PUBLIC} "remove_typeParams";
2856 WildcardType <6248 -6250> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
2857 Method <6253 -6254 6256> {PUBLIC} "remove_typeParams";
2858 Parameter <6255 -6256> {} "vertex";
2859 Method <6258 6261 -6262> {PUBLIC} "get_typeParams";
2860 TypeParameter <6257 -6258 -6260> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_typeParams().V";
2861 ParametrizedType <6259 6260 -6261 6265 6266 -6267> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_typeParams|V>";
2862 Method <6264 6267 -6268 6272> {PUBLIC} "get_typeParams";
2863 TypeParameter <6263 -6264 -6266 -6270> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_typeParams(VertexFilter<V>).V";
2864 ParametrizedType <6269 6270 -6271> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_typeParams|V>";
2865 Parameter <6271 -6272> {} "filter";
2866 Method <6273 -6274 6276> {PUBLIC} "add_implementors";
2867 Parameter <6275 -6276> {} "vertex";
2868 Method <6280 -6281> {PUBLIC} "remove_implementors";
2869 WildcardType <6277 -6279> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
2870 Method <6282 -6283 6285> {PUBLIC} "remove_implementors";
2871 Parameter <6284 -6285> {} "vertex";
2872 Method <6287 6290 -6291> {PUBLIC} "get_implementors";
2873 TypeParameter <6286 -6287 -6289> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_implementors().V";
2874 ParametrizedType <6288 6289 -6290 6294 6295 -6296> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_implementors|V>";
2875 Method <6293 6296 -6297 6301> {PUBLIC} "get_implementors";
2876 TypeParameter <6292 -6293 -6295 -6299> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_implementors(VertexFilter<V>).V";
2877 ParametrizedType <6298 6299 -6300> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_implementors|V>";
2878 Parameter <6300 -6301> {} "filter";
2879 Method <6302 -6303 6305> {PUBLIC} "add_methods";
2880 Parameter <6304 -6305> {} "vertex";
2881 Method <6309 -6310> {PUBLIC} "remove_methods";
2882 WildcardType <6306 -6308> "? extends Method" "? extends de.uni_koblenz.jgralab.jex.schema.Method";
2883 Method <6311 -6312 6314> {PUBLIC} "remove_methods";
2884 Parameter <6313 -6314> {} "vertex";
2885 Method <6316 6319 -6320> {PUBLIC} "get_methods";
2886 TypeParameter <6315 -6316 -6318> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_methods().V";
2887 ParametrizedType <6317 6318 -6319 6323 6324 -6325> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_methods|V>";
2888 Method <6322 6325 -6326 6330> {PUBLIC} "get_methods";
2889 TypeParameter <6321 -6322 -6324 -6328> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_methods(VertexFilter<V>).V";
2890 ParametrizedType <6327 6328 -6329> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_methods|V>";
2891 Parameter <6329 -6330> {} "filter";
2892 Method <6331 -6332 6334> {PUBLIC} "add_bounds";
2893 Parameter <6333 -6334> {} "vertex";
2894 Method <6338 -6339> {PUBLIC} "remove_bounds";
2895 WildcardType <6335 -6337> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
2896 Method <6340 -6341 6343> {PUBLIC} "remove_bounds";
2897 Parameter <6342 -6343> {} "vertex";
2898 Method <6345 6348 -6349> {PUBLIC} "get_bounds";
2899 TypeParameter <6344 -6345 -6347> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_bounds().V";
2900 ParametrizedType <6346 6347 -6348 6352 6353 -6354> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_bounds|V>";
2901 Method <6351 6354 -6355 6359> {PUBLIC} "get_bounds";
2902 TypeParameter <6350 -6351 -6353 -6357> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_bounds(VertexFilter<V>).V";
2903 ParametrizedType <6356 6357 -6358> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_bounds|V>";
2904 Parameter <6358 -6359> {} "filter";
2905 Method <6360 -6361 6363> {PUBLIC} "add_parent";
2906 Parameter <6362 -6363> {} "vertex";
2907 Method <6367 -6368> {PUBLIC} "remove_parent";
2908 WildcardType <6364 -6366> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
2909 Method <6369 -6370 6372> {PUBLIC} "remove_parent";
2910 Parameter <6371 -6372> {} "vertex";
2911 Method <6373 -6374> {PUBLIC} "get_parent";
2912 Method <6375 -6376 6378> {PUBLIC} "add_arrayType";
2913 Parameter <6377 -6378> {} "vertex";
2914 Method <6382 -6383> {PUBLIC} "remove_arrayType";
2915 WildcardType <6379 -6381> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
2916 Method <6384 -6385 6387> {PUBLIC} "remove_arrayType";
2917 Parameter <6386 -6387> {} "vertex";
2918 Method <6389 6392 -6393> {PUBLIC} "get_arrayType";
2919 TypeParameter <6388 -6389 -6391> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_arrayType().V";
2920 ParametrizedType <6390 6391 -6392 6396 6397 -6398> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_arrayType|V>";
2921 Method <6395 6398 -6399 6403> {PUBLIC} "get_arrayType";
2922 TypeParameter <6394 -6395 -6397 -6401> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_arrayType(VertexFilter<V>).V";
2923 ParametrizedType <6400 6401 -6402> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.TypeParameter.get_arrayType|V>";
2924 Parameter <6402 -6403> {} "filter";
2925 Method <6406 -6407> {PUBLIC} "getHasTypeParamIncidences";
2926 Method <6410 -6411 6413> {PUBLIC} "getHasTypeParamIncidences";
2927 Parameter <6412 -6413> {} "direction";
2928 Method <6416 -6417> {PUBLIC} "getHasBoundIncidences";
2929 Method <6420 -6421 6423> {PUBLIC} "getHasBoundIncidences";
2930 Parameter <6422 -6423> {} "direction";
2931 SourceFile <6426 6477> 71 "src/de/uni_koblenz/jgralab/jex/schema/TypeParametrizable.java";
2932 Field <6428 -6429> {PUBLIC FINAL STATIC} "VC";
2933 Method <6430 -6431> {PUBLIC} "getNextTypeParametrizable";
2934 Method <6432 -6433> {PUBLIC} "getFirstHasTypeParamIncidence";
2935 Method <6434 -6435 6437> {PUBLIC} "getFirstHasTypeParamIncidence";
2936 Parameter <6436 -6437> {} "orientation";
2937 Method <6438 -6439 6441> {PUBLIC} "add_typeParams";
2938 Parameter <6440 -6441> {} "vertex";
2939 Method <6445 -6446> {PUBLIC} "remove_typeParams";
2940 WildcardType <6442 -6444> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
2941 Method <6447 -6448 6450> {PUBLIC} "remove_typeParams";
2942 Parameter <6449 -6450> {} "vertex";
2943 Method <6452 6455 -6456> {PUBLIC} "get_typeParams";
2944 TypeParameter <6451 -6452 -6454> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParametrizable.get_typeParams().V";
2945 ParametrizedType <6453 6454 -6455 6459 6460 -6461> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.TypeParametrizable.get_typeParams|V>";
2946 Method <6458 6461 -6462 6466> {PUBLIC} "get_typeParams";
2947 TypeParameter <6457 -6458 -6460 -6464> n "V" "de.uni_koblenz.jgralab.jex.schema.TypeParametrizable.get_typeParams(VertexFilter<V>).V";
2948 ParametrizedType <6463 6464 -6465> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.TypeParametrizable.get_typeParams|V>";
2949 Parameter <6465 -6466> {} "filter";
2950 Method <6469 -6470> {PUBLIC} "getHasTypeParamIncidences";
2951 Method <6473 -6474 6476> {PUBLIC} "getHasTypeParamIncidences";
2952 Parameter <6475 -6476> {} "direction";
2953 SourceFile <6479 6519> 74 "src/de/uni_koblenz/jgralab/jex/schema/TypedElement.java";
2954 Field <6482 -6483> {PUBLIC FINAL STATIC} "VC";
2955 Method <6484 -6485> {PUBLIC} "getNextModifiableElement";
2956 Method <6486 -6487> {PUBLIC} "getNextTypedElement";
2957 Method <6488 -6489> {PUBLIC} "getFirstHasTypeIncidence";
2958 Method <6490 -6491 6493> {PUBLIC} "getFirstHasTypeIncidence";
2959 Parameter <6492 -6493> {} "orientation";
2960 Method <6494 -6495 6497> {PUBLIC} "add_type";
2961 Parameter <6496 -6497> {} "vertex";
2962 Method <6501 -6502> {PUBLIC} "remove_type";
2963 WildcardType <6498 -6500> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
2964 Method <6503 -6504 6506> {PUBLIC} "remove_type";
2965 Parameter <6505 -6506> {} "vertex";
2966 Method <6507 -6508> {PUBLIC} "get_type";
2967 Method <6511 -6512> {PUBLIC} "getHasTypeIncidences";
2968 Method <6515 -6516 6518> {PUBLIC} "getHasTypeIncidences";
2969 Parameter <6517 -6518> {} "direction";
2970 SourceFile <6521 6654> 191 "src/de/uni_koblenz/jgralab/jex/schema/WildcardType.java";
2971 Field <6524 -6525> {PUBLIC FINAL STATIC} "VC";
2972 Method <6526 -6527> {PUBLIC} "getNextNamedElement";
2973 Method <6528 -6529> {PUBLIC} "getNextQualifiedNamedElement";
2974 Method <6530 -6531> {PUBLIC} "getNextType";
2975 Method <6532 -6533> {PUBLIC} "getNextWildcardType";
2976 Method <6534 -6535> {PUBLIC} "getFirstHasUpperBoundIncidence";
2977 Method <6536 -6537 6539> {PUBLIC} "getFirstHasUpperBoundIncidence";
2978 Parameter <6538 -6539> {} "orientation";
2979 Method <6540 -6541> {PUBLIC} "getFirstHasLowerBoundIncidence";
2980 Method <6542 -6543 6545> {PUBLIC} "getFirstHasLowerBoundIncidence";
2981 Parameter <6544 -6545> {} "orientation";
2982 Method <6546 -6547 6549> {PUBLIC} "add_importers";
2983 Parameter <6548 -6549> {} "vertex";
2984 Method <6553 -6554> {PUBLIC} "remove_importers";
2985 WildcardType <6550 -6552> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
2986 Method <6555 -6556 6558> {PUBLIC} "remove_importers";
2987 Parameter <6557 -6558> {} "vertex";
2988 Method <6560 6563 -6564> {PUBLIC} "get_importers";
2989 TypeParameter <6559 -6560 -6562> n "V" "de.uni_koblenz.jgralab.jex.schema.WildcardType.get_importers().V";
2990 ParametrizedType <6561 6562 -6563 6567 6568 -6569> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.WildcardType.get_importers|V>";
2991 Method <6566 6569 -6570 6574> {PUBLIC} "get_importers";
2992 TypeParameter <6565 -6566 -6568 -6572> n "V" "de.uni_koblenz.jgralab.jex.schema.WildcardType.get_importers(VertexFilter<V>).V";
2993 ParametrizedType <6571 6572 -6573> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.WildcardType.get_importers|V>";
2994 Parameter <6573 -6574> {} "filter";
2995 Method <6575 -6576 6578> {PUBLIC} "add_upperBound";
2996 Parameter <6577 -6578> {} "vertex";
2997 Method <6582 -6583> {PUBLIC} "remove_upperBound";
2998 WildcardType <6579 -6581> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
2999 Method <6584 -6585 6587> {PUBLIC} "remove_upperBound";
3000 Parameter <6586 -6587> {} "vertex";
3001 Method <6588 -6589> {PUBLIC} "get_upperBound";
3002 Method <6590 -6591 6593> {PUBLIC} "add_arrayType";
3003 Parameter <6592 -6593> {} "vertex";
3004 Method <6597 -6598> {PUBLIC} "remove_arrayType";
3005 WildcardType <6594 -6596> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
3006 Method <6599 -6600 6602> {PUBLIC} "remove_arrayType";
3007 Parameter <6601 -6602> {} "vertex";
3008 Method <6604 6607 -6608> {PUBLIC} "get_arrayType";
3009 TypeParameter <6603 -6604 -6606> n "V" "de.uni_koblenz.jgralab.jex.schema.WildcardType.get_arrayType().V";
3010 ParametrizedType <6605 6606 -6607 6611 6612 -6613> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.WildcardType.get_arrayType|V>";
3011 Method <6610 6613 -6614 6618> {PUBLIC} "get_arrayType";
3012 TypeParameter <6609 -6610 -6612 -6616> n "V" "de.uni_koblenz.jgralab.jex.schema.WildcardType.get_arrayType(VertexFilter<V>).V";
3013 ParametrizedType <6615 6616 -6617> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.WildcardType.get_arrayType|V>";
3014 Parameter <6617 -6618> {} "filter";
3015 Method <6619 -6620 6622> {PUBLIC} "add_lowerBound";
3016 Parameter <6621 -6622> {} "vertex";
3017 Method <6626 -6627> {PUBLIC} "remove_lowerBound";
3018 WildcardType <6623 -6625> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
3019 Method <6628 -6629 6631> {PUBLIC} "remove_lowerBound";
3020 Parameter <6630 -6631> {} "vertex";
3021 Method <6632 -6633> {PUBLIC} "get_lowerBound";
3022 Method <6636 -6637> {PUBLIC} "getHasUpperBoundIncidences";
3023 Method <6640 -6641 6643> {PUBLIC} "getHasUpperBoundIncidences";
3024 Parameter <6642 -6643> {} "direction";
3025 Method <6646 -6647> {PUBLIC} "getHasLowerBoundIncidences";
3026 Method <6650 -6651 6653> {PUBLIC} "getHasLowerBoundIncidences";
3027 Parameter <6652 -6653> {} "direction";
3028 SourceFile <6658 6659 6660 6661 6662 6663 6664 6873> 406 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/AnnotationElementImpl.java";
3029 Package <-6656 6657> "impl" "de.uni_koblenz.jgralab.jex.schema.impl";
3030 Package <-6657 6874 7696 7990 8767 9089 9176 9262 9358 9454 9550 9646 9742 9837 9932 10099 10921 11008 11225 11312 11399 11486 11573 11660 11747 11834 11921 12008 12095 12190 12967 12975 13972 14328 14546 14745 15520 15799 15856 15912 15978 16044 16110 16176 16242 16307 16370 16427 16484 16541 16598 16655 16712 16769 16826 16883 16940 16997 17060 17117 17285 17372 18116 18417> "std" "de.uni_koblenz.jgralab.jex.schema.impl.std";
3031 Class <-6658 -6875 -7697 -7991 -8768 -9933 -10100 -11009 -12191 -13973 -14329 -14547 -14746 -15521 -17118 -17373 -18117> {PUBLIC} "IncidenceIterable" "de.uni_koblenz.jgralab.impl.IncidenceIterable";
3032 Class <-6659 -6665 -6876 -6882 -7698 -7704 -7992 -7998 -8769 -8775 -9934 -9940 -10101 -10107 -11010 -11016 -12192 -12198 -13974 -13980 -14330 -14336 -14548 -14554 -14747 -14753 -15522 -15528 -17119 -17125 -17374 -17380 -18118 -18124> {ABSTRACT} "VertexImpl" "de.uni_koblenz.jgralab.impl.std.VertexImpl";
3033 Class <-6663 -6880 -7702 -7996 -8773 -9095 -9182 -9268 -9364 -9460 -9556 -9652 -9748 -9843 -9938 -10105 -10927 -11014 -11231 -11318 -11405 -11492 -11579 -11666 -11753 -11840 -11927 -12014 -12101 -12196 -12981 -13978 -14334 -14552 -14751 -15526 -17123 -17291 -17378 -18122> {PUBLIC} "NoSuchAttributeException" "de.uni_koblenz.jgralab.exception.NoSuchAttributeException";
3034 Class <-6664 -6733 -6738 -6881 -6957 -6962 -7703 -7773 -7778 -7997 -8073 -8078 -8774 -8842 -8847 -9099 -9148 -9153 -9185 -9234 -9239 -9272 -9322 -9327 -9368 -9418 -9423 -9464 -9514 -9519 -9560 -9610 -9615 -9656 -9706 -9711 -9751 -9801 -9806 -9847 -9904 -9909 -9939 -9993 -9998 -10106 -10182 -10187 -10931 -10980 -10985 -11015 -11084 -11089 -11235 -11284 -11289 -11322 -11371 -11376 -11409 -11458 -11463 -11496 -11545 -11550 -11583 -11632 -11637 -11670 -11719 -11724 -11757 -11806 -11811 -11844 -11893 -11898 -11931 -11980 -11985 -12018 -12067 -12072 -12105 -12162 -12167 -12197 -12273 -12278 -12982 -13038 -13043 -13979 -14048 -14053 -14335 -14397 -14402 -14553 -14622 -14627 -14752 -14828 -14833 -15527 -15597 -15602 -15808 -15836 -15841 -15864 -15892 -15897 -15921 -15950 -15955 -15987 -16016 -16021 -16053 -16082 -16087 -16119 -16148 -16153 -16185 -16214 -16219 -16250 -16279 -16284 -16316 -16350 -16355 -16379 -16407 -16412 -16436 -16464 -16469 -16493 -16521 -16526 -16550 -16578 -16583 -16607 -16635 -16640 -16664 -16692 -16697 -16721 -16749 -16754 -16778 -16806 -16811 -16835 -16863 -16868 -16892 -16920 -16925 -16949 -16977 -16982 -17006 -17040 -17045 -17069 -17097 -17102 -17124 -17185 -17190 -17295 -17344 -17349 -17379 -17455 -17460 -18123 -18185 -18190> {PUBLIC} "IOException" "java.io.IOException";
3035 Class <6665 6666 6667 6668 6669 6673 6675 6676 6682 6687 6690 6695 6703 6705 6711 6713 6717 6722 6729 6735 6741 6743 6745 6747 6749 6751 6753 6757 6759 6763 6765 6769 6771 6775 6782 6784 6792 6798 6804 6811 6813 6817 6819 6826 6828 6832 6836 6840 6846 6850 6856 6860 6866 6870 -6873 -6874> {PUBLIC} "AnnotationElementImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationElementImpl";
3036 Field <6672 -6673> {PROTECTED} "_modifiers";
3037 Field <6674 -6675> {PROTECTED} "_name";
3038 Constructor <-6676 6678 6680> {PUBLIC} "AnnotationElementImpl";
3039 Parameter <6677 -6678> {} "id";
3040 Parameter <6679 -6680> {} "g";
3041 Method <6681 -6682> {PUBLIC FINAL} "getAttributedElementClass";
3042 Method <6686 -6687> {PUBLIC FINAL} "getSchemaClass";
3043 Class <-6684 -6902 -7722 -8018 -8793 -9115 -9201 -9289 -9385 -9481 -9577 -9673 -9768 -9865 -9954 -10127 -10947 -11035 -11251 -11338 -11425 -11512 -11599 -11686 -11773 -11860 -11947 -12034 -12123 -12218 -13005 -13999 -14352 -14573 -14773 -15546 -17140 -17311 -17400 -18140> {FINAL} "Class" "java.lang.Class";
3044 WildcardType <6683 -6685> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
3045 ParametrizedType <6684 6685 -6686 6902 6903 -6904 7722 7723 -7724 8018 8019 -8020 8793 8794 -8795 9954 9955 -9956 10127 10128 -10129 11035 11036 -11037 12218 12219 -12220 13999 14000 -14001 14352 14353 -14354 14573 14574 -14575 14773 14774 -14775 15546 15547 -15548 17140 17141 -17142 17400 17401 -17402 18140 18141 -18142> n "Class<? extends Vertex>" "java.lang.Class<? extends de.uni_koblenz.jgralab.Vertex>";
3046 Method <6688 6689 -6690 6692> {PUBLIC} "getAttribute";
3047 Annotation <> {PUBLIC} "SuppressWarnings" "java.lang.SuppressWarnings";
3048 TypeParameter <-6688 -6689> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationElementImpl.getAttribute(String).T";
3049 Parameter <6691 -6692> {} "attributeName";
3050 Method <6693 6694 -6695 6697 6699> {PUBLIC} "setAttribute";
3051 TypeParameter <-6693 -6698> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationElementImpl.setAttribute(String,T).T";
3052 Parameter <6696 -6697> {} "attributeName";
3053 Parameter <6698 -6699> {} "data";
3054 Method <6702 -6703> {PUBLIC} "get_modifiers";
3055 Method <6704 -6705 6709> {PUBLIC} "set_modifiers";
3056 Parameter <6708 -6709> {} "_modifiers";
3057 Method <6710 -6711> {PUBLIC} "get_name";
3058 Method <6712 -6713 6715> {PUBLIC} "set_name";
3059 Parameter <6714 -6715> {} "_name";
3060 Method <6716 -6717 6719 6720> {PUBLIC} "readAttributeValues";
3061 Parameter <6718 -6719> {} "io";
3062 Method <6721 -6722 6724 6726 6727> {PUBLIC} "readAttributeValueFromString";
3063 Parameter <6723 -6724> {} "attributeName";
3064 Parameter <6725 -6726> {} "value";
3065 Method <6728 -6729 6731 6732 6733> {PUBLIC} "writeAttributeValues";
3066 Parameter <6730 -6731> {} "io";
3067 Method <6734 -6735 6737 6738 6739> {PUBLIC} "writeAttributeValueToString";
3068 Parameter <6736 -6737> {} "attributeName";
3069 Method <6740 -6741> {PUBLIC} "getNextAnnotationElement";
3070 Method <6742 -6743> {PUBLIC} "getNextMember";
3071 Method <6744 -6745> {PUBLIC} "getNextModifiableElement";
3072 Method <6746 -6747> {PUBLIC} "getNextNamedElement";
3073 Method <6748 -6749> {PUBLIC} "getNextTypedElement";
3074 Method <6750 -6751> {PUBLIC} "getFirstHasTypeIncidence";
3075 Method <6752 -6753 6755> {PUBLIC} "getFirstHasTypeIncidence";
3076 Parameter <6754 -6755> {} "orientation";
3077 Method <6756 -6757> {PUBLIC} "getFirstDeclaresAnnotationElementIncidence";
3078 Method <6758 -6759 6761> {PUBLIC} "getFirstDeclaresAnnotationElementIncidence";
3079 Parameter <6760 -6761> {} "orientation";
3080 Method <6762 -6763> {PUBLIC} "getFirstImportsIncidence";
3081 Method <6764 -6765 6767> {PUBLIC} "getFirstImportsIncidence";
3082 Parameter <6766 -6767> {} "orientation";
3083 Method <6768 -6769> {PUBLIC} "getFirstDeclaresIncidence";
3084 Method <6770 -6771 6773> {PUBLIC} "getFirstDeclaresIncidence";
3085 Parameter <6772 -6773> {} "orientation";
3086 Method <6774 -6775 6777> {PUBLIC} "add_importers";
3087 Parameter <6776 -6777> {} "vertex";
3088 Method <6781 -6782> {PUBLIC} "remove_importers";
3089 WildcardType <6778 -6780> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
3090 Method <6783 -6784 6786> {PUBLIC} "remove_importers";
3091 Parameter <6785 -6786> {} "vertex";
3092 Method <6788 6791 -6792> {PUBLIC} "get_importers";
3093 TypeParameter <6787 -6788 -6790> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationElementImpl.get_importers().V";
3094 ParametrizedType <6789 6790 -6791 6795 6796 -6797> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationElementImpl.get_importers|V>";
3095 Method <6794 6797 -6798 6802> {PUBLIC} "get_importers";
3096 TypeParameter <6793 -6794 -6796 -6800> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationElementImpl.get_importers(VertexFilter<V>).V";
3097 ParametrizedType <6799 6800 -6801> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationElementImpl.get_importers|V>";
3098 Parameter <6801 -6802> {} "filter";
3099 Method <6803 -6804 6806> {PUBLIC} "add_parent";
3100 Parameter <6805 -6806> {} "vertex";
3101 Method <6810 -6811> {PUBLIC} "remove_parent";
3102 WildcardType <6807 -6809> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
3103 Method <6812 -6813 6815> {PUBLIC} "remove_parent";
3104 Parameter <6814 -6815> {} "vertex";
3105 Method <6816 -6817> {PUBLIC} "get_parent";
3106 Method <6818 -6819 6821> {PUBLIC} "add_type";
3107 Parameter <6820 -6821> {} "vertex";
3108 Method <6825 -6826> {PUBLIC} "remove_type";
3109 WildcardType <6822 -6824> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
3110 Method <6827 -6828 6830> {PUBLIC} "remove_type";
3111 Parameter <6829 -6830> {} "vertex";
3112 Method <6831 -6832> {PUBLIC} "get_type";
3113 Method <6835 -6836> {PUBLIC} "getHasTypeIncidences";
3114 Method <6839 -6840 6842> {PUBLIC} "getHasTypeIncidences";
3115 Parameter <6841 -6842> {} "direction";
3116 Method <6845 -6846> {PUBLIC} "getDeclaresAnnotationElementIncidences";
3117 Method <6849 -6850 6852> {PUBLIC} "getDeclaresAnnotationElementIncidences";
3118 Parameter <6851 -6852> {} "direction";
3119 Method <6855 -6856> {PUBLIC} "getImportsIncidences";
3120 Method <6859 -6860 6862> {PUBLIC} "getImportsIncidences";
3121 Parameter <6861 -6862> {} "direction";
3122 Method <6865 -6866> {PUBLIC} "getDeclaresIncidences";
3123 Method <6869 -6870 6872> {PUBLIC} "getDeclaresIncidences";
3124 Parameter <6871 -6872> {} "direction";
3125 SourceFile <6875 6876 6877 6878 6879 6880 6881 7695> 1234 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/AnnotationImpl.java";
3126 Class <6882 6883 6884 6885 6889 6891 6893 6894 6900 6905 6908 6913 6921 6923 6929 6931 6935 6937 6941 6946 6953 6959 6965 6967 6969 6971 6973 6975 6977 6979 6981 6983 6985 6989 6991 6995 6997 7001 7003 7007 7009 7013 7015 7019 7021 7025 7027 7031 7033 7037 7039 7043 7045 7049 7051 7055 7057 7061 7063 7067 7069 7073 7075 7079 7081 7085 7087 7091 7093 7097 7099 7103 7110 7112 7120 7126 7132 7139 7141 7149 7155 7161 7168 7170 7178 7184 7190 7197 7199 7207 7213 7219 7226 7228 7232 7234 7241 7243 7251 7257 7263 7270 7272 7280 7286 7292 7299 7301 7309 7315 7321 7328 7330 7338 7344 7350 7357 7359 7363 7365 7372 7374 7382 7388 7394 7401 7403 7411 7417 7423 7430 7432 7440 7446 7452 7459 7461 7465 7467 7474 7476 7484 7490 7498 7502 7508 7512 7518 7522 7528 7532 7538 7542 7548 7552 7558 7562 7568 7572 7578 7582 7588 7592 7598 7602 7608 7612 7618 7622 7628 7632 7638 7642 7648 7652 7658 7662 7668 7672 7678 7682 7688 7692 -7695 -7696> {PUBLIC} "AnnotationImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl";
3127 Field <6888 -6889> {PROTECTED} "_modifiers";
3128 Field <6890 -6891> {PROTECTED} "_name";
3129 Field <6892 -6893> {PROTECTED} "_qualifiedName";
3130 Constructor <-6894 6896 6898> {PUBLIC} "AnnotationImpl";
3131 Parameter <6895 -6896> {} "id";
3132 Parameter <6897 -6898> {} "g";
3133 Method <6899 -6900> {PUBLIC FINAL} "getAttributedElementClass";
3134 Method <6904 -6905> {PUBLIC FINAL} "getSchemaClass";
3135 WildcardType <6901 -6903> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
3136 Method <6906 6907 -6908 6910> {PUBLIC} "getAttribute";
3137 TypeParameter <-6906 -6907> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.getAttribute(String).T";
3138 Parameter <6909 -6910> {} "attributeName";
3139 Method <6911 6912 -6913 6915 6917> {PUBLIC} "setAttribute";
3140 TypeParameter <-6911 -6916> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.setAttribute(String,T).T";
3141 Parameter <6914 -6915> {} "attributeName";
3142 Parameter <6916 -6917> {} "data";
3143 Method <6920 -6921> {PUBLIC} "get_modifiers";
3144 Method <6922 -6923 6927> {PUBLIC} "set_modifiers";
3145 Parameter <6926 -6927> {} "_modifiers";
3146 Method <6928 -6929> {PUBLIC} "get_name";
3147 Method <6930 -6931 6933> {PUBLIC} "set_name";
3148 Parameter <6932 -6933> {} "_name";
3149 Method <6934 -6935> {PUBLIC} "get_qualifiedName";
3150 Method <6936 -6937 6939> {PUBLIC} "set_qualifiedName";
3151 Parameter <6938 -6939> {} "_qualifiedName";
3152 Method <6940 -6941 6943 6944> {PUBLIC} "readAttributeValues";
3153 Parameter <6942 -6943> {} "io";
3154 Method <6945 -6946 6948 6950 6951> {PUBLIC} "readAttributeValueFromString";
3155 Parameter <6947 -6948> {} "attributeName";
3156 Parameter <6949 -6950> {} "value";
3157 Method <6952 -6953 6955 6956 6957> {PUBLIC} "writeAttributeValues";
3158 Parameter <6954 -6955> {} "io";
3159 Method <6958 -6959 6961 6962 6963> {PUBLIC} "writeAttributeValueToString";
3160 Parameter <6960 -6961> {} "attributeName";
3161 Method <6964 -6965> {PUBLIC} "getNextAbstractClassifier";
3162 Method <6966 -6967> {PUBLIC} "getNextAnnotation";
3163 Method <6968 -6969> {PUBLIC} "getNextClassifier";
3164 Method <6970 -6971> {PUBLIC} "getNextMember";
3165 Method <6972 -6973> {PUBLIC} "getNextModifiableElement";
3166 Method <6974 -6975> {PUBLIC} "getNextNamedElement";
3167 Method <6976 -6977> {PUBLIC} "getNextQualifiedNamedElement";
3168 Method <6978 -6979> {PUBLIC} "getNextType";
3169 Method <6980 -6981> {PUBLIC} "getNextTypeParametrizable";
3170 Method <6982 -6983> {PUBLIC} "getFirstDefinesIncidence";
3171 Method <6984 -6985 6987> {PUBLIC} "getFirstDefinesIncidence";
3172 Parameter <6986 -6987> {} "orientation";
3173 Method <6988 -6989> {PUBLIC} "getFirstHasUpperBoundIncidence";
3174 Method <6990 -6991 6993> {PUBLIC} "getFirstHasUpperBoundIncidence";
3175 Parameter <6992 -6993> {} "orientation";
3176 Method <6994 -6995> {PUBLIC} "getFirstContainsClassifierIncidence";
3177 Method <6996 -6997 6999> {PUBLIC} "getFirstContainsClassifierIncidence";
3178 Parameter <6998 -6999> {} "orientation";
3179 Method <7000 -7001> {PUBLIC} "getFirstHasTypeArgIncidence";
3180 Method <7002 -7003 7005> {PUBLIC} "getFirstHasTypeArgIncidence";
3181 Parameter <7004 -7005> {} "orientation";
3182 Method <7006 -7007> {PUBLIC} "getFirstDeclaresMethodIncidence";
3183 Method <7008 -7009 7011> {PUBLIC} "getFirstDeclaresMethodIncidence";
3184 Parameter <7010 -7011> {} "orientation";
3185 Method <7012 -7013> {PUBLIC} "getFirstHasElementTypeIncidence";
3186 Method <7014 -7015 7017> {PUBLIC} "getFirstHasElementTypeIncidence";
3187 Parameter <7016 -7017> {} "orientation";
3188 Method <7018 -7019> {PUBLIC} "getFirstThrowsIncidence";
3189 Method <7020 -7021 7023> {PUBLIC} "getFirstThrowsIncidence";
3190 Parameter <7022 -7023> {} "orientation";
3191 Method <7024 -7025> {PUBLIC} "getFirstImportsIncidence";
3192 Method <7026 -7027 7029> {PUBLIC} "getFirstImportsIncidence";
3193 Parameter <7028 -7029> {} "orientation";
3194 Method <7030 -7031> {PUBLIC} "getFirstHasBoundIncidence";
3195 Method <7032 -7033 7035> {PUBLIC} "getFirstHasBoundIncidence";
3196 Parameter <7034 -7035> {} "orientation";
3197 Method <7036 -7037> {PUBLIC} "getFirstHasLowerBoundIncidence";
3198 Method <7038 -7039 7041> {PUBLIC} "getFirstHasLowerBoundIncidence";
3199 Parameter <7040 -7041> {} "orientation";
3200 Method <7042 -7043> {PUBLIC} "getFirstDeclaresIncidence";
3201 Method <7044 -7045 7047> {PUBLIC} "getFirstDeclaresIncidence";
3202 Parameter <7046 -7047> {} "orientation";
3203 Method <7048 -7049> {PUBLIC} "getFirstDeclaresConstructorIncidence";
3204 Method <7050 -7051 7053> {PUBLIC} "getFirstDeclaresConstructorIncidence";
3205 Parameter <7052 -7053> {} "orientation";
3206 Method <7054 -7055> {PUBLIC} "getFirstHasGenericTypeIncidence";
3207 Method <7056 -7057 7059> {PUBLIC} "getFirstHasGenericTypeIncidence";
3208 Parameter <7058 -7059> {} "orientation";
3209 Method <7060 -7061> {PUBLIC} "getFirstExtendsIncidence";
3210 Method <7062 -7063 7065> {PUBLIC} "getFirstExtendsIncidence";
3211 Parameter <7064 -7065> {} "orientation";
3212 Method <7066 -7067> {PUBLIC} "getFirstImplementsIncidence";
3213 Method <7068 -7069 7071> {PUBLIC} "getFirstImplementsIncidence";
3214 Parameter <7070 -7071> {} "orientation";
3215 Method <7072 -7073> {PUBLIC} "getFirstHasTypeIncidence";
3216 Method <7074 -7075 7077> {PUBLIC} "getFirstHasTypeIncidence";
3217 Parameter <7076 -7077> {} "orientation";
3218 Method <7078 -7079> {PUBLIC} "getFirstDeclaresNestedClassifierIncidence";
3219 Method <7080 -7081 7083> {PUBLIC} "getFirstDeclaresNestedClassifierIncidence";
3220 Parameter <7082 -7083> {} "orientation";
3221 Method <7084 -7085> {PUBLIC} "getFirstHasTypeParamIncidence";
3222 Method <7086 -7087 7089> {PUBLIC} "getFirstHasTypeParamIncidence";
3223 Parameter <7088 -7089> {} "orientation";
3224 Method <7090 -7091> {PUBLIC} "getFirstDeclaresAnnotationElementIncidence";
3225 Method <7092 -7093 7095> {PUBLIC} "getFirstDeclaresAnnotationElementIncidence";
3226 Parameter <7094 -7095> {} "orientation";
3227 Method <7096 -7097> {PUBLIC} "getFirstDeclaresFieldIncidence";
3228 Method <7098 -7099 7101> {PUBLIC} "getFirstDeclaresFieldIncidence";
3229 Parameter <7100 -7101> {} "orientation";
3230 Method <7102 -7103 7105> {PUBLIC} "add_constructors";
3231 Parameter <7104 -7105> {} "vertex";
3232 Method <7109 -7110> {PUBLIC} "remove_constructors";
3233 WildcardType <7106 -7108> "? extends Constructor" "? extends de.uni_koblenz.jgralab.jex.schema.Constructor";
3234 Method <7111 -7112 7114> {PUBLIC} "remove_constructors";
3235 Parameter <7113 -7114> {} "vertex";
3236 Method <7116 7119 -7120> {PUBLIC} "get_constructors";
3237 TypeParameter <7115 -7116 -7118> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_constructors().V";
3238 ParametrizedType <7117 7118 -7119 7123 7124 -7125> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_constructors|V>";
3239 Method <7122 7125 -7126 7130> {PUBLIC} "get_constructors";
3240 TypeParameter <7121 -7122 -7124 -7128> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_constructors(VertexFilter<V>).V";
3241 ParametrizedType <7127 7128 -7129> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_constructors|V>";
3242 Parameter <7129 -7130> {} "filter";
3243 Method <7131 -7132 7134> {PUBLIC} "add_importers";
3244 Parameter <7133 -7134> {} "vertex";
3245 Method <7138 -7139> {PUBLIC} "remove_importers";
3246 WildcardType <7135 -7137> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
3247 Method <7140 -7141 7143> {PUBLIC} "remove_importers";
3248 Parameter <7142 -7143> {} "vertex";
3249 Method <7145 7148 -7149> {PUBLIC} "get_importers";
3250 TypeParameter <7144 -7145 -7147> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_importers().V";
3251 ParametrizedType <7146 7147 -7148 7152 7153 -7154> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_importers|V>";
3252 Method <7151 7154 -7155 7159> {PUBLIC} "get_importers";
3253 TypeParameter <7150 -7151 -7153 -7157> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_importers(VertexFilter<V>).V";
3254 ParametrizedType <7156 7157 -7158> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_importers|V>";
3255 Parameter <7158 -7159> {} "filter";
3256 Method <7160 -7161 7163> {PUBLIC} "add_annotationElements";
3257 Parameter <7162 -7163> {} "vertex";
3258 Method <7167 -7168> {PUBLIC} "remove_annotationElements";
3259 WildcardType <7164 -7166> "? extends AnnotationElement" "? extends de.uni_koblenz.jgralab.jex.schema.AnnotationElement";
3260 Method <7169 -7170 7172> {PUBLIC} "remove_annotationElements";
3261 Parameter <7171 -7172> {} "vertex";
3262 Method <7174 7177 -7178> {PUBLIC} "get_annotationElements";
3263 TypeParameter <7173 -7174 -7176> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_annotationElements().V";
3264 ParametrizedType <7175 7176 -7177 7181 7182 -7183> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_annotationElements|V>";
3265 Method <7180 7183 -7184 7188> {PUBLIC} "get_annotationElements";
3266 TypeParameter <7179 -7180 -7182 -7186> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_annotationElements(VertexFilter<V>).V";
3267 ParametrizedType <7185 7186 -7187> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_annotationElements|V>";
3268 Parameter <7187 -7188> {} "filter";
3269 Method <7189 -7190 7192> {PUBLIC} "add_fields";
3270 Parameter <7191 -7192> {} "vertex";
3271 Method <7196 -7197> {PUBLIC} "remove_fields";
3272 WildcardType <7193 -7195> "? extends Field" "? extends de.uni_koblenz.jgralab.jex.schema.Field";
3273 Method <7198 -7199 7201> {PUBLIC} "remove_fields";
3274 Parameter <7200 -7201> {} "vertex";
3275 Method <7203 7206 -7207> {PUBLIC} "get_fields";
3276 TypeParameter <7202 -7203 -7205> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_fields().V";
3277 ParametrizedType <7204 7205 -7206 7210 7211 -7212> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_fields|V>";
3278 Method <7209 7212 -7213 7217> {PUBLIC} "get_fields";
3279 TypeParameter <7208 -7209 -7211 -7215> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_fields(VertexFilter<V>).V";
3280 ParametrizedType <7214 7215 -7216> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_fields|V>";
3281 Parameter <7216 -7217> {} "filter";
3282 Method <7218 -7219 7221> {PUBLIC} "add_sourceFile";
3283 Parameter <7220 -7221> {} "vertex";
3284 Method <7225 -7226> {PUBLIC} "remove_sourceFile";
3285 WildcardType <7222 -7224> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
3286 Method <7227 -7228 7230> {PUBLIC} "remove_sourceFile";
3287 Parameter <7229 -7230> {} "vertex";
3288 Method <7231 -7232> {PUBLIC} "get_sourceFile";
3289 Method <7233 -7234 7236> {PUBLIC} "add_members";
3290 Parameter <7235 -7236> {} "vertex";
3291 Method <7240 -7241> {PUBLIC} "remove_members";
3292 WildcardType <7237 -7239> "? extends Member" "? extends de.uni_koblenz.jgralab.jex.schema.Member";
3293 Method <7242 -7243 7245> {PUBLIC} "remove_members";
3294 Parameter <7244 -7245> {} "vertex";
3295 Method <7247 7250 -7251> {PUBLIC} "get_members";
3296 TypeParameter <7246 -7247 -7249> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_members().V";
3297 ParametrizedType <7248 7249 -7250 7254 7255 -7256> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_members|V>";
3298 Method <7253 7256 -7257 7261> {PUBLIC} "get_members";
3299 TypeParameter <7252 -7253 -7255 -7259> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_members(VertexFilter<V>).V";
3300 ParametrizedType <7258 7259 -7260> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_members|V>";
3301 Parameter <7260 -7261> {} "filter";
3302 Method <7262 -7263 7265> {PUBLIC} "add_subclasses";
3303 Parameter <7264 -7265> {} "vertex";
3304 Method <7269 -7270> {PUBLIC} "remove_subclasses";
3305 WildcardType <7266 -7268> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
3306 Method <7271 -7272 7274> {PUBLIC} "remove_subclasses";
3307 Parameter <7273 -7274> {} "vertex";
3308 Method <7276 7279 -7280> {PUBLIC} "get_subclasses";
3309 TypeParameter <7275 -7276 -7278> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_subclasses().V";
3310 ParametrizedType <7277 7278 -7279 7283 7284 -7285> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_subclasses|V>";
3311 Method <7282 7285 -7286 7290> {PUBLIC} "get_subclasses";
3312 TypeParameter <7281 -7282 -7284 -7288> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_subclasses(VertexFilter<V>).V";
3313 ParametrizedType <7287 7288 -7289> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_subclasses|V>";
3314 Parameter <7289 -7290> {} "filter";
3315 Method <7291 -7292 7294> {PUBLIC} "add_interfaces";
3316 Parameter <7293 -7294> {} "vertex";
3317 Method <7298 -7299> {PUBLIC} "remove_interfaces";
3318 WildcardType <7295 -7297> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
3319 Method <7300 -7301 7303> {PUBLIC} "remove_interfaces";
3320 Parameter <7302 -7303> {} "vertex";
3321 Method <7305 7308 -7309> {PUBLIC} "get_interfaces";
3322 TypeParameter <7304 -7305 -7307> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_interfaces().V";
3323 ParametrizedType <7306 7307 -7308 7312 7313 -7314> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_interfaces|V>";
3324 Method <7311 7314 -7315 7319> {PUBLIC} "get_interfaces";
3325 TypeParameter <7310 -7311 -7313 -7317> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_interfaces(VertexFilter<V>).V";
3326 ParametrizedType <7316 7317 -7318> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_interfaces|V>";
3327 Parameter <7318 -7319> {} "filter";
3328 Method <7320 -7321 7323> {PUBLIC} "add_nestedClassifiers";
3329 Parameter <7322 -7323> {} "vertex";
3330 Method <7327 -7328> {PUBLIC} "remove_nestedClassifiers";
3331 WildcardType <7324 -7326> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
3332 Method <7329 -7330 7332> {PUBLIC} "remove_nestedClassifiers";
3333 Parameter <7331 -7332> {} "vertex";
3334 Method <7334 7337 -7338> {PUBLIC} "get_nestedClassifiers";
3335 TypeParameter <7333 -7334 -7336> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_nestedClassifiers().V";
3336 ParametrizedType <7335 7336 -7337 7341 7342 -7343> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_nestedClassifiers|V>";
3337 Method <7340 7343 -7344 7348> {PUBLIC} "get_nestedClassifiers";
3338 TypeParameter <7339 -7340 -7342 -7346> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_nestedClassifiers(VertexFilter<V>).V";
3339 ParametrizedType <7345 7346 -7347> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_nestedClassifiers|V>";
3340 Parameter <7347 -7348> {} "filter";
3341 Method <7349 -7350 7352> {PUBLIC} "add_superclass";
3342 Parameter <7351 -7352> {} "vertex";
3343 Method <7356 -7357> {PUBLIC} "remove_superclass";
3344 WildcardType <7353 -7355> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
3345 Method <7358 -7359 7361> {PUBLIC} "remove_superclass";
3346 Parameter <7360 -7361> {} "vertex";
3347 Method <7362 -7363> {PUBLIC} "get_superclass";
3348 Method <7364 -7365 7367> {PUBLIC} "add_typeParams";
3349 Parameter <7366 -7367> {} "vertex";
3350 Method <7371 -7372> {PUBLIC} "remove_typeParams";
3351 WildcardType <7368 -7370> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
3352 Method <7373 -7374 7376> {PUBLIC} "remove_typeParams";
3353 Parameter <7375 -7376> {} "vertex";
3354 Method <7378 7381 -7382> {PUBLIC} "get_typeParams";
3355 TypeParameter <7377 -7378 -7380> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_typeParams().V";
3356 ParametrizedType <7379 7380 -7381 7385 7386 -7387> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_typeParams|V>";
3357 Method <7384 7387 -7388 7392> {PUBLIC} "get_typeParams";
3358 TypeParameter <7383 -7384 -7386 -7390> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_typeParams(VertexFilter<V>).V";
3359 ParametrizedType <7389 7390 -7391> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_typeParams|V>";
3360 Parameter <7391 -7392> {} "filter";
3361 Method <7393 -7394 7396> {PUBLIC} "add_implementors";
3362 Parameter <7395 -7396> {} "vertex";
3363 Method <7400 -7401> {PUBLIC} "remove_implementors";
3364 WildcardType <7397 -7399> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
3365 Method <7402 -7403 7405> {PUBLIC} "remove_implementors";
3366 Parameter <7404 -7405> {} "vertex";
3367 Method <7407 7410 -7411> {PUBLIC} "get_implementors";
3368 TypeParameter <7406 -7407 -7409> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_implementors().V";
3369 ParametrizedType <7408 7409 -7410 7414 7415 -7416> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_implementors|V>";
3370 Method <7413 7416 -7417 7421> {PUBLIC} "get_implementors";
3371 TypeParameter <7412 -7413 -7415 -7419> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_implementors(VertexFilter<V>).V";
3372 ParametrizedType <7418 7419 -7420> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_implementors|V>";
3373 Parameter <7420 -7421> {} "filter";
3374 Method <7422 -7423 7425> {PUBLIC} "add_methods";
3375 Parameter <7424 -7425> {} "vertex";
3376 Method <7429 -7430> {PUBLIC} "remove_methods";
3377 WildcardType <7426 -7428> "? extends Method" "? extends de.uni_koblenz.jgralab.jex.schema.Method";
3378 Method <7431 -7432 7434> {PUBLIC} "remove_methods";
3379 Parameter <7433 -7434> {} "vertex";
3380 Method <7436 7439 -7440> {PUBLIC} "get_methods";
3381 TypeParameter <7435 -7436 -7438> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_methods().V";
3382 ParametrizedType <7437 7438 -7439 7443 7444 -7445> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_methods|V>";
3383 Method <7442 7445 -7446 7450> {PUBLIC} "get_methods";
3384 TypeParameter <7441 -7442 -7444 -7448> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_methods(VertexFilter<V>).V";
3385 ParametrizedType <7447 7448 -7449> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_methods|V>";
3386 Parameter <7449 -7450> {} "filter";
3387 Method <7451 -7452 7454> {PUBLIC} "add_parent";
3388 Parameter <7453 -7454> {} "vertex";
3389 Method <7458 -7459> {PUBLIC} "remove_parent";
3390 WildcardType <7455 -7457> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
3391 Method <7460 -7461 7463> {PUBLIC} "remove_parent";
3392 Parameter <7462 -7463> {} "vertex";
3393 Method <7464 -7465> {PUBLIC} "get_parent";
3394 Method <7466 -7467 7469> {PUBLIC} "add_arrayType";
3395 Parameter <7468 -7469> {} "vertex";
3396 Method <7473 -7474> {PUBLIC} "remove_arrayType";
3397 WildcardType <7470 -7472> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
3398 Method <7475 -7476 7478> {PUBLIC} "remove_arrayType";
3399 Parameter <7477 -7478> {} "vertex";
3400 Method <7480 7483 -7484> {PUBLIC} "get_arrayType";
3401 TypeParameter <7479 -7480 -7482> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_arrayType().V";
3402 ParametrizedType <7481 7482 -7483 7487 7488 -7489> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_arrayType|V>";
3403 Method <7486 7489 -7490 7494> {PUBLIC} "get_arrayType";
3404 TypeParameter <7485 -7486 -7488 -7492> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_arrayType(VertexFilter<V>).V";
3405 ParametrizedType <7491 7492 -7493> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.AnnotationImpl.get_arrayType|V>";
3406 Parameter <7493 -7494> {} "filter";
3407 Method <7497 -7498> {PUBLIC} "getDefinesIncidences";
3408 Method <7501 -7502 7504> {PUBLIC} "getDefinesIncidences";
3409 Parameter <7503 -7504> {} "direction";
3410 Method <7507 -7508> {PUBLIC} "getHasUpperBoundIncidences";
3411 Method <7511 -7512 7514> {PUBLIC} "getHasUpperBoundIncidences";
3412 Parameter <7513 -7514> {} "direction";
3413 Method <7517 -7518> {PUBLIC} "getContainsClassifierIncidences";
3414 Method <7521 -7522 7524> {PUBLIC} "getContainsClassifierIncidences";
3415 Parameter <7523 -7524> {} "direction";
3416 Method <7527 -7528> {PUBLIC} "getHasTypeArgIncidences";
3417 Method <7531 -7532 7534> {PUBLIC} "getHasTypeArgIncidences";
3418 Parameter <7533 -7534> {} "direction";
3419 Method <7537 -7538> {PUBLIC} "getDeclaresMethodIncidences";
3420 Method <7541 -7542 7544> {PUBLIC} "getDeclaresMethodIncidences";
3421 Parameter <7543 -7544> {} "direction";
3422 Method <7547 -7548> {PUBLIC} "getHasElementTypeIncidences";
3423 Method <7551 -7552 7554> {PUBLIC} "getHasElementTypeIncidences";
3424 Parameter <7553 -7554> {} "direction";
3425 Method <7557 -7558> {PUBLIC} "getThrowsIncidences";
3426 Method <7561 -7562 7564> {PUBLIC} "getThrowsIncidences";
3427 Parameter <7563 -7564> {} "direction";
3428 Method <7567 -7568> {PUBLIC} "getImportsIncidences";
3429 Method <7571 -7572 7574> {PUBLIC} "getImportsIncidences";
3430 Parameter <7573 -7574> {} "direction";
3431 Method <7577 -7578> {PUBLIC} "getHasBoundIncidences";
3432 Method <7581 -7582 7584> {PUBLIC} "getHasBoundIncidences";
3433 Parameter <7583 -7584> {} "direction";
3434 Method <7587 -7588> {PUBLIC} "getHasLowerBoundIncidences";
3435 Method <7591 -7592 7594> {PUBLIC} "getHasLowerBoundIncidences";
3436 Parameter <7593 -7594> {} "direction";
3437 Method <7597 -7598> {PUBLIC} "getDeclaresIncidences";
3438 Method <7601 -7602 7604> {PUBLIC} "getDeclaresIncidences";
3439 Parameter <7603 -7604> {} "direction";
3440 Method <7607 -7608> {PUBLIC} "getDeclaresConstructorIncidences";
3441 Method <7611 -7612 7614> {PUBLIC} "getDeclaresConstructorIncidences";
3442 Parameter <7613 -7614> {} "direction";
3443 Method <7617 -7618> {PUBLIC} "getHasGenericTypeIncidences";
3444 Method <7621 -7622 7624> {PUBLIC} "getHasGenericTypeIncidences";
3445 Parameter <7623 -7624> {} "direction";
3446 Method <7627 -7628> {PUBLIC} "getExtendsIncidences";
3447 Method <7631 -7632 7634> {PUBLIC} "getExtendsIncidences";
3448 Parameter <7633 -7634> {} "direction";
3449 Method <7637 -7638> {PUBLIC} "getImplementsIncidences";
3450 Method <7641 -7642 7644> {PUBLIC} "getImplementsIncidences";
3451 Parameter <7643 -7644> {} "direction";
3452 Method <7647 -7648> {PUBLIC} "getHasTypeIncidences";
3453 Method <7651 -7652 7654> {PUBLIC} "getHasTypeIncidences";
3454 Parameter <7653 -7654> {} "direction";
3455 Method <7657 -7658> {PUBLIC} "getDeclaresNestedClassifierIncidences";
3456 Method <7661 -7662 7664> {PUBLIC} "getDeclaresNestedClassifierIncidences";
3457 Parameter <7663 -7664> {} "direction";
3458 Method <7667 -7668> {PUBLIC} "getHasTypeParamIncidences";
3459 Method <7671 -7672 7674> {PUBLIC} "getHasTypeParamIncidences";
3460 Parameter <7673 -7674> {} "direction";
3461 Method <7677 -7678> {PUBLIC} "getDeclaresAnnotationElementIncidences";
3462 Method <7681 -7682 7684> {PUBLIC} "getDeclaresAnnotationElementIncidences";
3463 Parameter <7683 -7684> {} "direction";
3464 Method <7687 -7688> {PUBLIC} "getDeclaresFieldIncidences";
3465 Method <7691 -7692 7694> {PUBLIC} "getDeclaresFieldIncidences";
3466 Parameter <7693 -7694> {} "direction";
3467 SourceFile <7697 7698 7699 7700 7701 7702 7703 7989> 452 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ArrayTypeImpl.java";
3468 Class <7704 7705 7706 7707 7709 7711 7713 7714 7720 7725 7728 7733 7739 7741 7745 7747 7751 7753 7757 7762 7769 7775 7781 7783 7785 7787 7789 7791 7795 7797 7801 7803 7807 7809 7813 7815 7819 7821 7825 7827 7831 7833 7837 7844 7846 7854 7860 7866 7873 7875 7879 7881 7888 7890 7898 7904 7912 7916 7922 7926 7932 7936 7942 7946 7952 7956 7962 7966 7972 7976 7982 7986 -7989 -7990> {PUBLIC} "ArrayTypeImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ArrayTypeImpl";
3469 Field <7708 -7709> {PROTECTED} "_dimensions";
3470 Field <7710 -7711> {PROTECTED} "_name";
3471 Field <7712 -7713> {PROTECTED} "_qualifiedName";
3472 Constructor <-7714 7716 7718> {PUBLIC} "ArrayTypeImpl";
3473 Parameter <7715 -7716> {} "id";
3474 Parameter <7717 -7718> {} "g";
3475 Method <7719 -7720> {PUBLIC FINAL} "getAttributedElementClass";
3476 Method <7724 -7725> {PUBLIC FINAL} "getSchemaClass";
3477 WildcardType <7721 -7723> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
3478 Method <7726 7727 -7728 7730> {PUBLIC} "getAttribute";
3479 TypeParameter <-7726 -7727> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ArrayTypeImpl.getAttribute(String).T";
3480 Parameter <7729 -7730> {} "attributeName";
3481 Method <7731 7732 -7733 7735 7737> {PUBLIC} "setAttribute";
3482 TypeParameter <-7731 -7736> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ArrayTypeImpl.setAttribute(String,T).T";
3483 Parameter <7734 -7735> {} "attributeName";
3484 Parameter <7736 -7737> {} "data";
3485 Method <7738 -7739> {PUBLIC} "get_dimensions";
3486 Method <7740 -7741 7743> {PUBLIC} "set_dimensions";
3487 Parameter <7742 -7743> {} "_dimensions";
3488 Method <7744 -7745> {PUBLIC} "get_name";
3489 Method <7746 -7747 7749> {PUBLIC} "set_name";
3490 Parameter <7748 -7749> {} "_name";
3491 Method <7750 -7751> {PUBLIC} "get_qualifiedName";
3492 Method <7752 -7753 7755> {PUBLIC} "set_qualifiedName";
3493 Parameter <7754 -7755> {} "_qualifiedName";
3494 Method <7756 -7757 7759 7760> {PUBLIC} "readAttributeValues";
3495 Parameter <7758 -7759> {} "io";
3496 Method <7761 -7762 7764 7766 7767> {PUBLIC} "readAttributeValueFromString";
3497 Parameter <7763 -7764> {} "attributeName";
3498 Parameter <7765 -7766> {} "value";
3499 Method <7768 -7769 7771 7772 7773> {PUBLIC} "writeAttributeValues";
3500 Parameter <7770 -7771> {} "io";
3501 Method <7774 -7775 7777 7778 7779> {PUBLIC} "writeAttributeValueToString";
3502 Parameter <7776 -7777> {} "attributeName";
3503 Method <7780 -7781> {PUBLIC} "getNextArrayType";
3504 Method <7782 -7783> {PUBLIC} "getNextNamedElement";
3505 Method <7784 -7785> {PUBLIC} "getNextQualifiedNamedElement";
3506 Method <7786 -7787> {PUBLIC} "getNextType";
3507 Method <7788 -7789> {PUBLIC} "getFirstHasUpperBoundIncidence";
3508 Method <7790 -7791 7793> {PUBLIC} "getFirstHasUpperBoundIncidence";
3509 Parameter <7792 -7793> {} "orientation";
3510 Method <7794 -7795> {PUBLIC} "getFirstHasTypeIncidence";
3511 Method <7796 -7797 7799> {PUBLIC} "getFirstHasTypeIncidence";
3512 Parameter <7798 -7799> {} "orientation";
3513 Method <7800 -7801> {PUBLIC} "getFirstHasTypeArgIncidence";
3514 Method <7802 -7803 7805> {PUBLIC} "getFirstHasTypeArgIncidence";
3515 Parameter <7804 -7805> {} "orientation";
3516 Method <7806 -7807> {PUBLIC} "getFirstThrowsIncidence";
3517 Method <7808 -7809 7811> {PUBLIC} "getFirstThrowsIncidence";
3518 Parameter <7810 -7811> {} "orientation";
3519 Method <7812 -7813> {PUBLIC} "getFirstImportsIncidence";
3520 Method <7814 -7815 7817> {PUBLIC} "getFirstImportsIncidence";
3521 Parameter <7816 -7817> {} "orientation";
3522 Method <7818 -7819> {PUBLIC} "getFirstHasElementTypeIncidence";
3523 Method <7820 -7821 7823> {PUBLIC} "getFirstHasElementTypeIncidence";
3524 Parameter <7822 -7823> {} "orientation";
3525 Method <7824 -7825> {PUBLIC} "getFirstHasBoundIncidence";
3526 Method <7826 -7827 7829> {PUBLIC} "getFirstHasBoundIncidence";
3527 Parameter <7828 -7829> {} "orientation";
3528 Method <7830 -7831> {PUBLIC} "getFirstHasLowerBoundIncidence";
3529 Method <7832 -7833 7835> {PUBLIC} "getFirstHasLowerBoundIncidence";
3530 Parameter <7834 -7835> {} "orientation";
3531 Method <7836 -7837 7839> {PUBLIC} "add_importers";
3532 Parameter <7838 -7839> {} "vertex";
3533 Method <7843 -7844> {PUBLIC} "remove_importers";
3534 WildcardType <7840 -7842> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
3535 Method <7845 -7846 7848> {PUBLIC} "remove_importers";
3536 Parameter <7847 -7848> {} "vertex";
3537 Method <7850 7853 -7854> {PUBLIC} "get_importers";
3538 TypeParameter <7849 -7850 -7852> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ArrayTypeImpl.get_importers().V";
3539 ParametrizedType <7851 7852 -7853 7857 7858 -7859> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ArrayTypeImpl.get_importers|V>";
3540 Method <7856 7859 -7860 7864> {PUBLIC} "get_importers";
3541 TypeParameter <7855 -7856 -7858 -7862> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ArrayTypeImpl.get_importers(VertexFilter<V>).V";
3542 ParametrizedType <7861 7862 -7863> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ArrayTypeImpl.get_importers|V>";
3543 Parameter <7863 -7864> {} "filter";
3544 Method <7865 -7866 7868> {PUBLIC} "add_elementType";
3545 Parameter <7867 -7868> {} "vertex";
3546 Method <7872 -7873> {PUBLIC} "remove_elementType";
3547 WildcardType <7869 -7871> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
3548 Method <7874 -7875 7877> {PUBLIC} "remove_elementType";
3549 Parameter <7876 -7877> {} "vertex";
3550 Method <7878 -7879> {PUBLIC} "get_elementType";
3551 Method <7880 -7881 7883> {PUBLIC} "add_arrayType";
3552 Parameter <7882 -7883> {} "vertex";
3553 Method <7887 -7888> {PUBLIC} "remove_arrayType";
3554 WildcardType <7884 -7886> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
3555 Method <7889 -7890 7892> {PUBLIC} "remove_arrayType";
3556 Parameter <7891 -7892> {} "vertex";
3557 Method <7894 7897 -7898> {PUBLIC} "get_arrayType";
3558 TypeParameter <7893 -7894 -7896> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ArrayTypeImpl.get_arrayType().V";
3559 ParametrizedType <7895 7896 -7897 7901 7902 -7903> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ArrayTypeImpl.get_arrayType|V>";
3560 Method <7900 7903 -7904 7908> {PUBLIC} "get_arrayType";
3561 TypeParameter <7899 -7900 -7902 -7906> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ArrayTypeImpl.get_arrayType(VertexFilter<V>).V";
3562 ParametrizedType <7905 7906 -7907> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ArrayTypeImpl.get_arrayType|V>";
3563 Parameter <7907 -7908> {} "filter";
3564 Method <7911 -7912> {PUBLIC} "getHasUpperBoundIncidences";
3565 Method <7915 -7916 7918> {PUBLIC} "getHasUpperBoundIncidences";
3566 Parameter <7917 -7918> {} "direction";
3567 Method <7921 -7922> {PUBLIC} "getHasTypeIncidences";
3568 Method <7925 -7926 7928> {PUBLIC} "getHasTypeIncidences";
3569 Parameter <7927 -7928> {} "direction";
3570 Method <7931 -7932> {PUBLIC} "getHasTypeArgIncidences";
3571 Method <7935 -7936 7938> {PUBLIC} "getHasTypeArgIncidences";
3572 Parameter <7937 -7938> {} "direction";
3573 Method <7941 -7942> {PUBLIC} "getThrowsIncidences";
3574 Method <7945 -7946 7948> {PUBLIC} "getThrowsIncidences";
3575 Parameter <7947 -7948> {} "direction";
3576 Method <7951 -7952> {PUBLIC} "getImportsIncidences";
3577 Method <7955 -7956 7958> {PUBLIC} "getImportsIncidences";
3578 Parameter <7957 -7958> {} "direction";
3579 Method <7961 -7962> {PUBLIC} "getHasElementTypeIncidences";
3580 Method <7965 -7966 7968> {PUBLIC} "getHasElementTypeIncidences";
3581 Parameter <7967 -7968> {} "direction";
3582 Method <7971 -7972> {PUBLIC} "getHasBoundIncidences";
3583 Method <7975 -7976 7978> {PUBLIC} "getHasBoundIncidences";
3584 Parameter <7977 -7978> {} "direction";
3585 Method <7981 -7982> {PUBLIC} "getHasLowerBoundIncidences";
3586 Method <7985 -7986 7988> {PUBLIC} "getHasLowerBoundIncidences";
3587 Parameter <7987 -7988> {} "direction";
3588 SourceFile <7991 7992 7993 7994 7995 7996 7997 8766> 1176 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ClassImpl.java";
3589 Class <7998 7999 8000 8001 8005 8007 8009 8010 8016 8021 8024 8029 8037 8039 8045 8047 8051 8053 8057 8062 8069 8075 8081 8083 8085 8087 8089 8091 8093 8095 8097 8099 8101 8105 8107 8111 8113 8117 8119 8123 8125 8129 8131 8135 8137 8141 8143 8147 8149 8153 8155 8159 8161 8165 8167 8171 8173 8177 8179 8183 8185 8189 8191 8195 8197 8201 8203 8207 8209 8213 8220 8222 8230 8236 8242 8249 8251 8259 8265 8271 8278 8280 8288 8294 8300 8307 8309 8313 8315 8322 8324 8332 8338 8344 8351 8353 8361 8367 8373 8380 8382 8390 8396 8402 8409 8411 8419 8425 8431 8438 8440 8444 8446 8453 8455 8463 8469 8475 8482 8484 8492 8498 8504 8511 8513 8521 8527 8533 8540 8542 8546 8548 8555 8557 8565 8571 8579 8583 8589 8593 8599 8603 8609 8613 8619 8623 8629 8633 8639 8643 8649 8653 8659 8663 8669 8673 8679 8683 8689 8693 8699 8703 8709 8713 8719 8723 8729 8733 8739 8743 8749 8753 8759 8763 -8766 -8767> {PUBLIC} "ClassImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl";
3590 Field <8004 -8005> {PROTECTED} "_modifiers";
3591 Field <8006 -8007> {PROTECTED} "_name";
3592 Field <8008 -8009> {PROTECTED} "_qualifiedName";
3593 Constructor <-8010 8012 8014> {PUBLIC} "ClassImpl";
3594 Parameter <8011 -8012> {} "id";
3595 Parameter <8013 -8014> {} "g";
3596 Method <8015 -8016> {PUBLIC FINAL} "getAttributedElementClass";
3597 Method <8020 -8021> {PUBLIC FINAL} "getSchemaClass";
3598 WildcardType <8017 -8019> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
3599 Method <8022 8023 -8024 8026> {PUBLIC} "getAttribute";
3600 TypeParameter <-8022 -8023> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.getAttribute(String).T";
3601 Parameter <8025 -8026> {} "attributeName";
3602 Method <8027 8028 -8029 8031 8033> {PUBLIC} "setAttribute";
3603 TypeParameter <-8027 -8032> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.setAttribute(String,T).T";
3604 Parameter <8030 -8031> {} "attributeName";
3605 Parameter <8032 -8033> {} "data";
3606 Method <8036 -8037> {PUBLIC} "get_modifiers";
3607 Method <8038 -8039 8043> {PUBLIC} "set_modifiers";
3608 Parameter <8042 -8043> {} "_modifiers";
3609 Method <8044 -8045> {PUBLIC} "get_name";
3610 Method <8046 -8047 8049> {PUBLIC} "set_name";
3611 Parameter <8048 -8049> {} "_name";
3612 Method <8050 -8051> {PUBLIC} "get_qualifiedName";
3613 Method <8052 -8053 8055> {PUBLIC} "set_qualifiedName";
3614 Parameter <8054 -8055> {} "_qualifiedName";
3615 Method <8056 -8057 8059 8060> {PUBLIC} "readAttributeValues";
3616 Parameter <8058 -8059> {} "io";
3617 Method <8061 -8062 8064 8066 8067> {PUBLIC} "readAttributeValueFromString";
3618 Parameter <8063 -8064> {} "attributeName";
3619 Parameter <8065 -8066> {} "value";
3620 Method <8068 -8069 8071 8072 8073> {PUBLIC} "writeAttributeValues";
3621 Parameter <8070 -8071> {} "io";
3622 Method <8074 -8075 8077 8078 8079> {PUBLIC} "writeAttributeValueToString";
3623 Parameter <8076 -8077> {} "attributeName";
3624 Method <8080 -8081> {PUBLIC} "getNextAbstractClassifier";
3625 Method <8082 -8083> {PUBLIC} "getNextClass";
3626 Method <8084 -8085> {PUBLIC} "getNextClassifier";
3627 Method <8086 -8087> {PUBLIC} "getNextMember";
3628 Method <8088 -8089> {PUBLIC} "getNextModifiableElement";
3629 Method <8090 -8091> {PUBLIC} "getNextNamedElement";
3630 Method <8092 -8093> {PUBLIC} "getNextQualifiedNamedElement";
3631 Method <8094 -8095> {PUBLIC} "getNextType";
3632 Method <8096 -8097> {PUBLIC} "getNextTypeParametrizable";
3633 Method <8098 -8099> {PUBLIC} "getFirstDefinesIncidence";
3634 Method <8100 -8101 8103> {PUBLIC} "getFirstDefinesIncidence";
3635 Parameter <8102 -8103> {} "orientation";
3636 Method <8104 -8105> {PUBLIC} "getFirstHasUpperBoundIncidence";
3637 Method <8106 -8107 8109> {PUBLIC} "getFirstHasUpperBoundIncidence";
3638 Parameter <8108 -8109> {} "orientation";
3639 Method <8110 -8111> {PUBLIC} "getFirstContainsClassifierIncidence";
3640 Method <8112 -8113 8115> {PUBLIC} "getFirstContainsClassifierIncidence";
3641 Parameter <8114 -8115> {} "orientation";
3642 Method <8116 -8117> {PUBLIC} "getFirstHasTypeArgIncidence";
3643 Method <8118 -8119 8121> {PUBLIC} "getFirstHasTypeArgIncidence";
3644 Parameter <8120 -8121> {} "orientation";
3645 Method <8122 -8123> {PUBLIC} "getFirstDeclaresMethodIncidence";
3646 Method <8124 -8125 8127> {PUBLIC} "getFirstDeclaresMethodIncidence";
3647 Parameter <8126 -8127> {} "orientation";
3648 Method <8128 -8129> {PUBLIC} "getFirstHasElementTypeIncidence";
3649 Method <8130 -8131 8133> {PUBLIC} "getFirstHasElementTypeIncidence";
3650 Parameter <8132 -8133> {} "orientation";
3651 Method <8134 -8135> {PUBLIC} "getFirstThrowsIncidence";
3652 Method <8136 -8137 8139> {PUBLIC} "getFirstThrowsIncidence";
3653 Parameter <8138 -8139> {} "orientation";
3654 Method <8140 -8141> {PUBLIC} "getFirstImportsIncidence";
3655 Method <8142 -8143 8145> {PUBLIC} "getFirstImportsIncidence";
3656 Parameter <8144 -8145> {} "orientation";
3657 Method <8146 -8147> {PUBLIC} "getFirstHasBoundIncidence";
3658 Method <8148 -8149 8151> {PUBLIC} "getFirstHasBoundIncidence";
3659 Parameter <8150 -8151> {} "orientation";
3660 Method <8152 -8153> {PUBLIC} "getFirstHasLowerBoundIncidence";
3661 Method <8154 -8155 8157> {PUBLIC} "getFirstHasLowerBoundIncidence";
3662 Parameter <8156 -8157> {} "orientation";
3663 Method <8158 -8159> {PUBLIC} "getFirstDeclaresIncidence";
3664 Method <8160 -8161 8163> {PUBLIC} "getFirstDeclaresIncidence";
3665 Parameter <8162 -8163> {} "orientation";
3666 Method <8164 -8165> {PUBLIC} "getFirstDeclaresConstructorIncidence";
3667 Method <8166 -8167 8169> {PUBLIC} "getFirstDeclaresConstructorIncidence";
3668 Parameter <8168 -8169> {} "orientation";
3669 Method <8170 -8171> {PUBLIC} "getFirstHasGenericTypeIncidence";
3670 Method <8172 -8173 8175> {PUBLIC} "getFirstHasGenericTypeIncidence";
3671 Parameter <8174 -8175> {} "orientation";
3672 Method <8176 -8177> {PUBLIC} "getFirstExtendsIncidence";
3673 Method <8178 -8179 8181> {PUBLIC} "getFirstExtendsIncidence";
3674 Parameter <8180 -8181> {} "orientation";
3675 Method <8182 -8183> {PUBLIC} "getFirstImplementsIncidence";
3676 Method <8184 -8185 8187> {PUBLIC} "getFirstImplementsIncidence";
3677 Parameter <8186 -8187> {} "orientation";
3678 Method <8188 -8189> {PUBLIC} "getFirstHasTypeIncidence";
3679 Method <8190 -8191 8193> {PUBLIC} "getFirstHasTypeIncidence";
3680 Parameter <8192 -8193> {} "orientation";
3681 Method <8194 -8195> {PUBLIC} "getFirstDeclaresNestedClassifierIncidence";
3682 Method <8196 -8197 8199> {PUBLIC} "getFirstDeclaresNestedClassifierIncidence";
3683 Parameter <8198 -8199> {} "orientation";
3684 Method <8200 -8201> {PUBLIC} "getFirstHasTypeParamIncidence";
3685 Method <8202 -8203 8205> {PUBLIC} "getFirstHasTypeParamIncidence";
3686 Parameter <8204 -8205> {} "orientation";
3687 Method <8206 -8207> {PUBLIC} "getFirstDeclaresFieldIncidence";
3688 Method <8208 -8209 8211> {PUBLIC} "getFirstDeclaresFieldIncidence";
3689 Parameter <8210 -8211> {} "orientation";
3690 Method <8212 -8213 8215> {PUBLIC} "add_constructors";
3691 Parameter <8214 -8215> {} "vertex";
3692 Method <8219 -8220> {PUBLIC} "remove_constructors";
3693 WildcardType <8216 -8218> "? extends Constructor" "? extends de.uni_koblenz.jgralab.jex.schema.Constructor";
3694 Method <8221 -8222 8224> {PUBLIC} "remove_constructors";
3695 Parameter <8223 -8224> {} "vertex";
3696 Method <8226 8229 -8230> {PUBLIC} "get_constructors";
3697 TypeParameter <8225 -8226 -8228> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_constructors().V";
3698 ParametrizedType <8227 8228 -8229 8233 8234 -8235> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_constructors|V>";
3699 Method <8232 8235 -8236 8240> {PUBLIC} "get_constructors";
3700 TypeParameter <8231 -8232 -8234 -8238> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_constructors(VertexFilter<V>).V";
3701 ParametrizedType <8237 8238 -8239> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_constructors|V>";
3702 Parameter <8239 -8240> {} "filter";
3703 Method <8241 -8242 8244> {PUBLIC} "add_importers";
3704 Parameter <8243 -8244> {} "vertex";
3705 Method <8248 -8249> {PUBLIC} "remove_importers";
3706 WildcardType <8245 -8247> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
3707 Method <8250 -8251 8253> {PUBLIC} "remove_importers";
3708 Parameter <8252 -8253> {} "vertex";
3709 Method <8255 8258 -8259> {PUBLIC} "get_importers";
3710 TypeParameter <8254 -8255 -8257> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_importers().V";
3711 ParametrizedType <8256 8257 -8258 8262 8263 -8264> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_importers|V>";
3712 Method <8261 8264 -8265 8269> {PUBLIC} "get_importers";
3713 TypeParameter <8260 -8261 -8263 -8267> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_importers(VertexFilter<V>).V";
3714 ParametrizedType <8266 8267 -8268> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_importers|V>";
3715 Parameter <8268 -8269> {} "filter";
3716 Method <8270 -8271 8273> {PUBLIC} "add_fields";
3717 Parameter <8272 -8273> {} "vertex";
3718 Method <8277 -8278> {PUBLIC} "remove_fields";
3719 WildcardType <8274 -8276> "? extends Field" "? extends de.uni_koblenz.jgralab.jex.schema.Field";
3720 Method <8279 -8280 8282> {PUBLIC} "remove_fields";
3721 Parameter <8281 -8282> {} "vertex";
3722 Method <8284 8287 -8288> {PUBLIC} "get_fields";
3723 TypeParameter <8283 -8284 -8286> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_fields().V";
3724 ParametrizedType <8285 8286 -8287 8291 8292 -8293> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_fields|V>";
3725 Method <8290 8293 -8294 8298> {PUBLIC} "get_fields";
3726 TypeParameter <8289 -8290 -8292 -8296> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_fields(VertexFilter<V>).V";
3727 ParametrizedType <8295 8296 -8297> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_fields|V>";
3728 Parameter <8297 -8298> {} "filter";
3729 Method <8299 -8300 8302> {PUBLIC} "add_sourceFile";
3730 Parameter <8301 -8302> {} "vertex";
3731 Method <8306 -8307> {PUBLIC} "remove_sourceFile";
3732 WildcardType <8303 -8305> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
3733 Method <8308 -8309 8311> {PUBLIC} "remove_sourceFile";
3734 Parameter <8310 -8311> {} "vertex";
3735 Method <8312 -8313> {PUBLIC} "get_sourceFile";
3736 Method <8314 -8315 8317> {PUBLIC} "add_members";
3737 Parameter <8316 -8317> {} "vertex";
3738 Method <8321 -8322> {PUBLIC} "remove_members";
3739 WildcardType <8318 -8320> "? extends Member" "? extends de.uni_koblenz.jgralab.jex.schema.Member";
3740 Method <8323 -8324 8326> {PUBLIC} "remove_members";
3741 Parameter <8325 -8326> {} "vertex";
3742 Method <8328 8331 -8332> {PUBLIC} "get_members";
3743 TypeParameter <8327 -8328 -8330> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_members().V";
3744 ParametrizedType <8329 8330 -8331 8335 8336 -8337> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_members|V>";
3745 Method <8334 8337 -8338 8342> {PUBLIC} "get_members";
3746 TypeParameter <8333 -8334 -8336 -8340> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_members(VertexFilter<V>).V";
3747 ParametrizedType <8339 8340 -8341> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_members|V>";
3748 Parameter <8341 -8342> {} "filter";
3749 Method <8343 -8344 8346> {PUBLIC} "add_subclasses";
3750 Parameter <8345 -8346> {} "vertex";
3751 Method <8350 -8351> {PUBLIC} "remove_subclasses";
3752 WildcardType <8347 -8349> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
3753 Method <8352 -8353 8355> {PUBLIC} "remove_subclasses";
3754 Parameter <8354 -8355> {} "vertex";
3755 Method <8357 8360 -8361> {PUBLIC} "get_subclasses";
3756 TypeParameter <8356 -8357 -8359> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_subclasses().V";
3757 ParametrizedType <8358 8359 -8360 8364 8365 -8366> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_subclasses|V>";
3758 Method <8363 8366 -8367 8371> {PUBLIC} "get_subclasses";
3759 TypeParameter <8362 -8363 -8365 -8369> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_subclasses(VertexFilter<V>).V";
3760 ParametrizedType <8368 8369 -8370> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_subclasses|V>";
3761 Parameter <8370 -8371> {} "filter";
3762 Method <8372 -8373 8375> {PUBLIC} "add_interfaces";
3763 Parameter <8374 -8375> {} "vertex";
3764 Method <8379 -8380> {PUBLIC} "remove_interfaces";
3765 WildcardType <8376 -8378> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
3766 Method <8381 -8382 8384> {PUBLIC} "remove_interfaces";
3767 Parameter <8383 -8384> {} "vertex";
3768 Method <8386 8389 -8390> {PUBLIC} "get_interfaces";
3769 TypeParameter <8385 -8386 -8388> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_interfaces().V";
3770 ParametrizedType <8387 8388 -8389 8393 8394 -8395> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_interfaces|V>";
3771 Method <8392 8395 -8396 8400> {PUBLIC} "get_interfaces";
3772 TypeParameter <8391 -8392 -8394 -8398> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_interfaces(VertexFilter<V>).V";
3773 ParametrizedType <8397 8398 -8399> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_interfaces|V>";
3774 Parameter <8399 -8400> {} "filter";
3775 Method <8401 -8402 8404> {PUBLIC} "add_nestedClassifiers";
3776 Parameter <8403 -8404> {} "vertex";
3777 Method <8408 -8409> {PUBLIC} "remove_nestedClassifiers";
3778 WildcardType <8405 -8407> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
3779 Method <8410 -8411 8413> {PUBLIC} "remove_nestedClassifiers";
3780 Parameter <8412 -8413> {} "vertex";
3781 Method <8415 8418 -8419> {PUBLIC} "get_nestedClassifiers";
3782 TypeParameter <8414 -8415 -8417> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_nestedClassifiers().V";
3783 ParametrizedType <8416 8417 -8418 8422 8423 -8424> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_nestedClassifiers|V>";
3784 Method <8421 8424 -8425 8429> {PUBLIC} "get_nestedClassifiers";
3785 TypeParameter <8420 -8421 -8423 -8427> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_nestedClassifiers(VertexFilter<V>).V";
3786 ParametrizedType <8426 8427 -8428> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_nestedClassifiers|V>";
3787 Parameter <8428 -8429> {} "filter";
3788 Method <8430 -8431 8433> {PUBLIC} "add_superclass";
3789 Parameter <8432 -8433> {} "vertex";
3790 Method <8437 -8438> {PUBLIC} "remove_superclass";
3791 WildcardType <8434 -8436> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
3792 Method <8439 -8440 8442> {PUBLIC} "remove_superclass";
3793 Parameter <8441 -8442> {} "vertex";
3794 Method <8443 -8444> {PUBLIC} "get_superclass";
3795 Method <8445 -8446 8448> {PUBLIC} "add_typeParams";
3796 Parameter <8447 -8448> {} "vertex";
3797 Method <8452 -8453> {PUBLIC} "remove_typeParams";
3798 WildcardType <8449 -8451> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
3799 Method <8454 -8455 8457> {PUBLIC} "remove_typeParams";
3800 Parameter <8456 -8457> {} "vertex";
3801 Method <8459 8462 -8463> {PUBLIC} "get_typeParams";
3802 TypeParameter <8458 -8459 -8461> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_typeParams().V";
3803 ParametrizedType <8460 8461 -8462 8466 8467 -8468> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_typeParams|V>";
3804 Method <8465 8468 -8469 8473> {PUBLIC} "get_typeParams";
3805 TypeParameter <8464 -8465 -8467 -8471> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_typeParams(VertexFilter<V>).V";
3806 ParametrizedType <8470 8471 -8472> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_typeParams|V>";
3807 Parameter <8472 -8473> {} "filter";
3808 Method <8474 -8475 8477> {PUBLIC} "add_implementors";
3809 Parameter <8476 -8477> {} "vertex";
3810 Method <8481 -8482> {PUBLIC} "remove_implementors";
3811 WildcardType <8478 -8480> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
3812 Method <8483 -8484 8486> {PUBLIC} "remove_implementors";
3813 Parameter <8485 -8486> {} "vertex";
3814 Method <8488 8491 -8492> {PUBLIC} "get_implementors";
3815 TypeParameter <8487 -8488 -8490> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_implementors().V";
3816 ParametrizedType <8489 8490 -8491 8495 8496 -8497> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_implementors|V>";
3817 Method <8494 8497 -8498 8502> {PUBLIC} "get_implementors";
3818 TypeParameter <8493 -8494 -8496 -8500> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_implementors(VertexFilter<V>).V";
3819 ParametrizedType <8499 8500 -8501> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_implementors|V>";
3820 Parameter <8501 -8502> {} "filter";
3821 Method <8503 -8504 8506> {PUBLIC} "add_methods";
3822 Parameter <8505 -8506> {} "vertex";
3823 Method <8510 -8511> {PUBLIC} "remove_methods";
3824 WildcardType <8507 -8509> "? extends Method" "? extends de.uni_koblenz.jgralab.jex.schema.Method";
3825 Method <8512 -8513 8515> {PUBLIC} "remove_methods";
3826 Parameter <8514 -8515> {} "vertex";
3827 Method <8517 8520 -8521> {PUBLIC} "get_methods";
3828 TypeParameter <8516 -8517 -8519> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_methods().V";
3829 ParametrizedType <8518 8519 -8520 8524 8525 -8526> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_methods|V>";
3830 Method <8523 8526 -8527 8531> {PUBLIC} "get_methods";
3831 TypeParameter <8522 -8523 -8525 -8529> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_methods(VertexFilter<V>).V";
3832 ParametrizedType <8528 8529 -8530> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_methods|V>";
3833 Parameter <8530 -8531> {} "filter";
3834 Method <8532 -8533 8535> {PUBLIC} "add_parent";
3835 Parameter <8534 -8535> {} "vertex";
3836 Method <8539 -8540> {PUBLIC} "remove_parent";
3837 WildcardType <8536 -8538> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
3838 Method <8541 -8542 8544> {PUBLIC} "remove_parent";
3839 Parameter <8543 -8544> {} "vertex";
3840 Method <8545 -8546> {PUBLIC} "get_parent";
3841 Method <8547 -8548 8550> {PUBLIC} "add_arrayType";
3842 Parameter <8549 -8550> {} "vertex";
3843 Method <8554 -8555> {PUBLIC} "remove_arrayType";
3844 WildcardType <8551 -8553> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
3845 Method <8556 -8557 8559> {PUBLIC} "remove_arrayType";
3846 Parameter <8558 -8559> {} "vertex";
3847 Method <8561 8564 -8565> {PUBLIC} "get_arrayType";
3848 TypeParameter <8560 -8561 -8563> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_arrayType().V";
3849 ParametrizedType <8562 8563 -8564 8568 8569 -8570> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_arrayType|V>";
3850 Method <8567 8570 -8571 8575> {PUBLIC} "get_arrayType";
3851 TypeParameter <8566 -8567 -8569 -8573> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_arrayType(VertexFilter<V>).V";
3852 ParametrizedType <8572 8573 -8574> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ClassImpl.get_arrayType|V>";
3853 Parameter <8574 -8575> {} "filter";
3854 Method <8578 -8579> {PUBLIC} "getDefinesIncidences";
3855 Method <8582 -8583 8585> {PUBLIC} "getDefinesIncidences";
3856 Parameter <8584 -8585> {} "direction";
3857 Method <8588 -8589> {PUBLIC} "getHasUpperBoundIncidences";
3858 Method <8592 -8593 8595> {PUBLIC} "getHasUpperBoundIncidences";
3859 Parameter <8594 -8595> {} "direction";
3860 Method <8598 -8599> {PUBLIC} "getContainsClassifierIncidences";
3861 Method <8602 -8603 8605> {PUBLIC} "getContainsClassifierIncidences";
3862 Parameter <8604 -8605> {} "direction";
3863 Method <8608 -8609> {PUBLIC} "getHasTypeArgIncidences";
3864 Method <8612 -8613 8615> {PUBLIC} "getHasTypeArgIncidences";
3865 Parameter <8614 -8615> {} "direction";
3866 Method <8618 -8619> {PUBLIC} "getDeclaresMethodIncidences";
3867 Method <8622 -8623 8625> {PUBLIC} "getDeclaresMethodIncidences";
3868 Parameter <8624 -8625> {} "direction";
3869 Method <8628 -8629> {PUBLIC} "getHasElementTypeIncidences";
3870 Method <8632 -8633 8635> {PUBLIC} "getHasElementTypeIncidences";
3871 Parameter <8634 -8635> {} "direction";
3872 Method <8638 -8639> {PUBLIC} "getThrowsIncidences";
3873 Method <8642 -8643 8645> {PUBLIC} "getThrowsIncidences";
3874 Parameter <8644 -8645> {} "direction";
3875 Method <8648 -8649> {PUBLIC} "getImportsIncidences";
3876 Method <8652 -8653 8655> {PUBLIC} "getImportsIncidences";
3877 Parameter <8654 -8655> {} "direction";
3878 Method <8658 -8659> {PUBLIC} "getHasBoundIncidences";
3879 Method <8662 -8663 8665> {PUBLIC} "getHasBoundIncidences";
3880 Parameter <8664 -8665> {} "direction";
3881 Method <8668 -8669> {PUBLIC} "getHasLowerBoundIncidences";
3882 Method <8672 -8673 8675> {PUBLIC} "getHasLowerBoundIncidences";
3883 Parameter <8674 -8675> {} "direction";
3884 Method <8678 -8679> {PUBLIC} "getDeclaresIncidences";
3885 Method <8682 -8683 8685> {PUBLIC} "getDeclaresIncidences";
3886 Parameter <8684 -8685> {} "direction";
3887 Method <8688 -8689> {PUBLIC} "getDeclaresConstructorIncidences";
3888 Method <8692 -8693 8695> {PUBLIC} "getDeclaresConstructorIncidences";
3889 Parameter <8694 -8695> {} "direction";
3890 Method <8698 -8699> {PUBLIC} "getHasGenericTypeIncidences";
3891 Method <8702 -8703 8705> {PUBLIC} "getHasGenericTypeIncidences";
3892 Parameter <8704 -8705> {} "direction";
3893 Method <8708 -8709> {PUBLIC} "getExtendsIncidences";
3894 Method <8712 -8713 8715> {PUBLIC} "getExtendsIncidences";
3895 Parameter <8714 -8715> {} "direction";
3896 Method <8718 -8719> {PUBLIC} "getImplementsIncidences";
3897 Method <8722 -8723 8725> {PUBLIC} "getImplementsIncidences";
3898 Parameter <8724 -8725> {} "direction";
3899 Method <8728 -8729> {PUBLIC} "getHasTypeIncidences";
3900 Method <8732 -8733 8735> {PUBLIC} "getHasTypeIncidences";
3901 Parameter <8734 -8735> {} "direction";
3902 Method <8738 -8739> {PUBLIC} "getDeclaresNestedClassifierIncidences";
3903 Method <8742 -8743 8745> {PUBLIC} "getDeclaresNestedClassifierIncidences";
3904 Parameter <8744 -8745> {} "direction";
3905 Method <8748 -8749> {PUBLIC} "getHasTypeParamIncidences";
3906 Method <8752 -8753 8755> {PUBLIC} "getHasTypeParamIncidences";
3907 Parameter <8754 -8755> {} "direction";
3908 Method <8758 -8759> {PUBLIC} "getDeclaresFieldIncidences";
3909 Method <8762 -8763 8765> {PUBLIC} "getDeclaresFieldIncidences";
3910 Parameter <8764 -8765> {} "direction";
3911 SourceFile <8768 8769 8770 8771 8772 8773 8774 9088> 528 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ConstructorImpl.java";
3912 Class <8775 8776 8777 8778 8782 8784 8785 8791 8796 8799 8804 8812 8814 8820 8822 8826 8831 8838 8844 8850 8852 8854 8856 8858 8860 8862 8864 8868 8870 8874 8876 8880 8882 8886 8888 8892 8894 8898 8905 8907 8915 8921 8927 8934 8936 8944 8950 8956 8963 8965 8973 8979 8985 8992 8994 9002 9008 9014 9021 9023 9027 9031 9035 9041 9045 9051 9055 9061 9065 9071 9075 9081 9085 -9088 -9089> {PUBLIC} "ConstructorImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl";
3913 Field <8781 -8782> {PROTECTED} "_modifiers";
3914 Field <8783 -8784> {PROTECTED} "_name";
3915 Constructor <-8785 8787 8789> {PUBLIC} "ConstructorImpl";
3916 Parameter <8786 -8787> {} "id";
3917 Parameter <8788 -8789> {} "g";
3918 Method <8790 -8791> {PUBLIC FINAL} "getAttributedElementClass";
3919 Method <8795 -8796> {PUBLIC FINAL} "getSchemaClass";
3920 WildcardType <8792 -8794> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
3921 Method <8797 8798 -8799 8801> {PUBLIC} "getAttribute";
3922 TypeParameter <-8797 -8798> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.getAttribute(String).T";
3923 Parameter <8800 -8801> {} "attributeName";
3924 Method <8802 8803 -8804 8806 8808> {PUBLIC} "setAttribute";
3925 TypeParameter <-8802 -8807> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.setAttribute(String,T).T";
3926 Parameter <8805 -8806> {} "attributeName";
3927 Parameter <8807 -8808> {} "data";
3928 Method <8811 -8812> {PUBLIC} "get_modifiers";
3929 Method <8813 -8814 8818> {PUBLIC} "set_modifiers";
3930 Parameter <8817 -8818> {} "_modifiers";
3931 Method <8819 -8820> {PUBLIC} "get_name";
3932 Method <8821 -8822 8824> {PUBLIC} "set_name";
3933 Parameter <8823 -8824> {} "_name";
3934 Method <8825 -8826 8828 8829> {PUBLIC} "readAttributeValues";
3935 Parameter <8827 -8828> {} "io";
3936 Method <8830 -8831 8833 8835 8836> {PUBLIC} "readAttributeValueFromString";
3937 Parameter <8832 -8833> {} "attributeName";
3938 Parameter <8834 -8835> {} "value";
3939 Method <8837 -8838 8840 8841 8842> {PUBLIC} "writeAttributeValues";
3940 Parameter <8839 -8840> {} "io";
3941 Method <8843 -8844 8846 8847 8848> {PUBLIC} "writeAttributeValueToString";
3942 Parameter <8845 -8846> {} "attributeName";
3943 Method <8849 -8850> {PUBLIC} "getNextConstructor";
3944 Method <8851 -8852> {PUBLIC} "getNextMember";
3945 Method <8853 -8854> {PUBLIC} "getNextMethodLike";
3946 Method <8855 -8856> {PUBLIC} "getNextModifiableElement";
3947 Method <8857 -8858> {PUBLIC} "getNextNamedElement";
3948 Method <8859 -8860> {PUBLIC} "getNextTypeParametrizable";
3949 Method <8861 -8862> {PUBLIC} "getFirstDeclaresConstructorIncidence";
3950 Method <8863 -8864 8866> {PUBLIC} "getFirstDeclaresConstructorIncidence";
3951 Parameter <8865 -8866> {} "orientation";
3952 Method <8867 -8868> {PUBLIC} "getFirstHasTypeParamIncidence";
3953 Method <8869 -8870 8872> {PUBLIC} "getFirstHasTypeParamIncidence";
3954 Parameter <8871 -8872> {} "orientation";
3955 Method <8873 -8874> {PUBLIC} "getFirstImportsIncidence";
3956 Method <8875 -8876 8878> {PUBLIC} "getFirstImportsIncidence";
3957 Parameter <8877 -8878> {} "orientation";
3958 Method <8879 -8880> {PUBLIC} "getFirstHasParamIncidence";
3959 Method <8881 -8882 8884> {PUBLIC} "getFirstHasParamIncidence";
3960 Parameter <8883 -8884> {} "orientation";
3961 Method <8885 -8886> {PUBLIC} "getFirstThrowsIncidence";
3962 Method <8887 -8888 8890> {PUBLIC} "getFirstThrowsIncidence";
3963 Parameter <8889 -8890> {} "orientation";
3964 Method <8891 -8892> {PUBLIC} "getFirstDeclaresIncidence";
3965 Method <8893 -8894 8896> {PUBLIC} "getFirstDeclaresIncidence";
3966 Parameter <8895 -8896> {} "orientation";
3967 Method <8897 -8898 8900> {PUBLIC} "add_typeParams";
3968 Parameter <8899 -8900> {} "vertex";
3969 Method <8904 -8905> {PUBLIC} "remove_typeParams";
3970 WildcardType <8901 -8903> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
3971 Method <8906 -8907 8909> {PUBLIC} "remove_typeParams";
3972 Parameter <8908 -8909> {} "vertex";
3973 Method <8911 8914 -8915> {PUBLIC} "get_typeParams";
3974 TypeParameter <8910 -8911 -8913> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.get_typeParams().V";
3975 ParametrizedType <8912 8913 -8914 8918 8919 -8920> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.get_typeParams|V>";
3976 Method <8917 8920 -8921 8925> {PUBLIC} "get_typeParams";
3977 TypeParameter <8916 -8917 -8919 -8923> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.get_typeParams(VertexFilter<V>).V";
3978 ParametrizedType <8922 8923 -8924> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.get_typeParams|V>";
3979 Parameter <8924 -8925> {} "filter";
3980 Method <8926 -8927 8929> {PUBLIC} "add_exceptions";
3981 Parameter <8928 -8929> {} "vertex";
3982 Method <8933 -8934> {PUBLIC} "remove_exceptions";
3983 WildcardType <8930 -8932> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
3984 Method <8935 -8936 8938> {PUBLIC} "remove_exceptions";
3985 Parameter <8937 -8938> {} "vertex";
3986 Method <8940 8943 -8944> {PUBLIC} "get_exceptions";
3987 TypeParameter <8939 -8940 -8942> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.get_exceptions().V";
3988 ParametrizedType <8941 8942 -8943 8947 8948 -8949> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.get_exceptions|V>";
3989 Method <8946 8949 -8950 8954> {PUBLIC} "get_exceptions";
3990 TypeParameter <8945 -8946 -8948 -8952> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.get_exceptions(VertexFilter<V>).V";
3991 ParametrizedType <8951 8952 -8953> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.get_exceptions|V>";
3992 Parameter <8953 -8954> {} "filter";
3993 Method <8955 -8956 8958> {PUBLIC} "add_params";
3994 Parameter <8957 -8958> {} "vertex";
3995 Method <8962 -8963> {PUBLIC} "remove_params";
3996 WildcardType <8959 -8961> "? extends Parameter" "? extends de.uni_koblenz.jgralab.jex.schema.Parameter";
3997 Method <8964 -8965 8967> {PUBLIC} "remove_params";
3998 Parameter <8966 -8967> {} "vertex";
3999 Method <8969 8972 -8973> {PUBLIC} "get_params";
4000 TypeParameter <8968 -8969 -8971> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.get_params().V";
4001 ParametrizedType <8970 8971 -8972 8976 8977 -8978> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.get_params|V>";
4002 Method <8975 8978 -8979 8983> {PUBLIC} "get_params";
4003 TypeParameter <8974 -8975 -8977 -8981> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.get_params(VertexFilter<V>).V";
4004 ParametrizedType <8980 8981 -8982> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.get_params|V>";
4005 Parameter <8982 -8983> {} "filter";
4006 Method <8984 -8985 8987> {PUBLIC} "add_importers";
4007 Parameter <8986 -8987> {} "vertex";
4008 Method <8991 -8992> {PUBLIC} "remove_importers";
4009 WildcardType <8988 -8990> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
4010 Method <8993 -8994 8996> {PUBLIC} "remove_importers";
4011 Parameter <8995 -8996> {} "vertex";
4012 Method <8998 9001 -9002> {PUBLIC} "get_importers";
4013 TypeParameter <8997 -8998 -9000> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.get_importers().V";
4014 ParametrizedType <8999 9000 -9001 9005 9006 -9007> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.get_importers|V>";
4015 Method <9004 9007 -9008 9012> {PUBLIC} "get_importers";
4016 TypeParameter <9003 -9004 -9006 -9010> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.get_importers(VertexFilter<V>).V";
4017 ParametrizedType <9009 9010 -9011> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ConstructorImpl.get_importers|V>";
4018 Parameter <9011 -9012> {} "filter";
4019 Method <9013 -9014 9016> {PUBLIC} "add_parent";
4020 Parameter <9015 -9016> {} "vertex";
4021 Method <9020 -9021> {PUBLIC} "remove_parent";
4022 WildcardType <9017 -9019> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
4023 Method <9022 -9023 9025> {PUBLIC} "remove_parent";
4024 Parameter <9024 -9025> {} "vertex";
4025 Method <9026 -9027> {PUBLIC} "get_parent";
4026 Method <9030 -9031> {PUBLIC} "getDeclaresConstructorIncidences";
4027 Method <9034 -9035 9037> {PUBLIC} "getDeclaresConstructorIncidences";
4028 Parameter <9036 -9037> {} "direction";
4029 Method <9040 -9041> {PUBLIC} "getHasTypeParamIncidences";
4030 Method <9044 -9045 9047> {PUBLIC} "getHasTypeParamIncidences";
4031 Parameter <9046 -9047> {} "direction";
4032 Method <9050 -9051> {PUBLIC} "getImportsIncidences";
4033 Method <9054 -9055 9057> {PUBLIC} "getImportsIncidences";
4034 Parameter <9056 -9057> {} "direction";
4035 Method <9060 -9061> {PUBLIC} "getHasParamIncidences";
4036 Method <9064 -9065 9067> {PUBLIC} "getHasParamIncidences";
4037 Parameter <9066 -9067> {} "direction";
4038 Method <9070 -9071> {PUBLIC} "getThrowsIncidences";
4039 Method <9074 -9075 9077> {PUBLIC} "getThrowsIncidences";
4040 Parameter <9076 -9077> {} "direction";
4041 Method <9080 -9081> {PUBLIC} "getDeclaresIncidences";
4042 Method <9084 -9085 9087> {PUBLIC} "getDeclaresIncidences";
4043 Parameter <9086 -9087> {} "direction";
4044 SourceFile <9090 9091 9092 9093 9094 9095 9096 9097 9098 9099 9175> 105 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ContainsClassifierImpl.java";
4045 Class <-9090 -9100 -9177 -9186 -9263 -9273 -9359 -9369 -9455 -9465 -9551 -9561 -9647 -9657 -9743 -9752 -9838 -9848 -10922 -10932 -11226 -11236 -11313 -11323 -11400 -11410 -11487 -11497 -11574 -11584 -11661 -11671 -11748 -11758 -11835 -11845 -11922 -11932 -12009 -12019 -12096 -12106 -15801 -15813 -15858 -15869 -15914 -15927 -15980 -15993 -16046 -16059 -16112 -16125 -16178 -16191 -16244 -16256 -16309 -16321 -16372 -16384 -16429 -16441 -16486 -16498 -16543 -16555 -16600 -16612 -16657 -16669 -16714 -16726 -16771 -16783 -16828 -16840 -16885 -16897 -16942 -16954 -16999 -17011 -17062 -17074 -17286 -17296> {ABSTRACT} "EdgeImpl" "de.uni_koblenz.jgralab.impl.std.EdgeImpl";
4046 Class <-9096 15809 15810 15811 15812 15818 15820 15825 15832 15838 15844 15846 15848 15852 15854 -15855 -15856> {PUBLIC} "ReversedContainsClassifierImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedContainsClassifierImpl";
4047 Class <9100 9101 9102 9103 9113 9118 9121 9126 9132 9137 9144 9150 9156 9158 9160 9164 9166 9168 9170 9172 9174 -9175 -9176> {PUBLIC} "ContainsClassifierImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ContainsClassifierImpl";
4048 Constructor <-9103 9105 9107 9109 9111> {PUBLIC} "ContainsClassifierImpl";
4049 Parameter <9104 -9105> {} "id";
4050 Parameter <9106 -9107> {} "g";
4051 Parameter <9108 -9109> {} "alpha";
4052 Parameter <9110 -9111> {} "omega";
4053 Method <9112 -9113> {PUBLIC FINAL} "getAttributedElementClass";
4054 Method <9117 -9118> {PUBLIC FINAL} "getSchemaClass";
4055 WildcardType <9114 -9116> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
4056 ParametrizedType <9115 9116 -9117 9201 9202 -9203 9289 9290 -9291 9385 9386 -9387 9481 9482 -9483 9577 9578 -9579 9673 9674 -9675 9768 9769 -9770 9865 9866 -9867 10947 10948 -10949 11251 11252 -11253 11338 11339 -11340 11425 11426 -11427 11512 11513 -11514 11599 11600 -11601 11686 11687 -11688 11773 11774 -11775 11860 11861 -11862 11947 11948 -11949 12034 12035 -12036 12123 12124 -12125 17311 17312 -17313> n "Class<? extends Edge>" "java.lang.Class<? extends de.uni_koblenz.jgralab.Edge>";
4057 Method <9119 9120 -9121 9123> {PUBLIC} "getAttribute";
4058 TypeParameter <-9119 -9120> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ContainsClassifierImpl.getAttribute(String).T";
4059 Parameter <9122 -9123> {} "attributeName";
4060 Method <9124 9125 -9126 9128 9130> {PUBLIC} "setAttribute";
4061 TypeParameter <-9124 -9129> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ContainsClassifierImpl.setAttribute(String,T).T";
4062 Parameter <9127 -9128> {} "attributeName";
4063 Parameter <9129 -9130> {} "data";
4064 Method <9131 -9132 9134 9135> {PUBLIC} "readAttributeValues";
4065 Parameter <9133 -9134> {} "io";
4066 Method <9136 -9137 9139 9141 9142> {PUBLIC} "readAttributeValueFromString";
4067 Parameter <9138 -9139> {} "attributeName";
4068 Parameter <9140 -9141> {} "value";
4069 Method <9143 -9144 9146 9147 9148> {PUBLIC} "writeAttributeValues";
4070 Parameter <9145 -9146> {} "io";
4071 Method <9149 -9150 9152 9153 9154> {PUBLIC} "writeAttributeValueToString";
4072 Parameter <9151 -9152> {} "attributeName";
4073 Method <9155 -9156> {PUBLIC} "getNextContainsClassifierInGraph";
4074 Method <9157 -9158> {PUBLIC} "getNextContainsClassifierIncidence";
4075 Method <9159 -9160 9162> {PUBLIC} "getNextContainsClassifierIncidence";
4076 Parameter <9161 -9162> {} "orientation";
4077 Method <9163 -9164> {PUBLIC} "getAggregationKind";
4078 Enum <-9163 -9165 -9167 -9249 -9251 -9253 -9345 -9347 -9349 -9441 -9443 -9445 -9537 -9539 -9541 -9633 -9635 -9637 -9729 -9731 -9733 -9824 -9826 -9828 -9919 -9921 -9923 -10995 -10997 -10999 -11299 -11301 -11303 -11386 -11388 -11390 -11473 -11475 -11477 -11560 -11562 -11564 -11647 -11649 -11651 -11734 -11736 -11738 -11821 -11823 -11825 -11908 -11910 -11912 -11995 -11997 -11999 -12082 -12084 -12086 -12177 -12179 -12181 -17359 -17361 -17363> {FINAL} "AggregationKind" "de.uni_koblenz.jgralab.schema.AggregationKind";
4079 Method <9165 -9166> {PUBLIC} "getAlphaAggregationKind";
4080 Method <9167 -9168> {PUBLIC} "getOmegaAggregationKind";
4081 Method <9169 -9170> {PROTECTED} "createReversedEdge";
4082 Class <-9169 -9255 -9351 -9447 -9543 -9639 -9735 -9830 -9925 -11001 -11305 -11392 -11479 -11566 -11653 -11740 -11827 -11914 -12001 -12088 -12183 -17365> {ABSTRACT} "ReversedEdgeBaseImpl" "de.uni_koblenz.jgralab.impl.ReversedEdgeBaseImpl";
4083 Method <9171 -9172> {PUBLIC} "getAlpha";
4084 Method <9173 -9174> {PUBLIC} "getOmega";
4085 SourceFile <9177 9178 9179 9180 9181 9182 9183 9184 9185 9261> 104 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ContainsPackageImpl.java";
4086 Class <-9183 15865 15866 15867 15868 15874 15876 15881 15888 15894 15900 15902 15904 15908 15910 -15911 -15912> {PUBLIC} "ReversedContainsPackageImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedContainsPackageImpl";
4087 Class <9186 9187 9188 9189 9199 9204 9207 9212 9218 9223 9230 9236 9242 9244 9246 9250 9252 9254 9256 9258 9260 -9261 -9262> {PUBLIC} "ContainsPackageImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ContainsPackageImpl";
4088 Constructor <-9189 9191 9193 9195 9197> {PUBLIC} "ContainsPackageImpl";
4089 Parameter <9190 -9191> {} "id";
4090 Parameter <9192 -9193> {} "g";
4091 Parameter <9194 -9195> {} "alpha";
4092 Parameter <9196 -9197> {} "omega";
4093 Method <9198 -9199> {PUBLIC FINAL} "getAttributedElementClass";
4094 Method <9203 -9204> {PUBLIC FINAL} "getSchemaClass";
4095 WildcardType <9200 -9202> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
4096 Method <9205 9206 -9207 9209> {PUBLIC} "getAttribute";
4097 TypeParameter <-9205 -9206> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ContainsPackageImpl.getAttribute(String).T";
4098 Parameter <9208 -9209> {} "attributeName";
4099 Method <9210 9211 -9212 9214 9216> {PUBLIC} "setAttribute";
4100 TypeParameter <-9210 -9215> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ContainsPackageImpl.setAttribute(String,T).T";
4101 Parameter <9213 -9214> {} "attributeName";
4102 Parameter <9215 -9216> {} "data";
4103 Method <9217 -9218 9220 9221> {PUBLIC} "readAttributeValues";
4104 Parameter <9219 -9220> {} "io";
4105 Method <9222 -9223 9225 9227 9228> {PUBLIC} "readAttributeValueFromString";
4106 Parameter <9224 -9225> {} "attributeName";
4107 Parameter <9226 -9227> {} "value";
4108 Method <9229 -9230 9232 9233 9234> {PUBLIC} "writeAttributeValues";
4109 Parameter <9231 -9232> {} "io";
4110 Method <9235 -9236 9238 9239 9240> {PUBLIC} "writeAttributeValueToString";
4111 Parameter <9237 -9238> {} "attributeName";
4112 Method <9241 -9242> {PUBLIC} "getNextContainsPackageInGraph";
4113 Method <9243 -9244> {PUBLIC} "getNextContainsPackageIncidence";
4114 Method <9245 -9246 9248> {PUBLIC} "getNextContainsPackageIncidence";
4115 Parameter <9247 -9248> {} "orientation";
4116 Method <9249 -9250> {PUBLIC} "getAggregationKind";
4117 Method <9251 -9252> {PUBLIC} "getAlphaAggregationKind";
4118 Method <9253 -9254> {PUBLIC} "getOmegaAggregationKind";
4119 Method <9255 -9256> {PROTECTED} "createReversedEdge";
4120 Method <9257 -9258> {PUBLIC} "getAlpha";
4121 Method <9259 -9260> {PUBLIC} "getOmega";
4122 SourceFile <9263 9264 9265 9266 9267 9268 9269 9270 9271 9272 9357> 117 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/DeclaresAnnotationElementImpl.java";
4123 Class <-9269 15922 15923 15924 15925 15926 15932 15934 15939 15946 15952 15958 15960 15962 15964 15968 15970 15974 15976 -15977 -15978> {PUBLIC} "ReversedDeclaresAnnotationElementImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedDeclaresAnnotationElementImpl";
4124 Class <9273 9274 9275 9276 9277 9287 9292 9295 9300 9306 9311 9318 9324 9330 9332 9334 9336 9340 9342 9346 9348 9350 9352 9354 9356 -9357 -9358> {PUBLIC} "DeclaresAnnotationElementImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresAnnotationElementImpl";
4125 Constructor <-9277 9279 9281 9283 9285> {PUBLIC} "DeclaresAnnotationElementImpl";
4126 Parameter <9278 -9279> {} "id";
4127 Parameter <9280 -9281> {} "g";
4128 Parameter <9282 -9283> {} "alpha";
4129 Parameter <9284 -9285> {} "omega";
4130 Method <9286 -9287> {PUBLIC FINAL} "getAttributedElementClass";
4131 Method <9291 -9292> {PUBLIC FINAL} "getSchemaClass";
4132 WildcardType <9288 -9290> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
4133 Method <9293 9294 -9295 9297> {PUBLIC} "getAttribute";
4134 TypeParameter <-9293 -9294> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresAnnotationElementImpl.getAttribute(String).T";
4135 Parameter <9296 -9297> {} "attributeName";
4136 Method <9298 9299 -9300 9302 9304> {PUBLIC} "setAttribute";
4137 TypeParameter <-9298 -9303> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresAnnotationElementImpl.setAttribute(String,T).T";
4138 Parameter <9301 -9302> {} "attributeName";
4139 Parameter <9303 -9304> {} "data";
4140 Method <9305 -9306 9308 9309> {PUBLIC} "readAttributeValues";
4141 Parameter <9307 -9308> {} "io";
4142 Method <9310 -9311 9313 9315 9316> {PUBLIC} "readAttributeValueFromString";
4143 Parameter <9312 -9313> {} "attributeName";
4144 Parameter <9314 -9315> {} "value";
4145 Method <9317 -9318 9320 9321 9322> {PUBLIC} "writeAttributeValues";
4146 Parameter <9319 -9320> {} "io";
4147 Method <9323 -9324 9326 9327 9328> {PUBLIC} "writeAttributeValueToString";
4148 Parameter <9325 -9326> {} "attributeName";
4149 Method <9329 -9330> {PUBLIC} "getNextDeclaresInGraph";
4150 Method <9331 -9332> {PUBLIC} "getNextDeclaresAnnotationElementInGraph";
4151 Method <9333 -9334> {PUBLIC} "getNextDeclaresIncidence";
4152 Method <9335 -9336 9338> {PUBLIC} "getNextDeclaresIncidence";
4153 Parameter <9337 -9338> {} "orientation";
4154 Method <9339 -9340> {PUBLIC} "getNextDeclaresAnnotationElementIncidence";
4155 Method <9341 -9342 9344> {PUBLIC} "getNextDeclaresAnnotationElementIncidence";
4156 Parameter <9343 -9344> {} "orientation";
4157 Method <9345 -9346> {PUBLIC} "getAggregationKind";
4158 Method <9347 -9348> {PUBLIC} "getAlphaAggregationKind";
4159 Method <9349 -9350> {PUBLIC} "getOmegaAggregationKind";
4160 Method <9351 -9352> {PROTECTED} "createReversedEdge";
4161 Method <9353 -9354> {PUBLIC} "getAlpha";
4162 Method <9355 -9356> {PUBLIC} "getOmega";
4163 SourceFile <9359 9360 9361 9362 9363 9364 9365 9366 9367 9368 9453> 117 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/DeclaresConstructorImpl.java";
4164 Class <-9365 15988 15989 15990 15991 15992 15998 16000 16005 16012 16018 16024 16026 16028 16030 16034 16036 16040 16042 -16043 -16044> {PUBLIC} "ReversedDeclaresConstructorImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedDeclaresConstructorImpl";
4165 Class <9369 9370 9371 9372 9373 9383 9388 9391 9396 9402 9407 9414 9420 9426 9428 9430 9432 9436 9438 9442 9444 9446 9448 9450 9452 -9453 -9454> {PUBLIC} "DeclaresConstructorImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresConstructorImpl";
4166 Constructor <-9373 9375 9377 9379 9381> {PUBLIC} "DeclaresConstructorImpl";
4167 Parameter <9374 -9375> {} "id";
4168 Parameter <9376 -9377> {} "g";
4169 Parameter <9378 -9379> {} "alpha";
4170 Parameter <9380 -9381> {} "omega";
4171 Method <9382 -9383> {PUBLIC FINAL} "getAttributedElementClass";
4172 Method <9387 -9388> {PUBLIC FINAL} "getSchemaClass";
4173 WildcardType <9384 -9386> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
4174 Method <9389 9390 -9391 9393> {PUBLIC} "getAttribute";
4175 TypeParameter <-9389 -9390> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresConstructorImpl.getAttribute(String).T";
4176 Parameter <9392 -9393> {} "attributeName";
4177 Method <9394 9395 -9396 9398 9400> {PUBLIC} "setAttribute";
4178 TypeParameter <-9394 -9399> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresConstructorImpl.setAttribute(String,T).T";
4179 Parameter <9397 -9398> {} "attributeName";
4180 Parameter <9399 -9400> {} "data";
4181 Method <9401 -9402 9404 9405> {PUBLIC} "readAttributeValues";
4182 Parameter <9403 -9404> {} "io";
4183 Method <9406 -9407 9409 9411 9412> {PUBLIC} "readAttributeValueFromString";
4184 Parameter <9408 -9409> {} "attributeName";
4185 Parameter <9410 -9411> {} "value";
4186 Method <9413 -9414 9416 9417 9418> {PUBLIC} "writeAttributeValues";
4187 Parameter <9415 -9416> {} "io";
4188 Method <9419 -9420 9422 9423 9424> {PUBLIC} "writeAttributeValueToString";
4189 Parameter <9421 -9422> {} "attributeName";
4190 Method <9425 -9426> {PUBLIC} "getNextDeclaresInGraph";
4191 Method <9427 -9428> {PUBLIC} "getNextDeclaresConstructorInGraph";
4192 Method <9429 -9430> {PUBLIC} "getNextDeclaresIncidence";
4193 Method <9431 -9432 9434> {PUBLIC} "getNextDeclaresIncidence";
4194 Parameter <9433 -9434> {} "orientation";
4195 Method <9435 -9436> {PUBLIC} "getNextDeclaresConstructorIncidence";
4196 Method <9437 -9438 9440> {PUBLIC} "getNextDeclaresConstructorIncidence";
4197 Parameter <9439 -9440> {} "orientation";
4198 Method <9441 -9442> {PUBLIC} "getAggregationKind";
4199 Method <9443 -9444> {PUBLIC} "getAlphaAggregationKind";
4200 Method <9445 -9446> {PUBLIC} "getOmegaAggregationKind";
4201 Method <9447 -9448> {PROTECTED} "createReversedEdge";
4202 Method <9449 -9450> {PUBLIC} "getAlpha";
4203 Method <9451 -9452> {PUBLIC} "getOmega";
4204 SourceFile <9455 9456 9457 9458 9459 9460 9461 9462 9463 9464 9549> 117 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/DeclaresEnumConstImpl.java";
4205 Class <-9461 16054 16055 16056 16057 16058 16064 16066 16071 16078 16084 16090 16092 16094 16096 16100 16102 16106 16108 -16109 -16110> {PUBLIC} "ReversedDeclaresEnumConstImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedDeclaresEnumConstImpl";
4206 Class <9465 9466 9467 9468 9469 9479 9484 9487 9492 9498 9503 9510 9516 9522 9524 9526 9528 9532 9534 9538 9540 9542 9544 9546 9548 -9549 -9550> {PUBLIC} "DeclaresEnumConstImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresEnumConstImpl";
4207 Constructor <-9469 9471 9473 9475 9477> {PUBLIC} "DeclaresEnumConstImpl";
4208 Parameter <9470 -9471> {} "id";
4209 Parameter <9472 -9473> {} "g";
4210 Parameter <9474 -9475> {} "alpha";
4211 Parameter <9476 -9477> {} "omega";
4212 Method <9478 -9479> {PUBLIC FINAL} "getAttributedElementClass";
4213 Method <9483 -9484> {PUBLIC FINAL} "getSchemaClass";
4214 WildcardType <9480 -9482> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
4215 Method <9485 9486 -9487 9489> {PUBLIC} "getAttribute";
4216 TypeParameter <-9485 -9486> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresEnumConstImpl.getAttribute(String).T";
4217 Parameter <9488 -9489> {} "attributeName";
4218 Method <9490 9491 -9492 9494 9496> {PUBLIC} "setAttribute";
4219 TypeParameter <-9490 -9495> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresEnumConstImpl.setAttribute(String,T).T";
4220 Parameter <9493 -9494> {} "attributeName";
4221 Parameter <9495 -9496> {} "data";
4222 Method <9497 -9498 9500 9501> {PUBLIC} "readAttributeValues";
4223 Parameter <9499 -9500> {} "io";
4224 Method <9502 -9503 9505 9507 9508> {PUBLIC} "readAttributeValueFromString";
4225 Parameter <9504 -9505> {} "attributeName";
4226 Parameter <9506 -9507> {} "value";
4227 Method <9509 -9510 9512 9513 9514> {PUBLIC} "writeAttributeValues";
4228 Parameter <9511 -9512> {} "io";
4229 Method <9515 -9516 9518 9519 9520> {PUBLIC} "writeAttributeValueToString";
4230 Parameter <9517 -9518> {} "attributeName";
4231 Method <9521 -9522> {PUBLIC} "getNextDeclaresInGraph";
4232 Method <9523 -9524> {PUBLIC} "getNextDeclaresEnumConstInGraph";
4233 Method <9525 -9526> {PUBLIC} "getNextDeclaresIncidence";
4234 Method <9527 -9528 9530> {PUBLIC} "getNextDeclaresIncidence";
4235 Parameter <9529 -9530> {} "orientation";
4236 Method <9531 -9532> {PUBLIC} "getNextDeclaresEnumConstIncidence";
4237 Method <9533 -9534 9536> {PUBLIC} "getNextDeclaresEnumConstIncidence";
4238 Parameter <9535 -9536> {} "orientation";
4239 Method <9537 -9538> {PUBLIC} "getAggregationKind";
4240 Method <9539 -9540> {PUBLIC} "getAlphaAggregationKind";
4241 Method <9541 -9542> {PUBLIC} "getOmegaAggregationKind";
4242 Method <9543 -9544> {PROTECTED} "createReversedEdge";
4243 Method <9545 -9546> {PUBLIC} "getAlpha";
4244 Method <9547 -9548> {PUBLIC} "getOmega";
4245 SourceFile <9551 9552 9553 9554 9555 9556 9557 9558 9559 9560 9645> 117 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/DeclaresFieldImpl.java";
4246 Class <-9557 16120 16121 16122 16123 16124 16130 16132 16137 16144 16150 16156 16158 16160 16162 16166 16168 16172 16174 -16175 -16176> {PUBLIC} "ReversedDeclaresFieldImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedDeclaresFieldImpl";
4247 Class <9561 9562 9563 9564 9565 9575 9580 9583 9588 9594 9599 9606 9612 9618 9620 9622 9624 9628 9630 9634 9636 9638 9640 9642 9644 -9645 -9646> {PUBLIC} "DeclaresFieldImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresFieldImpl";
4248 Constructor <-9565 9567 9569 9571 9573> {PUBLIC} "DeclaresFieldImpl";
4249 Parameter <9566 -9567> {} "id";
4250 Parameter <9568 -9569> {} "g";
4251 Parameter <9570 -9571> {} "alpha";
4252 Parameter <9572 -9573> {} "omega";
4253 Method <9574 -9575> {PUBLIC FINAL} "getAttributedElementClass";
4254 Method <9579 -9580> {PUBLIC FINAL} "getSchemaClass";
4255 WildcardType <9576 -9578> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
4256 Method <9581 9582 -9583 9585> {PUBLIC} "getAttribute";
4257 TypeParameter <-9581 -9582> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresFieldImpl.getAttribute(String).T";
4258 Parameter <9584 -9585> {} "attributeName";
4259 Method <9586 9587 -9588 9590 9592> {PUBLIC} "setAttribute";
4260 TypeParameter <-9586 -9591> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresFieldImpl.setAttribute(String,T).T";
4261 Parameter <9589 -9590> {} "attributeName";
4262 Parameter <9591 -9592> {} "data";
4263 Method <9593 -9594 9596 9597> {PUBLIC} "readAttributeValues";
4264 Parameter <9595 -9596> {} "io";
4265 Method <9598 -9599 9601 9603 9604> {PUBLIC} "readAttributeValueFromString";
4266 Parameter <9600 -9601> {} "attributeName";
4267 Parameter <9602 -9603> {} "value";
4268 Method <9605 -9606 9608 9609 9610> {PUBLIC} "writeAttributeValues";
4269 Parameter <9607 -9608> {} "io";
4270 Method <9611 -9612 9614 9615 9616> {PUBLIC} "writeAttributeValueToString";
4271 Parameter <9613 -9614> {} "attributeName";
4272 Method <9617 -9618> {PUBLIC} "getNextDeclaresInGraph";
4273 Method <9619 -9620> {PUBLIC} "getNextDeclaresFieldInGraph";
4274 Method <9621 -9622> {PUBLIC} "getNextDeclaresIncidence";
4275 Method <9623 -9624 9626> {PUBLIC} "getNextDeclaresIncidence";
4276 Parameter <9625 -9626> {} "orientation";
4277 Method <9627 -9628> {PUBLIC} "getNextDeclaresFieldIncidence";
4278 Method <9629 -9630 9632> {PUBLIC} "getNextDeclaresFieldIncidence";
4279 Parameter <9631 -9632> {} "orientation";
4280 Method <9633 -9634> {PUBLIC} "getAggregationKind";
4281 Method <9635 -9636> {PUBLIC} "getAlphaAggregationKind";
4282 Method <9637 -9638> {PUBLIC} "getOmegaAggregationKind";
4283 Method <9639 -9640> {PROTECTED} "createReversedEdge";
4284 Method <9641 -9642> {PUBLIC} "getAlpha";
4285 Method <9643 -9644> {PUBLIC} "getOmega";
4286 SourceFile <9647 9648 9649 9650 9651 9652 9653 9654 9655 9656 9741> 117 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/DeclaresMethodImpl.java";
4287 Class <-9653 16186 16187 16188 16189 16190 16196 16198 16203 16210 16216 16222 16224 16226 16228 16232 16234 16238 16240 -16241 -16242> {PUBLIC} "ReversedDeclaresMethodImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedDeclaresMethodImpl";
4288 Class <9657 9658 9659 9660 9661 9671 9676 9679 9684 9690 9695 9702 9708 9714 9716 9718 9720 9724 9726 9730 9732 9734 9736 9738 9740 -9741 -9742> {PUBLIC} "DeclaresMethodImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresMethodImpl";
4289 Constructor <-9661 9663 9665 9667 9669> {PUBLIC} "DeclaresMethodImpl";
4290 Parameter <9662 -9663> {} "id";
4291 Parameter <9664 -9665> {} "g";
4292 Parameter <9666 -9667> {} "alpha";
4293 Parameter <9668 -9669> {} "omega";
4294 Method <9670 -9671> {PUBLIC FINAL} "getAttributedElementClass";
4295 Method <9675 -9676> {PUBLIC FINAL} "getSchemaClass";
4296 WildcardType <9672 -9674> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
4297 Method <9677 9678 -9679 9681> {PUBLIC} "getAttribute";
4298 TypeParameter <-9677 -9678> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresMethodImpl.getAttribute(String).T";
4299 Parameter <9680 -9681> {} "attributeName";
4300 Method <9682 9683 -9684 9686 9688> {PUBLIC} "setAttribute";
4301 TypeParameter <-9682 -9687> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresMethodImpl.setAttribute(String,T).T";
4302 Parameter <9685 -9686> {} "attributeName";
4303 Parameter <9687 -9688> {} "data";
4304 Method <9689 -9690 9692 9693> {PUBLIC} "readAttributeValues";
4305 Parameter <9691 -9692> {} "io";
4306 Method <9694 -9695 9697 9699 9700> {PUBLIC} "readAttributeValueFromString";
4307 Parameter <9696 -9697> {} "attributeName";
4308 Parameter <9698 -9699> {} "value";
4309 Method <9701 -9702 9704 9705 9706> {PUBLIC} "writeAttributeValues";
4310 Parameter <9703 -9704> {} "io";
4311 Method <9707 -9708 9710 9711 9712> {PUBLIC} "writeAttributeValueToString";
4312 Parameter <9709 -9710> {} "attributeName";
4313 Method <9713 -9714> {PUBLIC} "getNextDeclaresInGraph";
4314 Method <9715 -9716> {PUBLIC} "getNextDeclaresMethodInGraph";
4315 Method <9717 -9718> {PUBLIC} "getNextDeclaresIncidence";
4316 Method <9719 -9720 9722> {PUBLIC} "getNextDeclaresIncidence";
4317 Parameter <9721 -9722> {} "orientation";
4318 Method <9723 -9724> {PUBLIC} "getNextDeclaresMethodIncidence";
4319 Method <9725 -9726 9728> {PUBLIC} "getNextDeclaresMethodIncidence";
4320 Parameter <9727 -9728> {} "orientation";
4321 Method <9729 -9730> {PUBLIC} "getAggregationKind";
4322 Method <9731 -9732> {PUBLIC} "getAlphaAggregationKind";
4323 Method <9733 -9734> {PUBLIC} "getOmegaAggregationKind";
4324 Method <9735 -9736> {PROTECTED} "createReversedEdge";
4325 Method <9737 -9738> {PUBLIC} "getAlpha";
4326 Method <9739 -9740> {PUBLIC} "getOmega";
4327 SourceFile <9743 9744 9745 9746 9747 9748 9749 9750 9751 9836> 116 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/DeclaresNestedClassifierImpl.java";
4328 Class <-9749 16251 16252 16253 16254 16255 16261 16263 16268 16275 16281 16287 16289 16291 16293 16297 16299 16303 16305 -16306 -16307> {PUBLIC} "ReversedDeclaresNestedClassifierImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedDeclaresNestedClassifierImpl";
4329 Class <9752 9753 9754 9755 9756 9766 9771 9774 9779 9785 9790 9797 9803 9809 9811 9813 9815 9819 9821 9825 9827 9829 9831 9833 9835 -9836 -9837> {PUBLIC} "DeclaresNestedClassifierImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresNestedClassifierImpl";
4330 Constructor <-9756 9758 9760 9762 9764> {PUBLIC} "DeclaresNestedClassifierImpl";
4331 Parameter <9757 -9758> {} "id";
4332 Parameter <9759 -9760> {} "g";
4333 Parameter <9761 -9762> {} "alpha";
4334 Parameter <9763 -9764> {} "omega";
4335 Method <9765 -9766> {PUBLIC FINAL} "getAttributedElementClass";
4336 Method <9770 -9771> {PUBLIC FINAL} "getSchemaClass";
4337 WildcardType <9767 -9769> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
4338 Method <9772 9773 -9774 9776> {PUBLIC} "getAttribute";
4339 TypeParameter <-9772 -9773> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresNestedClassifierImpl.getAttribute(String).T";
4340 Parameter <9775 -9776> {} "attributeName";
4341 Method <9777 9778 -9779 9781 9783> {PUBLIC} "setAttribute";
4342 TypeParameter <-9777 -9782> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.DeclaresNestedClassifierImpl.setAttribute(String,T).T";
4343 Parameter <9780 -9781> {} "attributeName";
4344 Parameter <9782 -9783> {} "data";
4345 Method <9784 -9785 9787 9788> {PUBLIC} "readAttributeValues";
4346 Parameter <9786 -9787> {} "io";
4347 Method <9789 -9790 9792 9794 9795> {PUBLIC} "readAttributeValueFromString";
4348 Parameter <9791 -9792> {} "attributeName";
4349 Parameter <9793 -9794> {} "value";
4350 Method <9796 -9797 9799 9800 9801> {PUBLIC} "writeAttributeValues";
4351 Parameter <9798 -9799> {} "io";
4352 Method <9802 -9803 9805 9806 9807> {PUBLIC} "writeAttributeValueToString";
4353 Parameter <9804 -9805> {} "attributeName";
4354 Method <9808 -9809> {PUBLIC} "getNextDeclaresInGraph";
4355 Method <9810 -9811> {PUBLIC} "getNextDeclaresNestedClassifierInGraph";
4356 Method <9812 -9813> {PUBLIC} "getNextDeclaresIncidence";
4357 Method <9814 -9815 9817> {PUBLIC} "getNextDeclaresIncidence";
4358 Parameter <9816 -9817> {} "orientation";
4359 Method <9818 -9819> {PUBLIC} "getNextDeclaresNestedClassifierIncidence";
4360 Method <9820 -9821 9823> {PUBLIC} "getNextDeclaresNestedClassifierIncidence";
4361 Parameter <9822 -9823> {} "orientation";
4362 Method <9824 -9825> {PUBLIC} "getAggregationKind";
4363 Method <9826 -9827> {PUBLIC} "getAlphaAggregationKind";
4364 Method <9828 -9829> {PUBLIC} "getOmegaAggregationKind";
4365 Method <9830 -9831> {PROTECTED} "createReversedEdge";
4366 Method <9832 -9833> {PUBLIC} "getAlpha";
4367 Method <9834 -9835> {PUBLIC} "getOmega";
4368 SourceFile <9838 9839 9840 9841 9842 9843 9844 9845 9846 9847 9931> 140 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/DefinesImpl.java";
4369 Class <-9844 16317 16318 16319 16320 16326 16328 16330 16334 16339 16346 16352 16358 16360 16362 16366 16368 -16369 -16370> {PUBLIC} "ReversedDefinesImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedDefinesImpl";
4370 Class <9848 9849 9850 9852 9853 9863 9868 9871 9876 9882 9884 9888 9893 9900 9906 9912 9914 9916 9920 9922 9924 9926 9928 9930 -9931 -9932> {PUBLIC} "DefinesImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.DefinesImpl";
4371 Field <9851 -9852> {PROTECTED} "_lineNo";
4372 Constructor <-9853 9855 9857 9859 9861> {PUBLIC} "DefinesImpl";
4373 Parameter <9854 -9855> {} "id";
4374 Parameter <9856 -9857> {} "g";
4375 Parameter <9858 -9859> {} "alpha";
4376 Parameter <9860 -9861> {} "omega";
4377 Method <9862 -9863> {PUBLIC FINAL} "getAttributedElementClass";
4378 Method <9867 -9868> {PUBLIC FINAL} "getSchemaClass";
4379 WildcardType <9864 -9866> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
4380 Method <9869 9870 -9871 9873> {PUBLIC} "getAttribute";
4381 TypeParameter <-9869 -9870> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.DefinesImpl.getAttribute(String).T";
4382 Parameter <9872 -9873> {} "attributeName";
4383 Method <9874 9875 -9876 9878 9880> {PUBLIC} "setAttribute";
4384 TypeParameter <-9874 -9879> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.DefinesImpl.setAttribute(String,T).T";
4385 Parameter <9877 -9878> {} "attributeName";
4386 Parameter <9879 -9880> {} "data";
4387 Method <9881 -9882> {PUBLIC} "get_lineNo";
4388 Method <9883 -9884 9886> {PUBLIC} "set_lineNo";
4389 Parameter <9885 -9886> {} "_lineNo";
4390 Method <9887 -9888 9890 9891> {PUBLIC} "readAttributeValues";
4391 Parameter <9889 -9890> {} "io";
4392 Method <9892 -9893 9895 9897 9898> {PUBLIC} "readAttributeValueFromString";
4393 Parameter <9894 -9895> {} "attributeName";
4394 Parameter <9896 -9897> {} "value";
4395 Method <9899 -9900 9902 9903 9904> {PUBLIC} "writeAttributeValues";
4396 Parameter <9901 -9902> {} "io";
4397 Method <9905 -9906 9908 9909 9910> {PUBLIC} "writeAttributeValueToString";
4398 Parameter <9907 -9908> {} "attributeName";
4399 Method <9911 -9912> {PUBLIC} "getNextDefinesInGraph";
4400 Method <9913 -9914> {PUBLIC} "getNextDefinesIncidence";
4401 Method <9915 -9916 9918> {PUBLIC} "getNextDefinesIncidence";
4402 Parameter <9917 -9918> {} "orientation";
4403 Method <9919 -9920> {PUBLIC} "getAggregationKind";
4404 Method <9921 -9922> {PUBLIC} "getAlphaAggregationKind";
4405 Method <9923 -9924> {PUBLIC} "getOmegaAggregationKind";
4406 Method <9925 -9926> {PROTECTED} "createReversedEdge";
4407 Method <9927 -9928> {PUBLIC} "getAlpha";
4408 Method <9929 -9930> {PUBLIC} "getOmega";
4409 SourceFile <9933 9934 9935 9936 9937 9938 9939 10098> 243 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/EnumConstImpl.java";
4410 Class <9940 9941 9942 9943 9945 9946 9952 9957 9960 9965 9971 9973 9977 9982 9989 9995 10001 10003 10005 10007 10009 10013 10015 10019 10021 10025 10032 10034 10042 10048 10054 10061 10063 10067 10071 10075 10081 10085 10091 10095 -10098 -10099> {PUBLIC} "EnumConstImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumConstImpl";
4411 Field <9944 -9945> {PROTECTED} "_name";
4412 Constructor <-9946 9948 9950> {PUBLIC} "EnumConstImpl";
4413 Parameter <9947 -9948> {} "id";
4414 Parameter <9949 -9950> {} "g";
4415 Method <9951 -9952> {PUBLIC FINAL} "getAttributedElementClass";
4416 Method <9956 -9957> {PUBLIC FINAL} "getSchemaClass";
4417 WildcardType <9953 -9955> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
4418 Method <9958 9959 -9960 9962> {PUBLIC} "getAttribute";
4419 TypeParameter <-9958 -9959> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumConstImpl.getAttribute(String).T";
4420 Parameter <9961 -9962> {} "attributeName";
4421 Method <9963 9964 -9965 9967 9969> {PUBLIC} "setAttribute";
4422 TypeParameter <-9963 -9968> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumConstImpl.setAttribute(String,T).T";
4423 Parameter <9966 -9967> {} "attributeName";
4424 Parameter <9968 -9969> {} "data";
4425 Method <9970 -9971> {PUBLIC} "get_name";
4426 Method <9972 -9973 9975> {PUBLIC} "set_name";
4427 Parameter <9974 -9975> {} "_name";
4428 Method <9976 -9977 9979 9980> {PUBLIC} "readAttributeValues";
4429 Parameter <9978 -9979> {} "io";
4430 Method <9981 -9982 9984 9986 9987> {PUBLIC} "readAttributeValueFromString";
4431 Parameter <9983 -9984> {} "attributeName";
4432 Parameter <9985 -9986> {} "value";
4433 Method <9988 -9989 9991 9992 9993> {PUBLIC} "writeAttributeValues";
4434 Parameter <9990 -9991> {} "io";
4435 Method <9994 -9995 9997 9998 9999> {PUBLIC} "writeAttributeValueToString";
4436 Parameter <9996 -9997> {} "attributeName";
4437 Method <10000 -10001> {PUBLIC} "getNextEnumConst";
4438 Method <10002 -10003> {PUBLIC} "getNextMember";
4439 Method <10004 -10005> {PUBLIC} "getNextNamedElement";
4440 Method <10006 -10007> {PUBLIC} "getFirstDeclaresEnumConstIncidence";
4441 Method <10008 -10009 10011> {PUBLIC} "getFirstDeclaresEnumConstIncidence";
4442 Parameter <10010 -10011> {} "orientation";
4443 Method <10012 -10013> {PUBLIC} "getFirstImportsIncidence";
4444 Method <10014 -10015 10017> {PUBLIC} "getFirstImportsIncidence";
4445 Parameter <10016 -10017> {} "orientation";
4446 Method <10018 -10019> {PUBLIC} "getFirstDeclaresIncidence";
4447 Method <10020 -10021 10023> {PUBLIC} "getFirstDeclaresIncidence";
4448 Parameter <10022 -10023> {} "orientation";
4449 Method <10024 -10025 10027> {PUBLIC} "add_importers";
4450 Parameter <10026 -10027> {} "vertex";
4451 Method <10031 -10032> {PUBLIC} "remove_importers";
4452 WildcardType <10028 -10030> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
4453 Method <10033 -10034 10036> {PUBLIC} "remove_importers";
4454 Parameter <10035 -10036> {} "vertex";
4455 Method <10038 10041 -10042> {PUBLIC} "get_importers";
4456 TypeParameter <10037 -10038 -10040> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumConstImpl.get_importers().V";
4457 ParametrizedType <10039 10040 -10041 10045 10046 -10047> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumConstImpl.get_importers|V>";
4458 Method <10044 10047 -10048 10052> {PUBLIC} "get_importers";
4459 TypeParameter <10043 -10044 -10046 -10050> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumConstImpl.get_importers(VertexFilter<V>).V";
4460 ParametrizedType <10049 10050 -10051> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumConstImpl.get_importers|V>";
4461 Parameter <10051 -10052> {} "filter";
4462 Method <10053 -10054 10056> {PUBLIC} "add_parent";
4463 Parameter <10055 -10056> {} "vertex";
4464 Method <10060 -10061> {PUBLIC} "remove_parent";
4465 WildcardType <10057 -10059> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
4466 Method <10062 -10063 10065> {PUBLIC} "remove_parent";
4467 Parameter <10064 -10065> {} "vertex";
4468 Method <10066 -10067> {PUBLIC} "get_parent";
4469 Method <10070 -10071> {PUBLIC} "getDeclaresEnumConstIncidences";
4470 Method <10074 -10075 10077> {PUBLIC} "getDeclaresEnumConstIncidences";
4471 Parameter <10076 -10077> {} "direction";
4472 Method <10080 -10081> {PUBLIC} "getImportsIncidences";
4473 Method <10084 -10085 10087> {PUBLIC} "getImportsIncidences";
4474 Parameter <10086 -10087> {} "direction";
4475 Method <10090 -10091> {PUBLIC} "getDeclaresIncidences";
4476 Method <10094 -10095 10097> {PUBLIC} "getDeclaresIncidences";
4477 Parameter <10096 -10097> {} "direction";
4478 SourceFile <10100 10101 10102 10103 10104 10105 10106 10920> 1234 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/EnumImpl.java";
4479 Class <10107 10108 10109 10110 10114 10116 10118 10119 10125 10130 10133 10138 10146 10148 10154 10156 10160 10162 10166 10171 10178 10184 10190 10192 10194 10196 10198 10200 10202 10204 10206 10208 10210 10214 10216 10220 10222 10226 10228 10232 10234 10238 10240 10244 10246 10250 10252 10256 10258 10262 10264 10268 10270 10274 10276 10280 10282 10286 10288 10292 10294 10298 10300 10304 10306 10310 10312 10316 10318 10322 10324 10328 10335 10337 10345 10351 10357 10364 10366 10374 10380 10386 10393 10395 10403 10409 10415 10422 10424 10428 10430 10437 10439 10447 10453 10459 10466 10468 10476 10482 10488 10495 10497 10505 10511 10517 10524 10526 10534 10540 10546 10553 10555 10559 10561 10568 10570 10578 10584 10590 10597 10599 10607 10613 10619 10626 10628 10636 10642 10648 10655 10657 10661 10663 10670 10672 10680 10686 10692 10699 10701 10709 10715 10723 10727 10733 10737 10743 10747 10753 10757 10763 10767 10773 10777 10783 10787 10793 10797 10803 10807 10813 10817 10823 10827 10833 10837 10843 10847 10853 10857 10863 10867 10873 10877 10883 10887 10893 10897 10903 10907 10913 10917 -10920 -10921> {PUBLIC} "EnumImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl";
4480 Field <10113 -10114> {PROTECTED} "_modifiers";
4481 Field <10115 -10116> {PROTECTED} "_name";
4482 Field <10117 -10118> {PROTECTED} "_qualifiedName";
4483 Constructor <-10119 10121 10123> {PUBLIC} "EnumImpl";
4484 Parameter <10120 -10121> {} "id";
4485 Parameter <10122 -10123> {} "g";
4486 Method <10124 -10125> {PUBLIC FINAL} "getAttributedElementClass";
4487 Method <10129 -10130> {PUBLIC FINAL} "getSchemaClass";
4488 WildcardType <10126 -10128> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
4489 Method <10131 10132 -10133 10135> {PUBLIC} "getAttribute";
4490 TypeParameter <-10131 -10132> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.getAttribute(String).T";
4491 Parameter <10134 -10135> {} "attributeName";
4492 Method <10136 10137 -10138 10140 10142> {PUBLIC} "setAttribute";
4493 TypeParameter <-10136 -10141> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.setAttribute(String,T).T";
4494 Parameter <10139 -10140> {} "attributeName";
4495 Parameter <10141 -10142> {} "data";
4496 Method <10145 -10146> {PUBLIC} "get_modifiers";
4497 Method <10147 -10148 10152> {PUBLIC} "set_modifiers";
4498 Parameter <10151 -10152> {} "_modifiers";
4499 Method <10153 -10154> {PUBLIC} "get_name";
4500 Method <10155 -10156 10158> {PUBLIC} "set_name";
4501 Parameter <10157 -10158> {} "_name";
4502 Method <10159 -10160> {PUBLIC} "get_qualifiedName";
4503 Method <10161 -10162 10164> {PUBLIC} "set_qualifiedName";
4504 Parameter <10163 -10164> {} "_qualifiedName";
4505 Method <10165 -10166 10168 10169> {PUBLIC} "readAttributeValues";
4506 Parameter <10167 -10168> {} "io";
4507 Method <10170 -10171 10173 10175 10176> {PUBLIC} "readAttributeValueFromString";
4508 Parameter <10172 -10173> {} "attributeName";
4509 Parameter <10174 -10175> {} "value";
4510 Method <10177 -10178 10180 10181 10182> {PUBLIC} "writeAttributeValues";
4511 Parameter <10179 -10180> {} "io";
4512 Method <10183 -10184 10186 10187 10188> {PUBLIC} "writeAttributeValueToString";
4513 Parameter <10185 -10186> {} "attributeName";
4514 Method <10189 -10190> {PUBLIC} "getNextAbstractClassifier";
4515 Method <10191 -10192> {PUBLIC} "getNextClassifier";
4516 Method <10193 -10194> {PUBLIC} "getNextEnum";
4517 Method <10195 -10196> {PUBLIC} "getNextMember";
4518 Method <10197 -10198> {PUBLIC} "getNextModifiableElement";
4519 Method <10199 -10200> {PUBLIC} "getNextNamedElement";
4520 Method <10201 -10202> {PUBLIC} "getNextQualifiedNamedElement";
4521 Method <10203 -10204> {PUBLIC} "getNextType";
4522 Method <10205 -10206> {PUBLIC} "getNextTypeParametrizable";
4523 Method <10207 -10208> {PUBLIC} "getFirstDefinesIncidence";
4524 Method <10209 -10210 10212> {PUBLIC} "getFirstDefinesIncidence";
4525 Parameter <10211 -10212> {} "orientation";
4526 Method <10213 -10214> {PUBLIC} "getFirstHasUpperBoundIncidence";
4527 Method <10215 -10216 10218> {PUBLIC} "getFirstHasUpperBoundIncidence";
4528 Parameter <10217 -10218> {} "orientation";
4529 Method <10219 -10220> {PUBLIC} "getFirstContainsClassifierIncidence";
4530 Method <10221 -10222 10224> {PUBLIC} "getFirstContainsClassifierIncidence";
4531 Parameter <10223 -10224> {} "orientation";
4532 Method <10225 -10226> {PUBLIC} "getFirstDeclaresEnumConstIncidence";
4533 Method <10227 -10228 10230> {PUBLIC} "getFirstDeclaresEnumConstIncidence";
4534 Parameter <10229 -10230> {} "orientation";
4535 Method <10231 -10232> {PUBLIC} "getFirstHasTypeArgIncidence";
4536 Method <10233 -10234 10236> {PUBLIC} "getFirstHasTypeArgIncidence";
4537 Parameter <10235 -10236> {} "orientation";
4538 Method <10237 -10238> {PUBLIC} "getFirstDeclaresMethodIncidence";
4539 Method <10239 -10240 10242> {PUBLIC} "getFirstDeclaresMethodIncidence";
4540 Parameter <10241 -10242> {} "orientation";
4541 Method <10243 -10244> {PUBLIC} "getFirstHasElementTypeIncidence";
4542 Method <10245 -10246 10248> {PUBLIC} "getFirstHasElementTypeIncidence";
4543 Parameter <10247 -10248> {} "orientation";
4544 Method <10249 -10250> {PUBLIC} "getFirstThrowsIncidence";
4545 Method <10251 -10252 10254> {PUBLIC} "getFirstThrowsIncidence";
4546 Parameter <10253 -10254> {} "orientation";
4547 Method <10255 -10256> {PUBLIC} "getFirstImportsIncidence";
4548 Method <10257 -10258 10260> {PUBLIC} "getFirstImportsIncidence";
4549 Parameter <10259 -10260> {} "orientation";
4550 Method <10261 -10262> {PUBLIC} "getFirstHasBoundIncidence";
4551 Method <10263 -10264 10266> {PUBLIC} "getFirstHasBoundIncidence";
4552 Parameter <10265 -10266> {} "orientation";
4553 Method <10267 -10268> {PUBLIC} "getFirstHasLowerBoundIncidence";
4554 Method <10269 -10270 10272> {PUBLIC} "getFirstHasLowerBoundIncidence";
4555 Parameter <10271 -10272> {} "orientation";
4556 Method <10273 -10274> {PUBLIC} "getFirstDeclaresIncidence";
4557 Method <10275 -10276 10278> {PUBLIC} "getFirstDeclaresIncidence";
4558 Parameter <10277 -10278> {} "orientation";
4559 Method <10279 -10280> {PUBLIC} "getFirstDeclaresConstructorIncidence";
4560 Method <10281 -10282 10284> {PUBLIC} "getFirstDeclaresConstructorIncidence";
4561 Parameter <10283 -10284> {} "orientation";
4562 Method <10285 -10286> {PUBLIC} "getFirstHasGenericTypeIncidence";
4563 Method <10287 -10288 10290> {PUBLIC} "getFirstHasGenericTypeIncidence";
4564 Parameter <10289 -10290> {} "orientation";
4565 Method <10291 -10292> {PUBLIC} "getFirstExtendsIncidence";
4566 Method <10293 -10294 10296> {PUBLIC} "getFirstExtendsIncidence";
4567 Parameter <10295 -10296> {} "orientation";
4568 Method <10297 -10298> {PUBLIC} "getFirstImplementsIncidence";
4569 Method <10299 -10300 10302> {PUBLIC} "getFirstImplementsIncidence";
4570 Parameter <10301 -10302> {} "orientation";
4571 Method <10303 -10304> {PUBLIC} "getFirstHasTypeIncidence";
4572 Method <10305 -10306 10308> {PUBLIC} "getFirstHasTypeIncidence";
4573 Parameter <10307 -10308> {} "orientation";
4574 Method <10309 -10310> {PUBLIC} "getFirstDeclaresNestedClassifierIncidence";
4575 Method <10311 -10312 10314> {PUBLIC} "getFirstDeclaresNestedClassifierIncidence";
4576 Parameter <10313 -10314> {} "orientation";
4577 Method <10315 -10316> {PUBLIC} "getFirstHasTypeParamIncidence";
4578 Method <10317 -10318 10320> {PUBLIC} "getFirstHasTypeParamIncidence";
4579 Parameter <10319 -10320> {} "orientation";
4580 Method <10321 -10322> {PUBLIC} "getFirstDeclaresFieldIncidence";
4581 Method <10323 -10324 10326> {PUBLIC} "getFirstDeclaresFieldIncidence";
4582 Parameter <10325 -10326> {} "orientation";
4583 Method <10327 -10328 10330> {PUBLIC} "add_constructors";
4584 Parameter <10329 -10330> {} "vertex";
4585 Method <10334 -10335> {PUBLIC} "remove_constructors";
4586 WildcardType <10331 -10333> "? extends Constructor" "? extends de.uni_koblenz.jgralab.jex.schema.Constructor";
4587 Method <10336 -10337 10339> {PUBLIC} "remove_constructors";
4588 Parameter <10338 -10339> {} "vertex";
4589 Method <10341 10344 -10345> {PUBLIC} "get_constructors";
4590 TypeParameter <10340 -10341 -10343> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_constructors().V";
4591 ParametrizedType <10342 10343 -10344 10348 10349 -10350> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_constructors|V>";
4592 Method <10347 10350 -10351 10355> {PUBLIC} "get_constructors";
4593 TypeParameter <10346 -10347 -10349 -10353> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_constructors(VertexFilter<V>).V";
4594 ParametrizedType <10352 10353 -10354> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_constructors|V>";
4595 Parameter <10354 -10355> {} "filter";
4596 Method <10356 -10357 10359> {PUBLIC} "add_importers";
4597 Parameter <10358 -10359> {} "vertex";
4598 Method <10363 -10364> {PUBLIC} "remove_importers";
4599 WildcardType <10360 -10362> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
4600 Method <10365 -10366 10368> {PUBLIC} "remove_importers";
4601 Parameter <10367 -10368> {} "vertex";
4602 Method <10370 10373 -10374> {PUBLIC} "get_importers";
4603 TypeParameter <10369 -10370 -10372> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_importers().V";
4604 ParametrizedType <10371 10372 -10373 10377 10378 -10379> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_importers|V>";
4605 Method <10376 10379 -10380 10384> {PUBLIC} "get_importers";
4606 TypeParameter <10375 -10376 -10378 -10382> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_importers(VertexFilter<V>).V";
4607 ParametrizedType <10381 10382 -10383> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_importers|V>";
4608 Parameter <10383 -10384> {} "filter";
4609 Method <10385 -10386 10388> {PUBLIC} "add_fields";
4610 Parameter <10387 -10388> {} "vertex";
4611 Method <10392 -10393> {PUBLIC} "remove_fields";
4612 WildcardType <10389 -10391> "? extends Field" "? extends de.uni_koblenz.jgralab.jex.schema.Field";
4613 Method <10394 -10395 10397> {PUBLIC} "remove_fields";
4614 Parameter <10396 -10397> {} "vertex";
4615 Method <10399 10402 -10403> {PUBLIC} "get_fields";
4616 TypeParameter <10398 -10399 -10401> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_fields().V";
4617 ParametrizedType <10400 10401 -10402 10406 10407 -10408> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_fields|V>";
4618 Method <10405 10408 -10409 10413> {PUBLIC} "get_fields";
4619 TypeParameter <10404 -10405 -10407 -10411> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_fields(VertexFilter<V>).V";
4620 ParametrizedType <10410 10411 -10412> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_fields|V>";
4621 Parameter <10412 -10413> {} "filter";
4622 Method <10414 -10415 10417> {PUBLIC} "add_sourceFile";
4623 Parameter <10416 -10417> {} "vertex";
4624 Method <10421 -10422> {PUBLIC} "remove_sourceFile";
4625 WildcardType <10418 -10420> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
4626 Method <10423 -10424 10426> {PUBLIC} "remove_sourceFile";
4627 Parameter <10425 -10426> {} "vertex";
4628 Method <10427 -10428> {PUBLIC} "get_sourceFile";
4629 Method <10429 -10430 10432> {PUBLIC} "add_members";
4630 Parameter <10431 -10432> {} "vertex";
4631 Method <10436 -10437> {PUBLIC} "remove_members";
4632 WildcardType <10433 -10435> "? extends Member" "? extends de.uni_koblenz.jgralab.jex.schema.Member";
4633 Method <10438 -10439 10441> {PUBLIC} "remove_members";
4634 Parameter <10440 -10441> {} "vertex";
4635 Method <10443 10446 -10447> {PUBLIC} "get_members";
4636 TypeParameter <10442 -10443 -10445> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_members().V";
4637 ParametrizedType <10444 10445 -10446 10450 10451 -10452> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_members|V>";
4638 Method <10449 10452 -10453 10457> {PUBLIC} "get_members";
4639 TypeParameter <10448 -10449 -10451 -10455> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_members(VertexFilter<V>).V";
4640 ParametrizedType <10454 10455 -10456> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_members|V>";
4641 Parameter <10456 -10457> {} "filter";
4642 Method <10458 -10459 10461> {PUBLIC} "add_subclasses";
4643 Parameter <10460 -10461> {} "vertex";
4644 Method <10465 -10466> {PUBLIC} "remove_subclasses";
4645 WildcardType <10462 -10464> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
4646 Method <10467 -10468 10470> {PUBLIC} "remove_subclasses";
4647 Parameter <10469 -10470> {} "vertex";
4648 Method <10472 10475 -10476> {PUBLIC} "get_subclasses";
4649 TypeParameter <10471 -10472 -10474> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_subclasses().V";
4650 ParametrizedType <10473 10474 -10475 10479 10480 -10481> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_subclasses|V>";
4651 Method <10478 10481 -10482 10486> {PUBLIC} "get_subclasses";
4652 TypeParameter <10477 -10478 -10480 -10484> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_subclasses(VertexFilter<V>).V";
4653 ParametrizedType <10483 10484 -10485> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_subclasses|V>";
4654 Parameter <10485 -10486> {} "filter";
4655 Method <10487 -10488 10490> {PUBLIC} "add_interfaces";
4656 Parameter <10489 -10490> {} "vertex";
4657 Method <10494 -10495> {PUBLIC} "remove_interfaces";
4658 WildcardType <10491 -10493> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
4659 Method <10496 -10497 10499> {PUBLIC} "remove_interfaces";
4660 Parameter <10498 -10499> {} "vertex";
4661 Method <10501 10504 -10505> {PUBLIC} "get_interfaces";
4662 TypeParameter <10500 -10501 -10503> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_interfaces().V";
4663 ParametrizedType <10502 10503 -10504 10508 10509 -10510> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_interfaces|V>";
4664 Method <10507 10510 -10511 10515> {PUBLIC} "get_interfaces";
4665 TypeParameter <10506 -10507 -10509 -10513> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_interfaces(VertexFilter<V>).V";
4666 ParametrizedType <10512 10513 -10514> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_interfaces|V>";
4667 Parameter <10514 -10515> {} "filter";
4668 Method <10516 -10517 10519> {PUBLIC} "add_nestedClassifiers";
4669 Parameter <10518 -10519> {} "vertex";
4670 Method <10523 -10524> {PUBLIC} "remove_nestedClassifiers";
4671 WildcardType <10520 -10522> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
4672 Method <10525 -10526 10528> {PUBLIC} "remove_nestedClassifiers";
4673 Parameter <10527 -10528> {} "vertex";
4674 Method <10530 10533 -10534> {PUBLIC} "get_nestedClassifiers";
4675 TypeParameter <10529 -10530 -10532> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_nestedClassifiers().V";
4676 ParametrizedType <10531 10532 -10533 10537 10538 -10539> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_nestedClassifiers|V>";
4677 Method <10536 10539 -10540 10544> {PUBLIC} "get_nestedClassifiers";
4678 TypeParameter <10535 -10536 -10538 -10542> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_nestedClassifiers(VertexFilter<V>).V";
4679 ParametrizedType <10541 10542 -10543> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_nestedClassifiers|V>";
4680 Parameter <10543 -10544> {} "filter";
4681 Method <10545 -10546 10548> {PUBLIC} "add_superclass";
4682 Parameter <10547 -10548> {} "vertex";
4683 Method <10552 -10553> {PUBLIC} "remove_superclass";
4684 WildcardType <10549 -10551> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
4685 Method <10554 -10555 10557> {PUBLIC} "remove_superclass";
4686 Parameter <10556 -10557> {} "vertex";
4687 Method <10558 -10559> {PUBLIC} "get_superclass";
4688 Method <10560 -10561 10563> {PUBLIC} "add_typeParams";
4689 Parameter <10562 -10563> {} "vertex";
4690 Method <10567 -10568> {PUBLIC} "remove_typeParams";
4691 WildcardType <10564 -10566> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
4692 Method <10569 -10570 10572> {PUBLIC} "remove_typeParams";
4693 Parameter <10571 -10572> {} "vertex";
4694 Method <10574 10577 -10578> {PUBLIC} "get_typeParams";
4695 TypeParameter <10573 -10574 -10576> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_typeParams().V";
4696 ParametrizedType <10575 10576 -10577 10581 10582 -10583> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_typeParams|V>";
4697 Method <10580 10583 -10584 10588> {PUBLIC} "get_typeParams";
4698 TypeParameter <10579 -10580 -10582 -10586> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_typeParams(VertexFilter<V>).V";
4699 ParametrizedType <10585 10586 -10587> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_typeParams|V>";
4700 Parameter <10587 -10588> {} "filter";
4701 Method <10589 -10590 10592> {PUBLIC} "add_implementors";
4702 Parameter <10591 -10592> {} "vertex";
4703 Method <10596 -10597> {PUBLIC} "remove_implementors";
4704 WildcardType <10593 -10595> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
4705 Method <10598 -10599 10601> {PUBLIC} "remove_implementors";
4706 Parameter <10600 -10601> {} "vertex";
4707 Method <10603 10606 -10607> {PUBLIC} "get_implementors";
4708 TypeParameter <10602 -10603 -10605> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_implementors().V";
4709 ParametrizedType <10604 10605 -10606 10610 10611 -10612> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_implementors|V>";
4710 Method <10609 10612 -10613 10617> {PUBLIC} "get_implementors";
4711 TypeParameter <10608 -10609 -10611 -10615> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_implementors(VertexFilter<V>).V";
4712 ParametrizedType <10614 10615 -10616> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_implementors|V>";
4713 Parameter <10616 -10617> {} "filter";
4714 Method <10618 -10619 10621> {PUBLIC} "add_methods";
4715 Parameter <10620 -10621> {} "vertex";
4716 Method <10625 -10626> {PUBLIC} "remove_methods";
4717 WildcardType <10622 -10624> "? extends Method" "? extends de.uni_koblenz.jgralab.jex.schema.Method";
4718 Method <10627 -10628 10630> {PUBLIC} "remove_methods";
4719 Parameter <10629 -10630> {} "vertex";
4720 Method <10632 10635 -10636> {PUBLIC} "get_methods";
4721 TypeParameter <10631 -10632 -10634> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_methods().V";
4722 ParametrizedType <10633 10634 -10635 10639 10640 -10641> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_methods|V>";
4723 Method <10638 10641 -10642 10646> {PUBLIC} "get_methods";
4724 TypeParameter <10637 -10638 -10640 -10644> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_methods(VertexFilter<V>).V";
4725 ParametrizedType <10643 10644 -10645> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_methods|V>";
4726 Parameter <10645 -10646> {} "filter";
4727 Method <10647 -10648 10650> {PUBLIC} "add_parent";
4728 Parameter <10649 -10650> {} "vertex";
4729 Method <10654 -10655> {PUBLIC} "remove_parent";
4730 WildcardType <10651 -10653> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
4731 Method <10656 -10657 10659> {PUBLIC} "remove_parent";
4732 Parameter <10658 -10659> {} "vertex";
4733 Method <10660 -10661> {PUBLIC} "get_parent";
4734 Method <10662 -10663 10665> {PUBLIC} "add_enumConsts";
4735 Parameter <10664 -10665> {} "vertex";
4736 Method <10669 -10670> {PUBLIC} "remove_enumConsts";
4737 WildcardType <10666 -10668> "? extends EnumConst" "? extends de.uni_koblenz.jgralab.jex.schema.EnumConst";
4738 Method <10671 -10672 10674> {PUBLIC} "remove_enumConsts";
4739 Parameter <10673 -10674> {} "vertex";
4740 Method <10676 10679 -10680> {PUBLIC} "get_enumConsts";
4741 TypeParameter <10675 -10676 -10678> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_enumConsts().V";
4742 ParametrizedType <10677 10678 -10679 10683 10684 -10685> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_enumConsts|V>";
4743 Method <10682 10685 -10686 10690> {PUBLIC} "get_enumConsts";
4744 TypeParameter <10681 -10682 -10684 -10688> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_enumConsts(VertexFilter<V>).V";
4745 ParametrizedType <10687 10688 -10689> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_enumConsts|V>";
4746 Parameter <10689 -10690> {} "filter";
4747 Method <10691 -10692 10694> {PUBLIC} "add_arrayType";
4748 Parameter <10693 -10694> {} "vertex";
4749 Method <10698 -10699> {PUBLIC} "remove_arrayType";
4750 WildcardType <10695 -10697> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
4751 Method <10700 -10701 10703> {PUBLIC} "remove_arrayType";
4752 Parameter <10702 -10703> {} "vertex";
4753 Method <10705 10708 -10709> {PUBLIC} "get_arrayType";
4754 TypeParameter <10704 -10705 -10707> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_arrayType().V";
4755 ParametrizedType <10706 10707 -10708 10712 10713 -10714> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_arrayType|V>";
4756 Method <10711 10714 -10715 10719> {PUBLIC} "get_arrayType";
4757 TypeParameter <10710 -10711 -10713 -10717> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_arrayType(VertexFilter<V>).V";
4758 ParametrizedType <10716 10717 -10718> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.EnumImpl.get_arrayType|V>";
4759 Parameter <10718 -10719> {} "filter";
4760 Method <10722 -10723> {PUBLIC} "getDefinesIncidences";
4761 Method <10726 -10727 10729> {PUBLIC} "getDefinesIncidences";
4762 Parameter <10728 -10729> {} "direction";
4763 Method <10732 -10733> {PUBLIC} "getHasUpperBoundIncidences";
4764 Method <10736 -10737 10739> {PUBLIC} "getHasUpperBoundIncidences";
4765 Parameter <10738 -10739> {} "direction";
4766 Method <10742 -10743> {PUBLIC} "getContainsClassifierIncidences";
4767 Method <10746 -10747 10749> {PUBLIC} "getContainsClassifierIncidences";
4768 Parameter <10748 -10749> {} "direction";
4769 Method <10752 -10753> {PUBLIC} "getDeclaresEnumConstIncidences";
4770 Method <10756 -10757 10759> {PUBLIC} "getDeclaresEnumConstIncidences";
4771 Parameter <10758 -10759> {} "direction";
4772 Method <10762 -10763> {PUBLIC} "getHasTypeArgIncidences";
4773 Method <10766 -10767 10769> {PUBLIC} "getHasTypeArgIncidences";
4774 Parameter <10768 -10769> {} "direction";
4775 Method <10772 -10773> {PUBLIC} "getDeclaresMethodIncidences";
4776 Method <10776 -10777 10779> {PUBLIC} "getDeclaresMethodIncidences";
4777 Parameter <10778 -10779> {} "direction";
4778 Method <10782 -10783> {PUBLIC} "getHasElementTypeIncidences";
4779 Method <10786 -10787 10789> {PUBLIC} "getHasElementTypeIncidences";
4780 Parameter <10788 -10789> {} "direction";
4781 Method <10792 -10793> {PUBLIC} "getThrowsIncidences";
4782 Method <10796 -10797 10799> {PUBLIC} "getThrowsIncidences";
4783 Parameter <10798 -10799> {} "direction";
4784 Method <10802 -10803> {PUBLIC} "getImportsIncidences";
4785 Method <10806 -10807 10809> {PUBLIC} "getImportsIncidences";
4786 Parameter <10808 -10809> {} "direction";
4787 Method <10812 -10813> {PUBLIC} "getHasBoundIncidences";
4788 Method <10816 -10817 10819> {PUBLIC} "getHasBoundIncidences";
4789 Parameter <10818 -10819> {} "direction";
4790 Method <10822 -10823> {PUBLIC} "getHasLowerBoundIncidences";
4791 Method <10826 -10827 10829> {PUBLIC} "getHasLowerBoundIncidences";
4792 Parameter <10828 -10829> {} "direction";
4793 Method <10832 -10833> {PUBLIC} "getDeclaresIncidences";
4794 Method <10836 -10837 10839> {PUBLIC} "getDeclaresIncidences";
4795 Parameter <10838 -10839> {} "direction";
4796 Method <10842 -10843> {PUBLIC} "getDeclaresConstructorIncidences";
4797 Method <10846 -10847 10849> {PUBLIC} "getDeclaresConstructorIncidences";
4798 Parameter <10848 -10849> {} "direction";
4799 Method <10852 -10853> {PUBLIC} "getHasGenericTypeIncidences";
4800 Method <10856 -10857 10859> {PUBLIC} "getHasGenericTypeIncidences";
4801 Parameter <10858 -10859> {} "direction";
4802 Method <10862 -10863> {PUBLIC} "getExtendsIncidences";
4803 Method <10866 -10867 10869> {PUBLIC} "getExtendsIncidences";
4804 Parameter <10868 -10869> {} "direction";
4805 Method <10872 -10873> {PUBLIC} "getImplementsIncidences";
4806 Method <10876 -10877 10879> {PUBLIC} "getImplementsIncidences";
4807 Parameter <10878 -10879> {} "direction";
4808 Method <10882 -10883> {PUBLIC} "getHasTypeIncidences";
4809 Method <10886 -10887 10889> {PUBLIC} "getHasTypeIncidences";
4810 Parameter <10888 -10889> {} "direction";
4811 Method <10892 -10893> {PUBLIC} "getDeclaresNestedClassifierIncidences";
4812 Method <10896 -10897 10899> {PUBLIC} "getDeclaresNestedClassifierIncidences";
4813 Parameter <10898 -10899> {} "direction";
4814 Method <10902 -10903> {PUBLIC} "getHasTypeParamIncidences";
4815 Method <10906 -10907 10909> {PUBLIC} "getHasTypeParamIncidences";
4816 Parameter <10908 -10909> {} "direction";
4817 Method <10912 -10913> {PUBLIC} "getDeclaresFieldIncidences";
4818 Method <10916 -10917 10919> {PUBLIC} "getDeclaresFieldIncidences";
4819 Parameter <10918 -10919> {} "direction";
4820 SourceFile <10922 10923 10924 10925 10926 10927 10928 10929 10930 10931 11007> 105 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ExtendsImpl.java";
4821 Class <-10928 16380 16381 16382 16383 16389 16391 16396 16403 16409 16415 16417 16419 16423 16425 -16426 -16427> {PUBLIC} "ReversedExtendsImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedExtendsImpl";
4822 Class <10932 10933 10934 10935 10945 10950 10953 10958 10964 10969 10976 10982 10988 10990 10992 10996 10998 11000 11002 11004 11006 -11007 -11008> {PUBLIC} "ExtendsImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ExtendsImpl";
4823 Constructor <-10935 10937 10939 10941 10943> {PUBLIC} "ExtendsImpl";
4824 Parameter <10936 -10937> {} "id";
4825 Parameter <10938 -10939> {} "g";
4826 Parameter <10940 -10941> {} "alpha";
4827 Parameter <10942 -10943> {} "omega";
4828 Method <10944 -10945> {PUBLIC FINAL} "getAttributedElementClass";
4829 Method <10949 -10950> {PUBLIC FINAL} "getSchemaClass";
4830 WildcardType <10946 -10948> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
4831 Method <10951 10952 -10953 10955> {PUBLIC} "getAttribute";
4832 TypeParameter <-10951 -10952> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ExtendsImpl.getAttribute(String).T";
4833 Parameter <10954 -10955> {} "attributeName";
4834 Method <10956 10957 -10958 10960 10962> {PUBLIC} "setAttribute";
4835 TypeParameter <-10956 -10961> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ExtendsImpl.setAttribute(String,T).T";
4836 Parameter <10959 -10960> {} "attributeName";
4837 Parameter <10961 -10962> {} "data";
4838 Method <10963 -10964 10966 10967> {PUBLIC} "readAttributeValues";
4839 Parameter <10965 -10966> {} "io";
4840 Method <10968 -10969 10971 10973 10974> {PUBLIC} "readAttributeValueFromString";
4841 Parameter <10970 -10971> {} "attributeName";
4842 Parameter <10972 -10973> {} "value";
4843 Method <10975 -10976 10978 10979 10980> {PUBLIC} "writeAttributeValues";
4844 Parameter <10977 -10978> {} "io";
4845 Method <10981 -10982 10984 10985 10986> {PUBLIC} "writeAttributeValueToString";
4846 Parameter <10983 -10984> {} "attributeName";
4847 Method <10987 -10988> {PUBLIC} "getNextExtendsInGraph";
4848 Method <10989 -10990> {PUBLIC} "getNextExtendsIncidence";
4849 Method <10991 -10992 10994> {PUBLIC} "getNextExtendsIncidence";
4850 Parameter <10993 -10994> {} "orientation";
4851 Method <10995 -10996> {PUBLIC} "getAggregationKind";
4852 Method <10997 -10998> {PUBLIC} "getAlphaAggregationKind";
4853 Method <10999 -11000> {PUBLIC} "getOmegaAggregationKind";
4854 Method <11001 -11002> {PROTECTED} "createReversedEdge";
4855 Method <11003 -11004> {PUBLIC} "getAlpha";
4856 Method <11005 -11006> {PUBLIC} "getOmega";
4857 SourceFile <11009 11010 11011 11012 11013 11014 11015 11224> 406 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/FieldImpl.java";
4858 Class <11016 11017 11018 11019 11020 11024 11026 11027 11033 11038 11041 11046 11054 11056 11062 11064 11068 11073 11080 11086 11092 11094 11096 11098 11100 11102 11104 11108 11110 11114 11116 11120 11122 11126 11133 11135 11143 11149 11155 11162 11164 11168 11170 11177 11179 11183 11187 11191 11197 11201 11207 11211 11217 11221 -11224 -11225> {PUBLIC} "FieldImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.FieldImpl";
4859 Field <11023 -11024> {PROTECTED} "_modifiers";
4860 Field <11025 -11026> {PROTECTED} "_name";
4861 Constructor <-11027 11029 11031> {PUBLIC} "FieldImpl";
4862 Parameter <11028 -11029> {} "id";
4863 Parameter <11030 -11031> {} "g";
4864 Method <11032 -11033> {PUBLIC FINAL} "getAttributedElementClass";
4865 Method <11037 -11038> {PUBLIC FINAL} "getSchemaClass";
4866 WildcardType <11034 -11036> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
4867 Method <11039 11040 -11041 11043> {PUBLIC} "getAttribute";
4868 TypeParameter <-11039 -11040> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.FieldImpl.getAttribute(String).T";
4869 Parameter <11042 -11043> {} "attributeName";
4870 Method <11044 11045 -11046 11048 11050> {PUBLIC} "setAttribute";
4871 TypeParameter <-11044 -11049> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.FieldImpl.setAttribute(String,T).T";
4872 Parameter <11047 -11048> {} "attributeName";
4873 Parameter <11049 -11050> {} "data";
4874 Method <11053 -11054> {PUBLIC} "get_modifiers";
4875 Method <11055 -11056 11060> {PUBLIC} "set_modifiers";
4876 Parameter <11059 -11060> {} "_modifiers";
4877 Method <11061 -11062> {PUBLIC} "get_name";
4878 Method <11063 -11064 11066> {PUBLIC} "set_name";
4879 Parameter <11065 -11066> {} "_name";
4880 Method <11067 -11068 11070 11071> {PUBLIC} "readAttributeValues";
4881 Parameter <11069 -11070> {} "io";
4882 Method <11072 -11073 11075 11077 11078> {PUBLIC} "readAttributeValueFromString";
4883 Parameter <11074 -11075> {} "attributeName";
4884 Parameter <11076 -11077> {} "value";
4885 Method <11079 -11080 11082 11083 11084> {PUBLIC} "writeAttributeValues";
4886 Parameter <11081 -11082> {} "io";
4887 Method <11085 -11086 11088 11089 11090> {PUBLIC} "writeAttributeValueToString";
4888 Parameter <11087 -11088> {} "attributeName";
4889 Method <11091 -11092> {PUBLIC} "getNextField";
4890 Method <11093 -11094> {PUBLIC} "getNextMember";
4891 Method <11095 -11096> {PUBLIC} "getNextModifiableElement";
4892 Method <11097 -11098> {PUBLIC} "getNextNamedElement";
4893 Method <11099 -11100> {PUBLIC} "getNextTypedElement";
4894 Method <11101 -11102> {PUBLIC} "getFirstHasTypeIncidence";
4895 Method <11103 -11104 11106> {PUBLIC} "getFirstHasTypeIncidence";
4896 Parameter <11105 -11106> {} "orientation";
4897 Method <11107 -11108> {PUBLIC} "getFirstDeclaresFieldIncidence";
4898 Method <11109 -11110 11112> {PUBLIC} "getFirstDeclaresFieldIncidence";
4899 Parameter <11111 -11112> {} "orientation";
4900 Method <11113 -11114> {PUBLIC} "getFirstImportsIncidence";
4901 Method <11115 -11116 11118> {PUBLIC} "getFirstImportsIncidence";
4902 Parameter <11117 -11118> {} "orientation";
4903 Method <11119 -11120> {PUBLIC} "getFirstDeclaresIncidence";
4904 Method <11121 -11122 11124> {PUBLIC} "getFirstDeclaresIncidence";
4905 Parameter <11123 -11124> {} "orientation";
4906 Method <11125 -11126 11128> {PUBLIC} "add_importers";
4907 Parameter <11127 -11128> {} "vertex";
4908 Method <11132 -11133> {PUBLIC} "remove_importers";
4909 WildcardType <11129 -11131> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
4910 Method <11134 -11135 11137> {PUBLIC} "remove_importers";
4911 Parameter <11136 -11137> {} "vertex";
4912 Method <11139 11142 -11143> {PUBLIC} "get_importers";
4913 TypeParameter <11138 -11139 -11141> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.FieldImpl.get_importers().V";
4914 ParametrizedType <11140 11141 -11142 11146 11147 -11148> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.FieldImpl.get_importers|V>";
4915 Method <11145 11148 -11149 11153> {PUBLIC} "get_importers";
4916 TypeParameter <11144 -11145 -11147 -11151> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.FieldImpl.get_importers(VertexFilter<V>).V";
4917 ParametrizedType <11150 11151 -11152> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.FieldImpl.get_importers|V>";
4918 Parameter <11152 -11153> {} "filter";
4919 Method <11154 -11155 11157> {PUBLIC} "add_parent";
4920 Parameter <11156 -11157> {} "vertex";
4921 Method <11161 -11162> {PUBLIC} "remove_parent";
4922 WildcardType <11158 -11160> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
4923 Method <11163 -11164 11166> {PUBLIC} "remove_parent";
4924 Parameter <11165 -11166> {} "vertex";
4925 Method <11167 -11168> {PUBLIC} "get_parent";
4926 Method <11169 -11170 11172> {PUBLIC} "add_type";
4927 Parameter <11171 -11172> {} "vertex";
4928 Method <11176 -11177> {PUBLIC} "remove_type";
4929 WildcardType <11173 -11175> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
4930 Method <11178 -11179 11181> {PUBLIC} "remove_type";
4931 Parameter <11180 -11181> {} "vertex";
4932 Method <11182 -11183> {PUBLIC} "get_type";
4933 Method <11186 -11187> {PUBLIC} "getHasTypeIncidences";
4934 Method <11190 -11191 11193> {PUBLIC} "getHasTypeIncidences";
4935 Parameter <11192 -11193> {} "direction";
4936 Method <11196 -11197> {PUBLIC} "getDeclaresFieldIncidences";
4937 Method <11200 -11201 11203> {PUBLIC} "getDeclaresFieldIncidences";
4938 Parameter <11202 -11203> {} "direction";
4939 Method <11206 -11207> {PUBLIC} "getImportsIncidences";
4940 Method <11210 -11211 11213> {PUBLIC} "getImportsIncidences";
4941 Parameter <11212 -11213> {} "direction";
4942 Method <11216 -11217> {PUBLIC} "getDeclaresIncidences";
4943 Method <11220 -11221 11223> {PUBLIC} "getDeclaresIncidences";
4944 Parameter <11222 -11223> {} "direction";
4945 SourceFile <11226 11227 11228 11229 11230 11231 11232 11233 11234 11235 11311> 105 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/HasBoundImpl.java";
4946 Class <-11232 16437 16438 16439 16440 16446 16448 16453 16460 16466 16472 16474 16476 16480 16482 -16483 -16484> {PUBLIC} "ReversedHasBoundImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedHasBoundImpl";
4947 Class <11236 11237 11238 11239 11249 11254 11257 11262 11268 11273 11280 11286 11292 11294 11296 11300 11302 11304 11306 11308 11310 -11311 -11312> {PUBLIC} "HasBoundImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasBoundImpl";
4948 Constructor <-11239 11241 11243 11245 11247> {PUBLIC} "HasBoundImpl";
4949 Parameter <11240 -11241> {} "id";
4950 Parameter <11242 -11243> {} "g";
4951 Parameter <11244 -11245> {} "alpha";
4952 Parameter <11246 -11247> {} "omega";
4953 Method <11248 -11249> {PUBLIC FINAL} "getAttributedElementClass";
4954 Method <11253 -11254> {PUBLIC FINAL} "getSchemaClass";
4955 WildcardType <11250 -11252> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
4956 Method <11255 11256 -11257 11259> {PUBLIC} "getAttribute";
4957 TypeParameter <-11255 -11256> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasBoundImpl.getAttribute(String).T";
4958 Parameter <11258 -11259> {} "attributeName";
4959 Method <11260 11261 -11262 11264 11266> {PUBLIC} "setAttribute";
4960 TypeParameter <-11260 -11265> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasBoundImpl.setAttribute(String,T).T";
4961 Parameter <11263 -11264> {} "attributeName";
4962 Parameter <11265 -11266> {} "data";
4963 Method <11267 -11268 11270 11271> {PUBLIC} "readAttributeValues";
4964 Parameter <11269 -11270> {} "io";
4965 Method <11272 -11273 11275 11277 11278> {PUBLIC} "readAttributeValueFromString";
4966 Parameter <11274 -11275> {} "attributeName";
4967 Parameter <11276 -11277> {} "value";
4968 Method <11279 -11280 11282 11283 11284> {PUBLIC} "writeAttributeValues";
4969 Parameter <11281 -11282> {} "io";
4970 Method <11285 -11286 11288 11289 11290> {PUBLIC} "writeAttributeValueToString";
4971 Parameter <11287 -11288> {} "attributeName";
4972 Method <11291 -11292> {PUBLIC} "getNextHasBoundInGraph";
4973 Method <11293 -11294> {PUBLIC} "getNextHasBoundIncidence";
4974 Method <11295 -11296 11298> {PUBLIC} "getNextHasBoundIncidence";
4975 Parameter <11297 -11298> {} "orientation";
4976 Method <11299 -11300> {PUBLIC} "getAggregationKind";
4977 Method <11301 -11302> {PUBLIC} "getAlphaAggregationKind";
4978 Method <11303 -11304> {PUBLIC} "getOmegaAggregationKind";
4979 Method <11305 -11306> {PROTECTED} "createReversedEdge";
4980 Method <11307 -11308> {PUBLIC} "getAlpha";
4981 Method <11309 -11310> {PUBLIC} "getOmega";
4982 SourceFile <11313 11314 11315 11316 11317 11318 11319 11320 11321 11322 11398> 105 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/HasElementTypeImpl.java";
4983 Class <-11319 16494 16495 16496 16497 16503 16505 16510 16517 16523 16529 16531 16533 16537 16539 -16540 -16541> {PUBLIC} "ReversedHasElementTypeImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedHasElementTypeImpl";
4984 Class <11323 11324 11325 11326 11336 11341 11344 11349 11355 11360 11367 11373 11379 11381 11383 11387 11389 11391 11393 11395 11397 -11398 -11399> {PUBLIC} "HasElementTypeImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasElementTypeImpl";
4985 Constructor <-11326 11328 11330 11332 11334> {PUBLIC} "HasElementTypeImpl";
4986 Parameter <11327 -11328> {} "id";
4987 Parameter <11329 -11330> {} "g";
4988 Parameter <11331 -11332> {} "alpha";
4989 Parameter <11333 -11334> {} "omega";
4990 Method <11335 -11336> {PUBLIC FINAL} "getAttributedElementClass";
4991 Method <11340 -11341> {PUBLIC FINAL} "getSchemaClass";
4992 WildcardType <11337 -11339> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
4993 Method <11342 11343 -11344 11346> {PUBLIC} "getAttribute";
4994 TypeParameter <-11342 -11343> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasElementTypeImpl.getAttribute(String).T";
4995 Parameter <11345 -11346> {} "attributeName";
4996 Method <11347 11348 -11349 11351 11353> {PUBLIC} "setAttribute";
4997 TypeParameter <-11347 -11352> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasElementTypeImpl.setAttribute(String,T).T";
4998 Parameter <11350 -11351> {} "attributeName";
4999 Parameter <11352 -11353> {} "data";
5000 Method <11354 -11355 11357 11358> {PUBLIC} "readAttributeValues";
5001 Parameter <11356 -11357> {} "io";
5002 Method <11359 -11360 11362 11364 11365> {PUBLIC} "readAttributeValueFromString";
5003 Parameter <11361 -11362> {} "attributeName";
5004 Parameter <11363 -11364> {} "value";
5005 Method <11366 -11367 11369 11370 11371> {PUBLIC} "writeAttributeValues";
5006 Parameter <11368 -11369> {} "io";
5007 Method <11372 -11373 11375 11376 11377> {PUBLIC} "writeAttributeValueToString";
5008 Parameter <11374 -11375> {} "attributeName";
5009 Method <11378 -11379> {PUBLIC} "getNextHasElementTypeInGraph";
5010 Method <11380 -11381> {PUBLIC} "getNextHasElementTypeIncidence";
5011 Method <11382 -11383 11385> {PUBLIC} "getNextHasElementTypeIncidence";
5012 Parameter <11384 -11385> {} "orientation";
5013 Method <11386 -11387> {PUBLIC} "getAggregationKind";
5014 Method <11388 -11389> {PUBLIC} "getAlphaAggregationKind";
5015 Method <11390 -11391> {PUBLIC} "getOmegaAggregationKind";
5016 Method <11392 -11393> {PROTECTED} "createReversedEdge";
5017 Method <11394 -11395> {PUBLIC} "getAlpha";
5018 Method <11396 -11397> {PUBLIC} "getOmega";
5019 SourceFile <11400 11401 11402 11403 11404 11405 11406 11407 11408 11409 11485> 105 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/HasGenericTypeImpl.java";
5020 Class <-11406 16551 16552 16553 16554 16560 16562 16567 16574 16580 16586 16588 16590 16594 16596 -16597 -16598> {PUBLIC} "ReversedHasGenericTypeImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedHasGenericTypeImpl";
5021 Class <11410 11411 11412 11413 11423 11428 11431 11436 11442 11447 11454 11460 11466 11468 11470 11474 11476 11478 11480 11482 11484 -11485 -11486> {PUBLIC} "HasGenericTypeImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasGenericTypeImpl";
5022 Constructor <-11413 11415 11417 11419 11421> {PUBLIC} "HasGenericTypeImpl";
5023 Parameter <11414 -11415> {} "id";
5024 Parameter <11416 -11417> {} "g";
5025 Parameter <11418 -11419> {} "alpha";
5026 Parameter <11420 -11421> {} "omega";
5027 Method <11422 -11423> {PUBLIC FINAL} "getAttributedElementClass";
5028 Method <11427 -11428> {PUBLIC FINAL} "getSchemaClass";
5029 WildcardType <11424 -11426> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
5030 Method <11429 11430 -11431 11433> {PUBLIC} "getAttribute";
5031 TypeParameter <-11429 -11430> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasGenericTypeImpl.getAttribute(String).T";
5032 Parameter <11432 -11433> {} "attributeName";
5033 Method <11434 11435 -11436 11438 11440> {PUBLIC} "setAttribute";
5034 TypeParameter <-11434 -11439> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasGenericTypeImpl.setAttribute(String,T).T";
5035 Parameter <11437 -11438> {} "attributeName";
5036 Parameter <11439 -11440> {} "data";
5037 Method <11441 -11442 11444 11445> {PUBLIC} "readAttributeValues";
5038 Parameter <11443 -11444> {} "io";
5039 Method <11446 -11447 11449 11451 11452> {PUBLIC} "readAttributeValueFromString";
5040 Parameter <11448 -11449> {} "attributeName";
5041 Parameter <11450 -11451> {} "value";
5042 Method <11453 -11454 11456 11457 11458> {PUBLIC} "writeAttributeValues";
5043 Parameter <11455 -11456> {} "io";
5044 Method <11459 -11460 11462 11463 11464> {PUBLIC} "writeAttributeValueToString";
5045 Parameter <11461 -11462> {} "attributeName";
5046 Method <11465 -11466> {PUBLIC} "getNextHasGenericTypeInGraph";
5047 Method <11467 -11468> {PUBLIC} "getNextHasGenericTypeIncidence";
5048 Method <11469 -11470 11472> {PUBLIC} "getNextHasGenericTypeIncidence";
5049 Parameter <11471 -11472> {} "orientation";
5050 Method <11473 -11474> {PUBLIC} "getAggregationKind";
5051 Method <11475 -11476> {PUBLIC} "getAlphaAggregationKind";
5052 Method <11477 -11478> {PUBLIC} "getOmegaAggregationKind";
5053 Method <11479 -11480> {PROTECTED} "createReversedEdge";
5054 Method <11481 -11482> {PUBLIC} "getAlpha";
5055 Method <11483 -11484> {PUBLIC} "getOmega";
5056 SourceFile <11487 11488 11489 11490 11491 11492 11493 11494 11495 11496 11572> 105 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/HasLowerBoundImpl.java";
5057 Class <-11493 16608 16609 16610 16611 16617 16619 16624 16631 16637 16643 16645 16647 16651 16653 -16654 -16655> {PUBLIC} "ReversedHasLowerBoundImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedHasLowerBoundImpl";
5058 Class <11497 11498 11499 11500 11510 11515 11518 11523 11529 11534 11541 11547 11553 11555 11557 11561 11563 11565 11567 11569 11571 -11572 -11573> {PUBLIC} "HasLowerBoundImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasLowerBoundImpl";
5059 Constructor <-11500 11502 11504 11506 11508> {PUBLIC} "HasLowerBoundImpl";
5060 Parameter <11501 -11502> {} "id";
5061 Parameter <11503 -11504> {} "g";
5062 Parameter <11505 -11506> {} "alpha";
5063 Parameter <11507 -11508> {} "omega";
5064 Method <11509 -11510> {PUBLIC FINAL} "getAttributedElementClass";
5065 Method <11514 -11515> {PUBLIC FINAL} "getSchemaClass";
5066 WildcardType <11511 -11513> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
5067 Method <11516 11517 -11518 11520> {PUBLIC} "getAttribute";
5068 TypeParameter <-11516 -11517> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasLowerBoundImpl.getAttribute(String).T";
5069 Parameter <11519 -11520> {} "attributeName";
5070 Method <11521 11522 -11523 11525 11527> {PUBLIC} "setAttribute";
5071 TypeParameter <-11521 -11526> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasLowerBoundImpl.setAttribute(String,T).T";
5072 Parameter <11524 -11525> {} "attributeName";
5073 Parameter <11526 -11527> {} "data";
5074 Method <11528 -11529 11531 11532> {PUBLIC} "readAttributeValues";
5075 Parameter <11530 -11531> {} "io";
5076 Method <11533 -11534 11536 11538 11539> {PUBLIC} "readAttributeValueFromString";
5077 Parameter <11535 -11536> {} "attributeName";
5078 Parameter <11537 -11538> {} "value";
5079 Method <11540 -11541 11543 11544 11545> {PUBLIC} "writeAttributeValues";
5080 Parameter <11542 -11543> {} "io";
5081 Method <11546 -11547 11549 11550 11551> {PUBLIC} "writeAttributeValueToString";
5082 Parameter <11548 -11549> {} "attributeName";
5083 Method <11552 -11553> {PUBLIC} "getNextHasLowerBoundInGraph";
5084 Method <11554 -11555> {PUBLIC} "getNextHasLowerBoundIncidence";
5085 Method <11556 -11557 11559> {PUBLIC} "getNextHasLowerBoundIncidence";
5086 Parameter <11558 -11559> {} "orientation";
5087 Method <11560 -11561> {PUBLIC} "getAggregationKind";
5088 Method <11562 -11563> {PUBLIC} "getAlphaAggregationKind";
5089 Method <11564 -11565> {PUBLIC} "getOmegaAggregationKind";
5090 Method <11566 -11567> {PROTECTED} "createReversedEdge";
5091 Method <11568 -11569> {PUBLIC} "getAlpha";
5092 Method <11570 -11571> {PUBLIC} "getOmega";
5093 SourceFile <11574 11575 11576 11577 11578 11579 11580 11581 11582 11583 11659> 105 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/HasParamImpl.java";
5094 Class <-11580 16665 16666 16667 16668 16674 16676 16681 16688 16694 16700 16702 16704 16708 16710 -16711 -16712> {PUBLIC} "ReversedHasParamImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedHasParamImpl";
5095 Class <11584 11585 11586 11587 11597 11602 11605 11610 11616 11621 11628 11634 11640 11642 11644 11648 11650 11652 11654 11656 11658 -11659 -11660> {PUBLIC} "HasParamImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasParamImpl";
5096 Constructor <-11587 11589 11591 11593 11595> {PUBLIC} "HasParamImpl";
5097 Parameter <11588 -11589> {} "id";
5098 Parameter <11590 -11591> {} "g";
5099 Parameter <11592 -11593> {} "alpha";
5100 Parameter <11594 -11595> {} "omega";
5101 Method <11596 -11597> {PUBLIC FINAL} "getAttributedElementClass";
5102 Method <11601 -11602> {PUBLIC FINAL} "getSchemaClass";
5103 WildcardType <11598 -11600> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
5104 Method <11603 11604 -11605 11607> {PUBLIC} "getAttribute";
5105 TypeParameter <-11603 -11604> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasParamImpl.getAttribute(String).T";
5106 Parameter <11606 -11607> {} "attributeName";
5107 Method <11608 11609 -11610 11612 11614> {PUBLIC} "setAttribute";
5108 TypeParameter <-11608 -11613> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasParamImpl.setAttribute(String,T).T";
5109 Parameter <11611 -11612> {} "attributeName";
5110 Parameter <11613 -11614> {} "data";
5111 Method <11615 -11616 11618 11619> {PUBLIC} "readAttributeValues";
5112 Parameter <11617 -11618> {} "io";
5113 Method <11620 -11621 11623 11625 11626> {PUBLIC} "readAttributeValueFromString";
5114 Parameter <11622 -11623> {} "attributeName";
5115 Parameter <11624 -11625> {} "value";
5116 Method <11627 -11628 11630 11631 11632> {PUBLIC} "writeAttributeValues";
5117 Parameter <11629 -11630> {} "io";
5118 Method <11633 -11634 11636 11637 11638> {PUBLIC} "writeAttributeValueToString";
5119 Parameter <11635 -11636> {} "attributeName";
5120 Method <11639 -11640> {PUBLIC} "getNextHasParamInGraph";
5121 Method <11641 -11642> {PUBLIC} "getNextHasParamIncidence";
5122 Method <11643 -11644 11646> {PUBLIC} "getNextHasParamIncidence";
5123 Parameter <11645 -11646> {} "orientation";
5124 Method <11647 -11648> {PUBLIC} "getAggregationKind";
5125 Method <11649 -11650> {PUBLIC} "getAlphaAggregationKind";
5126 Method <11651 -11652> {PUBLIC} "getOmegaAggregationKind";
5127 Method <11653 -11654> {PROTECTED} "createReversedEdge";
5128 Method <11655 -11656> {PUBLIC} "getAlpha";
5129 Method <11657 -11658> {PUBLIC} "getOmega";
5130 SourceFile <11661 11662 11663 11664 11665 11666 11667 11668 11669 11670 11746> 105 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/HasTypeArgImpl.java";
5131 Class <-11667 16722 16723 16724 16725 16731 16733 16738 16745 16751 16757 16759 16761 16765 16767 -16768 -16769> {PUBLIC} "ReversedHasTypeArgImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedHasTypeArgImpl";
5132 Class <11671 11672 11673 11674 11684 11689 11692 11697 11703 11708 11715 11721 11727 11729 11731 11735 11737 11739 11741 11743 11745 -11746 -11747> {PUBLIC} "HasTypeArgImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasTypeArgImpl";
5133 Constructor <-11674 11676 11678 11680 11682> {PUBLIC} "HasTypeArgImpl";
5134 Parameter <11675 -11676> {} "id";
5135 Parameter <11677 -11678> {} "g";
5136 Parameter <11679 -11680> {} "alpha";
5137 Parameter <11681 -11682> {} "omega";
5138 Method <11683 -11684> {PUBLIC FINAL} "getAttributedElementClass";
5139 Method <11688 -11689> {PUBLIC FINAL} "getSchemaClass";
5140 WildcardType <11685 -11687> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
5141 Method <11690 11691 -11692 11694> {PUBLIC} "getAttribute";
5142 TypeParameter <-11690 -11691> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasTypeArgImpl.getAttribute(String).T";
5143 Parameter <11693 -11694> {} "attributeName";
5144 Method <11695 11696 -11697 11699 11701> {PUBLIC} "setAttribute";
5145 TypeParameter <-11695 -11700> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasTypeArgImpl.setAttribute(String,T).T";
5146 Parameter <11698 -11699> {} "attributeName";
5147 Parameter <11700 -11701> {} "data";
5148 Method <11702 -11703 11705 11706> {PUBLIC} "readAttributeValues";
5149 Parameter <11704 -11705> {} "io";
5150 Method <11707 -11708 11710 11712 11713> {PUBLIC} "readAttributeValueFromString";
5151 Parameter <11709 -11710> {} "attributeName";
5152 Parameter <11711 -11712> {} "value";
5153 Method <11714 -11715 11717 11718 11719> {PUBLIC} "writeAttributeValues";
5154 Parameter <11716 -11717> {} "io";
5155 Method <11720 -11721 11723 11724 11725> {PUBLIC} "writeAttributeValueToString";
5156 Parameter <11722 -11723> {} "attributeName";
5157 Method <11726 -11727> {PUBLIC} "getNextHasTypeArgInGraph";
5158 Method <11728 -11729> {PUBLIC} "getNextHasTypeArgIncidence";
5159 Method <11730 -11731 11733> {PUBLIC} "getNextHasTypeArgIncidence";
5160 Parameter <11732 -11733> {} "orientation";
5161 Method <11734 -11735> {PUBLIC} "getAggregationKind";
5162 Method <11736 -11737> {PUBLIC} "getAlphaAggregationKind";
5163 Method <11738 -11739> {PUBLIC} "getOmegaAggregationKind";
5164 Method <11740 -11741> {PROTECTED} "createReversedEdge";
5165 Method <11742 -11743> {PUBLIC} "getAlpha";
5166 Method <11744 -11745> {PUBLIC} "getOmega";
5167 SourceFile <11748 11749 11750 11751 11752 11753 11754 11755 11756 11757 11833> 105 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/HasTypeImpl.java";
5168 Class <-11754 16779 16780 16781 16782 16788 16790 16795 16802 16808 16814 16816 16818 16822 16824 -16825 -16826> {PUBLIC} "ReversedHasTypeImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedHasTypeImpl";
5169 Class <11758 11759 11760 11761 11771 11776 11779 11784 11790 11795 11802 11808 11814 11816 11818 11822 11824 11826 11828 11830 11832 -11833 -11834> {PUBLIC} "HasTypeImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasTypeImpl";
5170 Constructor <-11761 11763 11765 11767 11769> {PUBLIC} "HasTypeImpl";
5171 Parameter <11762 -11763> {} "id";
5172 Parameter <11764 -11765> {} "g";
5173 Parameter <11766 -11767> {} "alpha";
5174 Parameter <11768 -11769> {} "omega";
5175 Method <11770 -11771> {PUBLIC FINAL} "getAttributedElementClass";
5176 Method <11775 -11776> {PUBLIC FINAL} "getSchemaClass";
5177 WildcardType <11772 -11774> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
5178 Method <11777 11778 -11779 11781> {PUBLIC} "getAttribute";
5179 TypeParameter <-11777 -11778> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasTypeImpl.getAttribute(String).T";
5180 Parameter <11780 -11781> {} "attributeName";
5181 Method <11782 11783 -11784 11786 11788> {PUBLIC} "setAttribute";
5182 TypeParameter <-11782 -11787> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasTypeImpl.setAttribute(String,T).T";
5183 Parameter <11785 -11786> {} "attributeName";
5184 Parameter <11787 -11788> {} "data";
5185 Method <11789 -11790 11792 11793> {PUBLIC} "readAttributeValues";
5186 Parameter <11791 -11792> {} "io";
5187 Method <11794 -11795 11797 11799 11800> {PUBLIC} "readAttributeValueFromString";
5188 Parameter <11796 -11797> {} "attributeName";
5189 Parameter <11798 -11799> {} "value";
5190 Method <11801 -11802 11804 11805 11806> {PUBLIC} "writeAttributeValues";
5191 Parameter <11803 -11804> {} "io";
5192 Method <11807 -11808 11810 11811 11812> {PUBLIC} "writeAttributeValueToString";
5193 Parameter <11809 -11810> {} "attributeName";
5194 Method <11813 -11814> {PUBLIC} "getNextHasTypeInGraph";
5195 Method <11815 -11816> {PUBLIC} "getNextHasTypeIncidence";
5196 Method <11817 -11818 11820> {PUBLIC} "getNextHasTypeIncidence";
5197 Parameter <11819 -11820> {} "orientation";
5198 Method <11821 -11822> {PUBLIC} "getAggregationKind";
5199 Method <11823 -11824> {PUBLIC} "getAlphaAggregationKind";
5200 Method <11825 -11826> {PUBLIC} "getOmegaAggregationKind";
5201 Method <11827 -11828> {PROTECTED} "createReversedEdge";
5202 Method <11829 -11830> {PUBLIC} "getAlpha";
5203 Method <11831 -11832> {PUBLIC} "getOmega";
5204 SourceFile <11835 11836 11837 11838 11839 11840 11841 11842 11843 11844 11920> 105 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/HasTypeParamImpl.java";
5205 Class <-11841 16836 16837 16838 16839 16845 16847 16852 16859 16865 16871 16873 16875 16879 16881 -16882 -16883> {PUBLIC} "ReversedHasTypeParamImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedHasTypeParamImpl";
5206 Class <11845 11846 11847 11848 11858 11863 11866 11871 11877 11882 11889 11895 11901 11903 11905 11909 11911 11913 11915 11917 11919 -11920 -11921> {PUBLIC} "HasTypeParamImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasTypeParamImpl";
5207 Constructor <-11848 11850 11852 11854 11856> {PUBLIC} "HasTypeParamImpl";
5208 Parameter <11849 -11850> {} "id";
5209 Parameter <11851 -11852> {} "g";
5210 Parameter <11853 -11854> {} "alpha";
5211 Parameter <11855 -11856> {} "omega";
5212 Method <11857 -11858> {PUBLIC FINAL} "getAttributedElementClass";
5213 Method <11862 -11863> {PUBLIC FINAL} "getSchemaClass";
5214 WildcardType <11859 -11861> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
5215 Method <11864 11865 -11866 11868> {PUBLIC} "getAttribute";
5216 TypeParameter <-11864 -11865> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasTypeParamImpl.getAttribute(String).T";
5217 Parameter <11867 -11868> {} "attributeName";
5218 Method <11869 11870 -11871 11873 11875> {PUBLIC} "setAttribute";
5219 TypeParameter <-11869 -11874> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasTypeParamImpl.setAttribute(String,T).T";
5220 Parameter <11872 -11873> {} "attributeName";
5221 Parameter <11874 -11875> {} "data";
5222 Method <11876 -11877 11879 11880> {PUBLIC} "readAttributeValues";
5223 Parameter <11878 -11879> {} "io";
5224 Method <11881 -11882 11884 11886 11887> {PUBLIC} "readAttributeValueFromString";
5225 Parameter <11883 -11884> {} "attributeName";
5226 Parameter <11885 -11886> {} "value";
5227 Method <11888 -11889 11891 11892 11893> {PUBLIC} "writeAttributeValues";
5228 Parameter <11890 -11891> {} "io";
5229 Method <11894 -11895 11897 11898 11899> {PUBLIC} "writeAttributeValueToString";
5230 Parameter <11896 -11897> {} "attributeName";
5231 Method <11900 -11901> {PUBLIC} "getNextHasTypeParamInGraph";
5232 Method <11902 -11903> {PUBLIC} "getNextHasTypeParamIncidence";
5233 Method <11904 -11905 11907> {PUBLIC} "getNextHasTypeParamIncidence";
5234 Parameter <11906 -11907> {} "orientation";
5235 Method <11908 -11909> {PUBLIC} "getAggregationKind";
5236 Method <11910 -11911> {PUBLIC} "getAlphaAggregationKind";
5237 Method <11912 -11913> {PUBLIC} "getOmegaAggregationKind";
5238 Method <11914 -11915> {PROTECTED} "createReversedEdge";
5239 Method <11916 -11917> {PUBLIC} "getAlpha";
5240 Method <11918 -11919> {PUBLIC} "getOmega";
5241 SourceFile <11922 11923 11924 11925 11926 11927 11928 11929 11930 11931 12007> 105 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/HasUpperBoundImpl.java";
5242 Class <-11928 16893 16894 16895 16896 16902 16904 16909 16916 16922 16928 16930 16932 16936 16938 -16939 -16940> {PUBLIC} "ReversedHasUpperBoundImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedHasUpperBoundImpl";
5243 Class <11932 11933 11934 11935 11945 11950 11953 11958 11964 11969 11976 11982 11988 11990 11992 11996 11998 12000 12002 12004 12006 -12007 -12008> {PUBLIC} "HasUpperBoundImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasUpperBoundImpl";
5244 Constructor <-11935 11937 11939 11941 11943> {PUBLIC} "HasUpperBoundImpl";
5245 Parameter <11936 -11937> {} "id";
5246 Parameter <11938 -11939> {} "g";
5247 Parameter <11940 -11941> {} "alpha";
5248 Parameter <11942 -11943> {} "omega";
5249 Method <11944 -11945> {PUBLIC FINAL} "getAttributedElementClass";
5250 Method <11949 -11950> {PUBLIC FINAL} "getSchemaClass";
5251 WildcardType <11946 -11948> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
5252 Method <11951 11952 -11953 11955> {PUBLIC} "getAttribute";
5253 TypeParameter <-11951 -11952> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasUpperBoundImpl.getAttribute(String).T";
5254 Parameter <11954 -11955> {} "attributeName";
5255 Method <11956 11957 -11958 11960 11962> {PUBLIC} "setAttribute";
5256 TypeParameter <-11956 -11961> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.HasUpperBoundImpl.setAttribute(String,T).T";
5257 Parameter <11959 -11960> {} "attributeName";
5258 Parameter <11961 -11962> {} "data";
5259 Method <11963 -11964 11966 11967> {PUBLIC} "readAttributeValues";
5260 Parameter <11965 -11966> {} "io";
5261 Method <11968 -11969 11971 11973 11974> {PUBLIC} "readAttributeValueFromString";
5262 Parameter <11970 -11971> {} "attributeName";
5263 Parameter <11972 -11973> {} "value";
5264 Method <11975 -11976 11978 11979 11980> {PUBLIC} "writeAttributeValues";
5265 Parameter <11977 -11978> {} "io";
5266 Method <11981 -11982 11984 11985 11986> {PUBLIC} "writeAttributeValueToString";
5267 Parameter <11983 -11984> {} "attributeName";
5268 Method <11987 -11988> {PUBLIC} "getNextHasUpperBoundInGraph";
5269 Method <11989 -11990> {PUBLIC} "getNextHasUpperBoundIncidence";
5270 Method <11991 -11992 11994> {PUBLIC} "getNextHasUpperBoundIncidence";
5271 Parameter <11993 -11994> {} "orientation";
5272 Method <11995 -11996> {PUBLIC} "getAggregationKind";
5273 Method <11997 -11998> {PUBLIC} "getAlphaAggregationKind";
5274 Method <11999 -12000> {PUBLIC} "getOmegaAggregationKind";
5275 Method <12001 -12002> {PROTECTED} "createReversedEdge";
5276 Method <12003 -12004> {PUBLIC} "getAlpha";
5277 Method <12005 -12006> {PUBLIC} "getOmega";
5278 SourceFile <12009 12010 12011 12012 12013 12014 12015 12016 12017 12018 12094> 105 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ImplementsImpl.java";
5279 Class <-12015 16950 16951 16952 16953 16959 16961 16966 16973 16979 16985 16987 16989 16993 16995 -16996 -16997> {PUBLIC} "ReversedImplementsImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedImplementsImpl";
5280 Class <12019 12020 12021 12022 12032 12037 12040 12045 12051 12056 12063 12069 12075 12077 12079 12083 12085 12087 12089 12091 12093 -12094 -12095> {PUBLIC} "ImplementsImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ImplementsImpl";
5281 Constructor <-12022 12024 12026 12028 12030> {PUBLIC} "ImplementsImpl";
5282 Parameter <12023 -12024> {} "id";
5283 Parameter <12025 -12026> {} "g";
5284 Parameter <12027 -12028> {} "alpha";
5285 Parameter <12029 -12030> {} "omega";
5286 Method <12031 -12032> {PUBLIC FINAL} "getAttributedElementClass";
5287 Method <12036 -12037> {PUBLIC FINAL} "getSchemaClass";
5288 WildcardType <12033 -12035> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
5289 Method <12038 12039 -12040 12042> {PUBLIC} "getAttribute";
5290 TypeParameter <-12038 -12039> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ImplementsImpl.getAttribute(String).T";
5291 Parameter <12041 -12042> {} "attributeName";
5292 Method <12043 12044 -12045 12047 12049> {PUBLIC} "setAttribute";
5293 TypeParameter <-12043 -12048> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ImplementsImpl.setAttribute(String,T).T";
5294 Parameter <12046 -12047> {} "attributeName";
5295 Parameter <12048 -12049> {} "data";
5296 Method <12050 -12051 12053 12054> {PUBLIC} "readAttributeValues";
5297 Parameter <12052 -12053> {} "io";
5298 Method <12055 -12056 12058 12060 12061> {PUBLIC} "readAttributeValueFromString";
5299 Parameter <12057 -12058> {} "attributeName";
5300 Parameter <12059 -12060> {} "value";
5301 Method <12062 -12063 12065 12066 12067> {PUBLIC} "writeAttributeValues";
5302 Parameter <12064 -12065> {} "io";
5303 Method <12068 -12069 12071 12072 12073> {PUBLIC} "writeAttributeValueToString";
5304 Parameter <12070 -12071> {} "attributeName";
5305 Method <12074 -12075> {PUBLIC} "getNextImplementsInGraph";
5306 Method <12076 -12077> {PUBLIC} "getNextImplementsIncidence";
5307 Method <12078 -12079 12081> {PUBLIC} "getNextImplementsIncidence";
5308 Parameter <12080 -12081> {} "orientation";
5309 Method <12082 -12083> {PUBLIC} "getAggregationKind";
5310 Method <12084 -12085> {PUBLIC} "getAlphaAggregationKind";
5311 Method <12086 -12087> {PUBLIC} "getOmegaAggregationKind";
5312 Method <12088 -12089> {PROTECTED} "createReversedEdge";
5313 Method <12090 -12091> {PUBLIC} "getAlpha";
5314 Method <12092 -12093> {PUBLIC} "getOmega";
5315 SourceFile <12096 12097 12098 12099 12100 12101 12102 12103 12104 12105 12189> 140 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ImportsImpl.java";
5316 Class <-12102 17007 17008 17009 17010 17016 17018 17020 17024 17029 17036 17042 17048 17050 17052 17056 17058 -17059 -17060> {PUBLIC} "ReversedImportsImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedImportsImpl";
5317 Class <12106 12107 12108 12110 12111 12121 12126 12129 12134 12140 12142 12146 12151 12158 12164 12170 12172 12174 12178 12180 12182 12184 12186 12188 -12189 -12190> {PUBLIC} "ImportsImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ImportsImpl";
5318 Field <12109 -12110> {PROTECTED} "_lineNo";
5319 Constructor <-12111 12113 12115 12117 12119> {PUBLIC} "ImportsImpl";
5320 Parameter <12112 -12113> {} "id";
5321 Parameter <12114 -12115> {} "g";
5322 Parameter <12116 -12117> {} "alpha";
5323 Parameter <12118 -12119> {} "omega";
5324 Method <12120 -12121> {PUBLIC FINAL} "getAttributedElementClass";
5325 Method <12125 -12126> {PUBLIC FINAL} "getSchemaClass";
5326 WildcardType <12122 -12124> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
5327 Method <12127 12128 -12129 12131> {PUBLIC} "getAttribute";
5328 TypeParameter <-12127 -12128> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ImportsImpl.getAttribute(String).T";
5329 Parameter <12130 -12131> {} "attributeName";
5330 Method <12132 12133 -12134 12136 12138> {PUBLIC} "setAttribute";
5331 TypeParameter <-12132 -12137> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ImportsImpl.setAttribute(String,T).T";
5332 Parameter <12135 -12136> {} "attributeName";
5333 Parameter <12137 -12138> {} "data";
5334 Method <12139 -12140> {PUBLIC} "get_lineNo";
5335 Method <12141 -12142 12144> {PUBLIC} "set_lineNo";
5336 Parameter <12143 -12144> {} "_lineNo";
5337 Method <12145 -12146 12148 12149> {PUBLIC} "readAttributeValues";
5338 Parameter <12147 -12148> {} "io";
5339 Method <12150 -12151 12153 12155 12156> {PUBLIC} "readAttributeValueFromString";
5340 Parameter <12152 -12153> {} "attributeName";
5341 Parameter <12154 -12155> {} "value";
5342 Method <12157 -12158 12160 12161 12162> {PUBLIC} "writeAttributeValues";
5343 Parameter <12159 -12160> {} "io";
5344 Method <12163 -12164 12166 12167 12168> {PUBLIC} "writeAttributeValueToString";
5345 Parameter <12165 -12166> {} "attributeName";
5346 Method <12169 -12170> {PUBLIC} "getNextImportsInGraph";
5347 Method <12171 -12172> {PUBLIC} "getNextImportsIncidence";
5348 Method <12173 -12174 12176> {PUBLIC} "getNextImportsIncidence";
5349 Parameter <12175 -12176> {} "orientation";
5350 Method <12177 -12178> {PUBLIC} "getAggregationKind";
5351 Method <12179 -12180> {PUBLIC} "getAlphaAggregationKind";
5352 Method <12181 -12182> {PUBLIC} "getOmegaAggregationKind";
5353 Method <12183 -12184> {PROTECTED} "createReversedEdge";
5354 Method <12185 -12186> {PUBLIC} "getAlpha";
5355 Method <12187 -12188> {PUBLIC} "getOmega";
5356 SourceFile <12191 12192 12193 12194 12195 12196 12197 12966> 1176 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/InterfaceImpl.java";
5357 Class <12198 12199 12200 12201 12205 12207 12209 12210 12216 12221 12224 12229 12237 12239 12245 12247 12251 12253 12257 12262 12269 12275 12281 12283 12285 12287 12289 12291 12293 12295 12297 12299 12301 12305 12307 12311 12313 12317 12319 12323 12325 12329 12331 12335 12337 12341 12343 12347 12349 12353 12355 12359 12361 12365 12367 12371 12373 12377 12379 12383 12385 12389 12391 12395 12397 12401 12403 12407 12409 12413 12420 12422 12430 12436 12442 12449 12451 12459 12465 12471 12478 12480 12488 12494 12500 12507 12509 12513 12515 12522 12524 12532 12538 12544 12551 12553 12561 12567 12573 12580 12582 12590 12596 12602 12609 12611 12619 12625 12631 12638 12640 12644 12646 12653 12655 12663 12669 12675 12682 12684 12692 12698 12704 12711 12713 12721 12727 12733 12740 12742 12746 12748 12755 12757 12765 12771 12779 12783 12789 12793 12799 12803 12809 12813 12819 12823 12829 12833 12839 12843 12849 12853 12859 12863 12869 12873 12879 12883 12889 12893 12899 12903 12909 12913 12919 12923 12929 12933 12939 12943 12949 12953 12959 12963 -12966 -12967> {PUBLIC} "InterfaceImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl";
5358 Field <12204 -12205> {PROTECTED} "_modifiers";
5359 Field <12206 -12207> {PROTECTED} "_name";
5360 Field <12208 -12209> {PROTECTED} "_qualifiedName";
5361 Constructor <-12210 12212 12214> {PUBLIC} "InterfaceImpl";
5362 Parameter <12211 -12212> {} "id";
5363 Parameter <12213 -12214> {} "g";
5364 Method <12215 -12216> {PUBLIC FINAL} "getAttributedElementClass";
5365 Method <12220 -12221> {PUBLIC FINAL} "getSchemaClass";
5366 WildcardType <12217 -12219> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
5367 Method <12222 12223 -12224 12226> {PUBLIC} "getAttribute";
5368 TypeParameter <-12222 -12223> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.getAttribute(String).T";
5369 Parameter <12225 -12226> {} "attributeName";
5370 Method <12227 12228 -12229 12231 12233> {PUBLIC} "setAttribute";
5371 TypeParameter <-12227 -12232> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.setAttribute(String,T).T";
5372 Parameter <12230 -12231> {} "attributeName";
5373 Parameter <12232 -12233> {} "data";
5374 Method <12236 -12237> {PUBLIC} "get_modifiers";
5375 Method <12238 -12239 12243> {PUBLIC} "set_modifiers";
5376 Parameter <12242 -12243> {} "_modifiers";
5377 Method <12244 -12245> {PUBLIC} "get_name";
5378 Method <12246 -12247 12249> {PUBLIC} "set_name";
5379 Parameter <12248 -12249> {} "_name";
5380 Method <12250 -12251> {PUBLIC} "get_qualifiedName";
5381 Method <12252 -12253 12255> {PUBLIC} "set_qualifiedName";
5382 Parameter <12254 -12255> {} "_qualifiedName";
5383 Method <12256 -12257 12259 12260> {PUBLIC} "readAttributeValues";
5384 Parameter <12258 -12259> {} "io";
5385 Method <12261 -12262 12264 12266 12267> {PUBLIC} "readAttributeValueFromString";
5386 Parameter <12263 -12264> {} "attributeName";
5387 Parameter <12265 -12266> {} "value";
5388 Method <12268 -12269 12271 12272 12273> {PUBLIC} "writeAttributeValues";
5389 Parameter <12270 -12271> {} "io";
5390 Method <12274 -12275 12277 12278 12279> {PUBLIC} "writeAttributeValueToString";
5391 Parameter <12276 -12277> {} "attributeName";
5392 Method <12280 -12281> {PUBLIC} "getNextAbstractClassifier";
5393 Method <12282 -12283> {PUBLIC} "getNextClassifier";
5394 Method <12284 -12285> {PUBLIC} "getNextInterface";
5395 Method <12286 -12287> {PUBLIC} "getNextMember";
5396 Method <12288 -12289> {PUBLIC} "getNextModifiableElement";
5397 Method <12290 -12291> {PUBLIC} "getNextNamedElement";
5398 Method <12292 -12293> {PUBLIC} "getNextQualifiedNamedElement";
5399 Method <12294 -12295> {PUBLIC} "getNextType";
5400 Method <12296 -12297> {PUBLIC} "getNextTypeParametrizable";
5401 Method <12298 -12299> {PUBLIC} "getFirstDefinesIncidence";
5402 Method <12300 -12301 12303> {PUBLIC} "getFirstDefinesIncidence";
5403 Parameter <12302 -12303> {} "orientation";
5404 Method <12304 -12305> {PUBLIC} "getFirstHasUpperBoundIncidence";
5405 Method <12306 -12307 12309> {PUBLIC} "getFirstHasUpperBoundIncidence";
5406 Parameter <12308 -12309> {} "orientation";
5407 Method <12310 -12311> {PUBLIC} "getFirstContainsClassifierIncidence";
5408 Method <12312 -12313 12315> {PUBLIC} "getFirstContainsClassifierIncidence";
5409 Parameter <12314 -12315> {} "orientation";
5410 Method <12316 -12317> {PUBLIC} "getFirstHasTypeArgIncidence";
5411 Method <12318 -12319 12321> {PUBLIC} "getFirstHasTypeArgIncidence";
5412 Parameter <12320 -12321> {} "orientation";
5413 Method <12322 -12323> {PUBLIC} "getFirstDeclaresMethodIncidence";
5414 Method <12324 -12325 12327> {PUBLIC} "getFirstDeclaresMethodIncidence";
5415 Parameter <12326 -12327> {} "orientation";
5416 Method <12328 -12329> {PUBLIC} "getFirstHasElementTypeIncidence";
5417 Method <12330 -12331 12333> {PUBLIC} "getFirstHasElementTypeIncidence";
5418 Parameter <12332 -12333> {} "orientation";
5419 Method <12334 -12335> {PUBLIC} "getFirstThrowsIncidence";
5420 Method <12336 -12337 12339> {PUBLIC} "getFirstThrowsIncidence";
5421 Parameter <12338 -12339> {} "orientation";
5422 Method <12340 -12341> {PUBLIC} "getFirstImportsIncidence";
5423 Method <12342 -12343 12345> {PUBLIC} "getFirstImportsIncidence";
5424 Parameter <12344 -12345> {} "orientation";
5425 Method <12346 -12347> {PUBLIC} "getFirstHasBoundIncidence";
5426 Method <12348 -12349 12351> {PUBLIC} "getFirstHasBoundIncidence";
5427 Parameter <12350 -12351> {} "orientation";
5428 Method <12352 -12353> {PUBLIC} "getFirstHasLowerBoundIncidence";
5429 Method <12354 -12355 12357> {PUBLIC} "getFirstHasLowerBoundIncidence";
5430 Parameter <12356 -12357> {} "orientation";
5431 Method <12358 -12359> {PUBLIC} "getFirstDeclaresIncidence";
5432 Method <12360 -12361 12363> {PUBLIC} "getFirstDeclaresIncidence";
5433 Parameter <12362 -12363> {} "orientation";
5434 Method <12364 -12365> {PUBLIC} "getFirstDeclaresConstructorIncidence";
5435 Method <12366 -12367 12369> {PUBLIC} "getFirstDeclaresConstructorIncidence";
5436 Parameter <12368 -12369> {} "orientation";
5437 Method <12370 -12371> {PUBLIC} "getFirstHasGenericTypeIncidence";
5438 Method <12372 -12373 12375> {PUBLIC} "getFirstHasGenericTypeIncidence";
5439 Parameter <12374 -12375> {} "orientation";
5440 Method <12376 -12377> {PUBLIC} "getFirstExtendsIncidence";
5441 Method <12378 -12379 12381> {PUBLIC} "getFirstExtendsIncidence";
5442 Parameter <12380 -12381> {} "orientation";
5443 Method <12382 -12383> {PUBLIC} "getFirstImplementsIncidence";
5444 Method <12384 -12385 12387> {PUBLIC} "getFirstImplementsIncidence";
5445 Parameter <12386 -12387> {} "orientation";
5446 Method <12388 -12389> {PUBLIC} "getFirstHasTypeIncidence";
5447 Method <12390 -12391 12393> {PUBLIC} "getFirstHasTypeIncidence";
5448 Parameter <12392 -12393> {} "orientation";
5449 Method <12394 -12395> {PUBLIC} "getFirstDeclaresNestedClassifierIncidence";
5450 Method <12396 -12397 12399> {PUBLIC} "getFirstDeclaresNestedClassifierIncidence";
5451 Parameter <12398 -12399> {} "orientation";
5452 Method <12400 -12401> {PUBLIC} "getFirstHasTypeParamIncidence";
5453 Method <12402 -12403 12405> {PUBLIC} "getFirstHasTypeParamIncidence";
5454 Parameter <12404 -12405> {} "orientation";
5455 Method <12406 -12407> {PUBLIC} "getFirstDeclaresFieldIncidence";
5456 Method <12408 -12409 12411> {PUBLIC} "getFirstDeclaresFieldIncidence";
5457 Parameter <12410 -12411> {} "orientation";
5458 Method <12412 -12413 12415> {PUBLIC} "add_constructors";
5459 Parameter <12414 -12415> {} "vertex";
5460 Method <12419 -12420> {PUBLIC} "remove_constructors";
5461 WildcardType <12416 -12418> "? extends Constructor" "? extends de.uni_koblenz.jgralab.jex.schema.Constructor";
5462 Method <12421 -12422 12424> {PUBLIC} "remove_constructors";
5463 Parameter <12423 -12424> {} "vertex";
5464 Method <12426 12429 -12430> {PUBLIC} "get_constructors";
5465 TypeParameter <12425 -12426 -12428> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_constructors().V";
5466 ParametrizedType <12427 12428 -12429 12433 12434 -12435> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_constructors|V>";
5467 Method <12432 12435 -12436 12440> {PUBLIC} "get_constructors";
5468 TypeParameter <12431 -12432 -12434 -12438> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_constructors(VertexFilter<V>).V";
5469 ParametrizedType <12437 12438 -12439> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_constructors|V>";
5470 Parameter <12439 -12440> {} "filter";
5471 Method <12441 -12442 12444> {PUBLIC} "add_importers";
5472 Parameter <12443 -12444> {} "vertex";
5473 Method <12448 -12449> {PUBLIC} "remove_importers";
5474 WildcardType <12445 -12447> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
5475 Method <12450 -12451 12453> {PUBLIC} "remove_importers";
5476 Parameter <12452 -12453> {} "vertex";
5477 Method <12455 12458 -12459> {PUBLIC} "get_importers";
5478 TypeParameter <12454 -12455 -12457> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_importers().V";
5479 ParametrizedType <12456 12457 -12458 12462 12463 -12464> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_importers|V>";
5480 Method <12461 12464 -12465 12469> {PUBLIC} "get_importers";
5481 TypeParameter <12460 -12461 -12463 -12467> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_importers(VertexFilter<V>).V";
5482 ParametrizedType <12466 12467 -12468> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_importers|V>";
5483 Parameter <12468 -12469> {} "filter";
5484 Method <12470 -12471 12473> {PUBLIC} "add_fields";
5485 Parameter <12472 -12473> {} "vertex";
5486 Method <12477 -12478> {PUBLIC} "remove_fields";
5487 WildcardType <12474 -12476> "? extends Field" "? extends de.uni_koblenz.jgralab.jex.schema.Field";
5488 Method <12479 -12480 12482> {PUBLIC} "remove_fields";
5489 Parameter <12481 -12482> {} "vertex";
5490 Method <12484 12487 -12488> {PUBLIC} "get_fields";
5491 TypeParameter <12483 -12484 -12486> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_fields().V";
5492 ParametrizedType <12485 12486 -12487 12491 12492 -12493> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_fields|V>";
5493 Method <12490 12493 -12494 12498> {PUBLIC} "get_fields";
5494 TypeParameter <12489 -12490 -12492 -12496> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_fields(VertexFilter<V>).V";
5495 ParametrizedType <12495 12496 -12497> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_fields|V>";
5496 Parameter <12497 -12498> {} "filter";
5497 Method <12499 -12500 12502> {PUBLIC} "add_sourceFile";
5498 Parameter <12501 -12502> {} "vertex";
5499 Method <12506 -12507> {PUBLIC} "remove_sourceFile";
5500 WildcardType <12503 -12505> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
5501 Method <12508 -12509 12511> {PUBLIC} "remove_sourceFile";
5502 Parameter <12510 -12511> {} "vertex";
5503 Method <12512 -12513> {PUBLIC} "get_sourceFile";
5504 Method <12514 -12515 12517> {PUBLIC} "add_members";
5505 Parameter <12516 -12517> {} "vertex";
5506 Method <12521 -12522> {PUBLIC} "remove_members";
5507 WildcardType <12518 -12520> "? extends Member" "? extends de.uni_koblenz.jgralab.jex.schema.Member";
5508 Method <12523 -12524 12526> {PUBLIC} "remove_members";
5509 Parameter <12525 -12526> {} "vertex";
5510 Method <12528 12531 -12532> {PUBLIC} "get_members";
5511 TypeParameter <12527 -12528 -12530> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_members().V";
5512 ParametrizedType <12529 12530 -12531 12535 12536 -12537> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_members|V>";
5513 Method <12534 12537 -12538 12542> {PUBLIC} "get_members";
5514 TypeParameter <12533 -12534 -12536 -12540> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_members(VertexFilter<V>).V";
5515 ParametrizedType <12539 12540 -12541> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_members|V>";
5516 Parameter <12541 -12542> {} "filter";
5517 Method <12543 -12544 12546> {PUBLIC} "add_subclasses";
5518 Parameter <12545 -12546> {} "vertex";
5519 Method <12550 -12551> {PUBLIC} "remove_subclasses";
5520 WildcardType <12547 -12549> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
5521 Method <12552 -12553 12555> {PUBLIC} "remove_subclasses";
5522 Parameter <12554 -12555> {} "vertex";
5523 Method <12557 12560 -12561> {PUBLIC} "get_subclasses";
5524 TypeParameter <12556 -12557 -12559> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_subclasses().V";
5525 ParametrizedType <12558 12559 -12560 12564 12565 -12566> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_subclasses|V>";
5526 Method <12563 12566 -12567 12571> {PUBLIC} "get_subclasses";
5527 TypeParameter <12562 -12563 -12565 -12569> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_subclasses(VertexFilter<V>).V";
5528 ParametrizedType <12568 12569 -12570> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_subclasses|V>";
5529 Parameter <12570 -12571> {} "filter";
5530 Method <12572 -12573 12575> {PUBLIC} "add_interfaces";
5531 Parameter <12574 -12575> {} "vertex";
5532 Method <12579 -12580> {PUBLIC} "remove_interfaces";
5533 WildcardType <12576 -12578> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
5534 Method <12581 -12582 12584> {PUBLIC} "remove_interfaces";
5535 Parameter <12583 -12584> {} "vertex";
5536 Method <12586 12589 -12590> {PUBLIC} "get_interfaces";
5537 TypeParameter <12585 -12586 -12588> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_interfaces().V";
5538 ParametrizedType <12587 12588 -12589 12593 12594 -12595> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_interfaces|V>";
5539 Method <12592 12595 -12596 12600> {PUBLIC} "get_interfaces";
5540 TypeParameter <12591 -12592 -12594 -12598> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_interfaces(VertexFilter<V>).V";
5541 ParametrizedType <12597 12598 -12599> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_interfaces|V>";
5542 Parameter <12599 -12600> {} "filter";
5543 Method <12601 -12602 12604> {PUBLIC} "add_nestedClassifiers";
5544 Parameter <12603 -12604> {} "vertex";
5545 Method <12608 -12609> {PUBLIC} "remove_nestedClassifiers";
5546 WildcardType <12605 -12607> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
5547 Method <12610 -12611 12613> {PUBLIC} "remove_nestedClassifiers";
5548 Parameter <12612 -12613> {} "vertex";
5549 Method <12615 12618 -12619> {PUBLIC} "get_nestedClassifiers";
5550 TypeParameter <12614 -12615 -12617> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_nestedClassifiers().V";
5551 ParametrizedType <12616 12617 -12618 12622 12623 -12624> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_nestedClassifiers|V>";
5552 Method <12621 12624 -12625 12629> {PUBLIC} "get_nestedClassifiers";
5553 TypeParameter <12620 -12621 -12623 -12627> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_nestedClassifiers(VertexFilter<V>).V";
5554 ParametrizedType <12626 12627 -12628> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_nestedClassifiers|V>";
5555 Parameter <12628 -12629> {} "filter";
5556 Method <12630 -12631 12633> {PUBLIC} "add_superclass";
5557 Parameter <12632 -12633> {} "vertex";
5558 Method <12637 -12638> {PUBLIC} "remove_superclass";
5559 WildcardType <12634 -12636> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
5560 Method <12639 -12640 12642> {PUBLIC} "remove_superclass";
5561 Parameter <12641 -12642> {} "vertex";
5562 Method <12643 -12644> {PUBLIC} "get_superclass";
5563 Method <12645 -12646 12648> {PUBLIC} "add_typeParams";
5564 Parameter <12647 -12648> {} "vertex";
5565 Method <12652 -12653> {PUBLIC} "remove_typeParams";
5566 WildcardType <12649 -12651> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
5567 Method <12654 -12655 12657> {PUBLIC} "remove_typeParams";
5568 Parameter <12656 -12657> {} "vertex";
5569 Method <12659 12662 -12663> {PUBLIC} "get_typeParams";
5570 TypeParameter <12658 -12659 -12661> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_typeParams().V";
5571 ParametrizedType <12660 12661 -12662 12666 12667 -12668> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_typeParams|V>";
5572 Method <12665 12668 -12669 12673> {PUBLIC} "get_typeParams";
5573 TypeParameter <12664 -12665 -12667 -12671> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_typeParams(VertexFilter<V>).V";
5574 ParametrizedType <12670 12671 -12672> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_typeParams|V>";
5575 Parameter <12672 -12673> {} "filter";
5576 Method <12674 -12675 12677> {PUBLIC} "add_implementors";
5577 Parameter <12676 -12677> {} "vertex";
5578 Method <12681 -12682> {PUBLIC} "remove_implementors";
5579 WildcardType <12678 -12680> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
5580 Method <12683 -12684 12686> {PUBLIC} "remove_implementors";
5581 Parameter <12685 -12686> {} "vertex";
5582 Method <12688 12691 -12692> {PUBLIC} "get_implementors";
5583 TypeParameter <12687 -12688 -12690> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_implementors().V";
5584 ParametrizedType <12689 12690 -12691 12695 12696 -12697> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_implementors|V>";
5585 Method <12694 12697 -12698 12702> {PUBLIC} "get_implementors";
5586 TypeParameter <12693 -12694 -12696 -12700> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_implementors(VertexFilter<V>).V";
5587 ParametrizedType <12699 12700 -12701> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_implementors|V>";
5588 Parameter <12701 -12702> {} "filter";
5589 Method <12703 -12704 12706> {PUBLIC} "add_methods";
5590 Parameter <12705 -12706> {} "vertex";
5591 Method <12710 -12711> {PUBLIC} "remove_methods";
5592 WildcardType <12707 -12709> "? extends Method" "? extends de.uni_koblenz.jgralab.jex.schema.Method";
5593 Method <12712 -12713 12715> {PUBLIC} "remove_methods";
5594 Parameter <12714 -12715> {} "vertex";
5595 Method <12717 12720 -12721> {PUBLIC} "get_methods";
5596 TypeParameter <12716 -12717 -12719> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_methods().V";
5597 ParametrizedType <12718 12719 -12720 12724 12725 -12726> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_methods|V>";
5598 Method <12723 12726 -12727 12731> {PUBLIC} "get_methods";
5599 TypeParameter <12722 -12723 -12725 -12729> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_methods(VertexFilter<V>).V";
5600 ParametrizedType <12728 12729 -12730> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_methods|V>";
5601 Parameter <12730 -12731> {} "filter";
5602 Method <12732 -12733 12735> {PUBLIC} "add_parent";
5603 Parameter <12734 -12735> {} "vertex";
5604 Method <12739 -12740> {PUBLIC} "remove_parent";
5605 WildcardType <12736 -12738> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
5606 Method <12741 -12742 12744> {PUBLIC} "remove_parent";
5607 Parameter <12743 -12744> {} "vertex";
5608 Method <12745 -12746> {PUBLIC} "get_parent";
5609 Method <12747 -12748 12750> {PUBLIC} "add_arrayType";
5610 Parameter <12749 -12750> {} "vertex";
5611 Method <12754 -12755> {PUBLIC} "remove_arrayType";
5612 WildcardType <12751 -12753> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
5613 Method <12756 -12757 12759> {PUBLIC} "remove_arrayType";
5614 Parameter <12758 -12759> {} "vertex";
5615 Method <12761 12764 -12765> {PUBLIC} "get_arrayType";
5616 TypeParameter <12760 -12761 -12763> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_arrayType().V";
5617 ParametrizedType <12762 12763 -12764 12768 12769 -12770> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_arrayType|V>";
5618 Method <12767 12770 -12771 12775> {PUBLIC} "get_arrayType";
5619 TypeParameter <12766 -12767 -12769 -12773> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_arrayType(VertexFilter<V>).V";
5620 ParametrizedType <12772 12773 -12774> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.InterfaceImpl.get_arrayType|V>";
5621 Parameter <12774 -12775> {} "filter";
5622 Method <12778 -12779> {PUBLIC} "getDefinesIncidences";
5623 Method <12782 -12783 12785> {PUBLIC} "getDefinesIncidences";
5624 Parameter <12784 -12785> {} "direction";
5625 Method <12788 -12789> {PUBLIC} "getHasUpperBoundIncidences";
5626 Method <12792 -12793 12795> {PUBLIC} "getHasUpperBoundIncidences";
5627 Parameter <12794 -12795> {} "direction";
5628 Method <12798 -12799> {PUBLIC} "getContainsClassifierIncidences";
5629 Method <12802 -12803 12805> {PUBLIC} "getContainsClassifierIncidences";
5630 Parameter <12804 -12805> {} "direction";
5631 Method <12808 -12809> {PUBLIC} "getHasTypeArgIncidences";
5632 Method <12812 -12813 12815> {PUBLIC} "getHasTypeArgIncidences";
5633 Parameter <12814 -12815> {} "direction";
5634 Method <12818 -12819> {PUBLIC} "getDeclaresMethodIncidences";
5635 Method <12822 -12823 12825> {PUBLIC} "getDeclaresMethodIncidences";
5636 Parameter <12824 -12825> {} "direction";
5637 Method <12828 -12829> {PUBLIC} "getHasElementTypeIncidences";
5638 Method <12832 -12833 12835> {PUBLIC} "getHasElementTypeIncidences";
5639 Parameter <12834 -12835> {} "direction";
5640 Method <12838 -12839> {PUBLIC} "getThrowsIncidences";
5641 Method <12842 -12843 12845> {PUBLIC} "getThrowsIncidences";
5642 Parameter <12844 -12845> {} "direction";
5643 Method <12848 -12849> {PUBLIC} "getImportsIncidences";
5644 Method <12852 -12853 12855> {PUBLIC} "getImportsIncidences";
5645 Parameter <12854 -12855> {} "direction";
5646 Method <12858 -12859> {PUBLIC} "getHasBoundIncidences";
5647 Method <12862 -12863 12865> {PUBLIC} "getHasBoundIncidences";
5648 Parameter <12864 -12865> {} "direction";
5649 Method <12868 -12869> {PUBLIC} "getHasLowerBoundIncidences";
5650 Method <12872 -12873 12875> {PUBLIC} "getHasLowerBoundIncidences";
5651 Parameter <12874 -12875> {} "direction";
5652 Method <12878 -12879> {PUBLIC} "getDeclaresIncidences";
5653 Method <12882 -12883 12885> {PUBLIC} "getDeclaresIncidences";
5654 Parameter <12884 -12885> {} "direction";
5655 Method <12888 -12889> {PUBLIC} "getDeclaresConstructorIncidences";
5656 Method <12892 -12893 12895> {PUBLIC} "getDeclaresConstructorIncidences";
5657 Parameter <12894 -12895> {} "direction";
5658 Method <12898 -12899> {PUBLIC} "getHasGenericTypeIncidences";
5659 Method <12902 -12903 12905> {PUBLIC} "getHasGenericTypeIncidences";
5660 Parameter <12904 -12905> {} "direction";
5661 Method <12908 -12909> {PUBLIC} "getExtendsIncidences";
5662 Method <12912 -12913 12915> {PUBLIC} "getExtendsIncidences";
5663 Parameter <12914 -12915> {} "direction";
5664 Method <12918 -12919> {PUBLIC} "getImplementsIncidences";
5665 Method <12922 -12923 12925> {PUBLIC} "getImplementsIncidences";
5666 Parameter <12924 -12925> {} "direction";
5667 Method <12928 -12929> {PUBLIC} "getHasTypeIncidences";
5668 Method <12932 -12933 12935> {PUBLIC} "getHasTypeIncidences";
5669 Parameter <12934 -12935> {} "direction";
5670 Method <12938 -12939> {PUBLIC} "getDeclaresNestedClassifierIncidences";
5671 Method <12942 -12943 12945> {PUBLIC} "getDeclaresNestedClassifierIncidences";
5672 Parameter <12944 -12945> {} "direction";
5673 Method <12948 -12949> {PUBLIC} "getHasTypeParamIncidences";
5674 Method <12952 -12953 12955> {PUBLIC} "getHasTypeParamIncidences";
5675 Parameter <12954 -12955> {} "direction";
5676 Method <12958 -12959> {PUBLIC} "getDeclaresFieldIncidences";
5677 Method <12962 -12963 12965> {PUBLIC} "getDeclaresFieldIncidences";
5678 Parameter <12964 -12965> {} "direction";
5679 SourceFile <12968 12969 12970 12974> 62 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/JavaGraphFactoryImpl.java";
5680 Class <-12968 -12971> {ABSTRACT} "GraphFactoryImpl" "de.uni_koblenz.jgralab.impl.GraphFactoryImpl";
5681 Class <12971 12972 12973 -12974 -12975> {PUBLIC} "JavaGraphFactoryImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.JavaGraphFactoryImpl";
5682 Constructor <-12973> {PUBLIC} "JavaGraphFactoryImpl";
5683 SourceFile <12976 12977 12978 12979 12980 12981 12982 13971> 1058 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/JavaGraphImpl.java";
5684 Class <-12976> {PUBLIC} "EdgeIterable" "de.uni_koblenz.jgralab.impl.EdgeIterable";
5685 Class <-12977> {PUBLIC} "VertexIterable" "de.uni_koblenz.jgralab.impl.VertexIterable";
5686 Class <-12978 -12983> {ABSTRACT} "GraphImpl" "de.uni_koblenz.jgralab.impl.std.GraphImpl";
5687 Class <12983 12984 12985 12986 12987 12992 12999 13003 13008 13011 13016 13022 13027 13034 13040 13046 13048 13050 13052 13056 13058 13060 13064 13066 13068 13072 13074 13076 13080 13082 13084 13086 13090 13092 13098 13106 13108 13114 13122 13124 13126 13132 13140 13142 13148 13156 13158 13164 13172 13174 13180 13188 13190 13196 13204 13206 13212 13220 13222 13228 13236 13238 13240 13244 13246 13248 13252 13254 13260 13268 13270 13272 13276 13278 13284 13292 13294 13300 13308 13310 13316 13324 13326 13332 13340 13342 13348 13356 13358 13364 13372 13374 13380 13388 13390 13396 13404 13406 13412 13420 13422 13428 13436 13438 13444 13452 13454 13456 13460 13462 13464 13466 13470 13472 13474 13476 13478 13480 13484 13486 13488 13492 13494 13496 13500 13502 13504 13508 13510 13512 13514 13518 13520 13526 13534 13536 13538 13540 13544 13546 13548 13550 13552 13558 13562 13566 13570 13574 13578 13582 13586 13590 13594 13598 13602 13606 13610 13614 13618 13622 13626 13630 13634 13638 13642 13646 13650 13654 13662 13666 13674 13678 13686 13690 13698 13702 13710 13714 13722 13726 13734 13738 13746 13750 13758 13762 13770 13774 13782 13786 13794 13798 13806 13810 13818 13822 13830 13834 13842 13846 13854 13858 13866 13870 13878 13882 13890 13894 13902 13906 13914 13918 13926 13930 13938 13942 13950 13954 13962 13966 -13971 -13972> {PUBLIC} "JavaGraphImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.JavaGraphImpl";
5688 Constructor <-12986> {PUBLIC} "JavaGraphImpl";
5689 Constructor <-12987 12989 12991> {PUBLIC} "JavaGraphImpl";
5690 Parameter <12988 -12989> {} "vMax";
5691 Parameter <12990 -12991> {} "eMax";
5692 Constructor <-12992 12994 12996 12998> {PUBLIC} "JavaGraphImpl";
5693 Parameter <12993 -12994> {} "id";
5694 Parameter <12995 -12996> {} "vMax";
5695 Parameter <12997 -12998> {} "eMax";
5696 Constructor <-12999 13001> {PUBLIC} "JavaGraphImpl";
5697 Parameter <13000 -13001> {} "id";
5698 Method <13002 -13003> {PUBLIC FINAL} "getAttributedElementClass";
5699 Method <13007 -13008> {PUBLIC FINAL} "getSchemaClass";
5700 WildcardType <13004 -13006> "? extends Graph" "? extends de.uni_koblenz.jgralab.Graph";
5701 ParametrizedType <13005 13006 -13007> n "Class<? extends Graph>" "java.lang.Class<? extends de.uni_koblenz.jgralab.Graph>";
5702 Method <13009 13010 -13011 13013> {PUBLIC} "getAttribute";
5703 TypeParameter <-13009 -13010> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.JavaGraphImpl.getAttribute(String).T";
5704 Parameter <13012 -13013> {} "attributeName";
5705 Method <13014 13015 -13016 13018 13020> {PUBLIC} "setAttribute";
5706 TypeParameter <-13014 -13019> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.JavaGraphImpl.setAttribute(String,T).T";
5707 Parameter <13017 -13018> {} "attributeName";
5708 Parameter <13019 -13020> {} "data";
5709 Method <13021 -13022 13024 13025> {PUBLIC} "readAttributeValues";
5710 Parameter <13023 -13024> {} "io";
5711 Method <13026 -13027 13029 13031 13032> {PUBLIC} "readAttributeValueFromString";
5712 Parameter <13028 -13029> {} "attributeName";
5713 Parameter <13030 -13031> {} "value";
5714 Method <13033 -13034 13036 13037 13038> {PUBLIC} "writeAttributeValues";
5715 Parameter <13035 -13036> {} "io";
5716 Method <13039 -13040 13042 13043 13044> {PUBLIC} "writeAttributeValueToString";
5717 Parameter <13041 -13042> {} "attributeName";
5718 Method <13045 -13046> {PUBLIC} "getFirstAbstractClassifier";
5719 Method <13047 -13048> {PUBLIC} "getFirstAnnotation";
5720 Method <13049 -13050> {PUBLIC} "createAnnotation";
5721 Method <13051 -13052 13054> {PUBLIC} "createAnnotation";
5722 Parameter <13053 -13054> {} "id";
5723 Method <13055 -13056> {PUBLIC} "getFirstAnnotationElement";
5724 Method <13057 -13058> {PUBLIC} "createAnnotationElement";
5725 Method <13059 -13060 13062> {PUBLIC} "createAnnotationElement";
5726 Parameter <13061 -13062> {} "id";
5727 Method <13063 -13064> {PUBLIC} "getFirstArrayType";
5728 Method <13065 -13066> {PUBLIC} "createArrayType";
5729 Method <13067 -13068 13070> {PUBLIC} "createArrayType";
5730 Parameter <13069 -13070> {} "id";
5731 Method <13071 -13072> {PUBLIC} "getFirstClass";
5732 Method <13073 -13074> {PUBLIC} "createClass";
5733 Method <13075 -13076 13078> {PUBLIC} "createClass";
5734 Parameter <13077 -13078> {} "id";
5735 Method <13079 -13080> {PUBLIC} "getFirstClassifier";
5736 Method <13081 -13082> {PUBLIC} "getFirstConstructor";
5737 Method <13083 -13084> {PUBLIC} "createConstructor";
5738 Method <13085 -13086 13088> {PUBLIC} "createConstructor";
5739 Parameter <13087 -13088> {} "id";
5740 Method <13089 -13090> {PUBLIC} "getFirstContainsClassifier";
5741 Method <13091 -13092 13094 13096> {PUBLIC} "createContainsClassifier";
5742 Parameter <13093 -13094> {} "alpha";
5743 Parameter <13095 -13096> {} "omega";
5744 Method <13097 -13098 13100 13102 13104> {PUBLIC} "createContainsClassifier";
5745 Parameter <13099 -13100> {} "id";
5746 Parameter <13101 -13102> {} "alpha";
5747 Parameter <13103 -13104> {} "omega";
5748 Method <13105 -13106> {PUBLIC} "getFirstContainsPackage";
5749 Method <13107 -13108 13110 13112> {PUBLIC} "createContainsPackage";
5750 Parameter <13109 -13110> {} "alpha";
5751 Parameter <13111 -13112> {} "omega";
5752 Method <13113 -13114 13116 13118 13120> {PUBLIC} "createContainsPackage";
5753 Parameter <13115 -13116> {} "id";
5754 Parameter <13117 -13118> {} "alpha";
5755 Parameter <13119 -13120> {} "omega";
5756 Method <13121 -13122> {PUBLIC} "getFirstDeclares";
5757 Method <13123 -13124> {PUBLIC} "getFirstDeclaresAnnotationElement";
5758 Method <13125 -13126 13128 13130> {PUBLIC} "createDeclaresAnnotationElement";
5759 Parameter <13127 -13128> {} "alpha";
5760 Parameter <13129 -13130> {} "omega";
5761 Method <13131 -13132 13134 13136 13138> {PUBLIC} "createDeclaresAnnotationElement";
5762 Parameter <13133 -13134> {} "id";
5763 Parameter <13135 -13136> {} "alpha";
5764 Parameter <13137 -13138> {} "omega";
5765 Method <13139 -13140> {PUBLIC} "getFirstDeclaresConstructor";
5766 Method <13141 -13142 13144 13146> {PUBLIC} "createDeclaresConstructor";
5767 Parameter <13143 -13144> {} "alpha";
5768 Parameter <13145 -13146> {} "omega";
5769 Method <13147 -13148 13150 13152 13154> {PUBLIC} "createDeclaresConstructor";
5770 Parameter <13149 -13150> {} "id";
5771 Parameter <13151 -13152> {} "alpha";
5772 Parameter <13153 -13154> {} "omega";
5773 Method <13155 -13156> {PUBLIC} "getFirstDeclaresEnumConst";
5774 Method <13157 -13158 13160 13162> {PUBLIC} "createDeclaresEnumConst";
5775 Parameter <13159 -13160> {} "alpha";
5776 Parameter <13161 -13162> {} "omega";
5777 Method <13163 -13164 13166 13168 13170> {PUBLIC} "createDeclaresEnumConst";
5778 Parameter <13165 -13166> {} "id";
5779 Parameter <13167 -13168> {} "alpha";
5780 Parameter <13169 -13170> {} "omega";
5781 Method <13171 -13172> {PUBLIC} "getFirstDeclaresField";
5782 Method <13173 -13174 13176 13178> {PUBLIC} "createDeclaresField";
5783 Parameter <13175 -13176> {} "alpha";
5784 Parameter <13177 -13178> {} "omega";
5785 Method <13179 -13180 13182 13184 13186> {PUBLIC} "createDeclaresField";
5786 Parameter <13181 -13182> {} "id";
5787 Parameter <13183 -13184> {} "alpha";
5788 Parameter <13185 -13186> {} "omega";
5789 Method <13187 -13188> {PUBLIC} "getFirstDeclaresMethod";
5790 Method <13189 -13190 13192 13194> {PUBLIC} "createDeclaresMethod";
5791 Parameter <13191 -13192> {} "alpha";
5792 Parameter <13193 -13194> {} "omega";
5793 Method <13195 -13196 13198 13200 13202> {PUBLIC} "createDeclaresMethod";
5794 Parameter <13197 -13198> {} "id";
5795 Parameter <13199 -13200> {} "alpha";
5796 Parameter <13201 -13202> {} "omega";
5797 Method <13203 -13204> {PUBLIC} "getFirstDeclaresNestedClassifier";
5798 Method <13205 -13206 13208 13210> {PUBLIC} "createDeclaresNestedClassifier";
5799 Parameter <13207 -13208> {} "alpha";
5800 Parameter <13209 -13210> {} "omega";
5801 Method <13211 -13212 13214 13216 13218> {PUBLIC} "createDeclaresNestedClassifier";
5802 Parameter <13213 -13214> {} "id";
5803 Parameter <13215 -13216> {} "alpha";
5804 Parameter <13217 -13218> {} "omega";
5805 Method <13219 -13220> {PUBLIC} "getFirstDefines";
5806 Method <13221 -13222 13224 13226> {PUBLIC} "createDefines";
5807 Parameter <13223 -13224> {} "alpha";
5808 Parameter <13225 -13226> {} "omega";
5809 Method <13227 -13228 13230 13232 13234> {PUBLIC} "createDefines";
5810 Parameter <13229 -13230> {} "id";
5811 Parameter <13231 -13232> {} "alpha";
5812 Parameter <13233 -13234> {} "omega";
5813 Method <13235 -13236> {PUBLIC} "getFirstEnum";
5814 Method <13237 -13238> {PUBLIC} "createEnum";
5815 Method <13239 -13240 13242> {PUBLIC} "createEnum";
5816 Parameter <13241 -13242> {} "id";
5817 Method <13243 -13244> {PUBLIC} "getFirstEnumConst";
5818 Method <13245 -13246> {PUBLIC} "createEnumConst";
5819 Method <13247 -13248 13250> {PUBLIC} "createEnumConst";
5820 Parameter <13249 -13250> {} "id";
5821 Method <13251 -13252> {PUBLIC} "getFirstExtends";
5822 Method <13253 -13254 13256 13258> {PUBLIC} "createExtends";
5823 Parameter <13255 -13256> {} "alpha";
5824 Parameter <13257 -13258> {} "omega";
5825 Method <13259 -13260 13262 13264 13266> {PUBLIC} "createExtends";
5826 Parameter <13261 -13262> {} "id";
5827 Parameter <13263 -13264> {} "alpha";
5828 Parameter <13265 -13266> {} "omega";
5829 Method <13267 -13268> {PUBLIC} "getFirstField";
5830 Method <13269 -13270> {PUBLIC} "createField";
5831 Method <13271 -13272 13274> {PUBLIC} "createField";
5832 Parameter <13273 -13274> {} "id";
5833 Method <13275 -13276> {PUBLIC} "getFirstHasBound";
5834 Method <13277 -13278 13280 13282> {PUBLIC} "createHasBound";
5835 Parameter <13279 -13280> {} "alpha";
5836 Parameter <13281 -13282> {} "omega";
5837 Method <13283 -13284 13286 13288 13290> {PUBLIC} "createHasBound";
5838 Parameter <13285 -13286> {} "id";
5839 Parameter <13287 -13288> {} "alpha";
5840 Parameter <13289 -13290> {} "omega";
5841 Method <13291 -13292> {PUBLIC} "getFirstHasElementType";
5842 Method <13293 -13294 13296 13298> {PUBLIC} "createHasElementType";
5843 Parameter <13295 -13296> {} "alpha";
5844 Parameter <13297 -13298> {} "omega";
5845 Method <13299 -13300 13302 13304 13306> {PUBLIC} "createHasElementType";
5846 Parameter <13301 -13302> {} "id";
5847 Parameter <13303 -13304> {} "alpha";
5848 Parameter <13305 -13306> {} "omega";
5849 Method <13307 -13308> {PUBLIC} "getFirstHasGenericType";
5850 Method <13309 -13310 13312 13314> {PUBLIC} "createHasGenericType";
5851 Parameter <13311 -13312> {} "alpha";
5852 Parameter <13313 -13314> {} "omega";
5853 Method <13315 -13316 13318 13320 13322> {PUBLIC} "createHasGenericType";
5854 Parameter <13317 -13318> {} "id";
5855 Parameter <13319 -13320> {} "alpha";
5856 Parameter <13321 -13322> {} "omega";
5857 Method <13323 -13324> {PUBLIC} "getFirstHasLowerBound";
5858 Method <13325 -13326 13328 13330> {PUBLIC} "createHasLowerBound";
5859 Parameter <13327 -13328> {} "alpha";
5860 Parameter <13329 -13330> {} "omega";
5861 Method <13331 -13332 13334 13336 13338> {PUBLIC} "createHasLowerBound";
5862 Parameter <13333 -13334> {} "id";
5863 Parameter <13335 -13336> {} "alpha";
5864 Parameter <13337 -13338> {} "omega";
5865 Method <13339 -13340> {PUBLIC} "getFirstHasParam";
5866 Method <13341 -13342 13344 13346> {PUBLIC} "createHasParam";
5867 Parameter <13343 -13344> {} "alpha";
5868 Parameter <13345 -13346> {} "omega";
5869 Method <13347 -13348 13350 13352 13354> {PUBLIC} "createHasParam";
5870 Parameter <13349 -13350> {} "id";
5871 Parameter <13351 -13352> {} "alpha";
5872 Parameter <13353 -13354> {} "omega";
5873 Method <13355 -13356> {PUBLIC} "getFirstHasType";
5874 Method <13357 -13358 13360 13362> {PUBLIC} "createHasType";
5875 Parameter <13359 -13360> {} "alpha";
5876 Parameter <13361 -13362> {} "omega";
5877 Method <13363 -13364 13366 13368 13370> {PUBLIC} "createHasType";
5878 Parameter <13365 -13366> {} "id";
5879 Parameter <13367 -13368> {} "alpha";
5880 Parameter <13369 -13370> {} "omega";
5881 Method <13371 -13372> {PUBLIC} "getFirstHasTypeArg";
5882 Method <13373 -13374 13376 13378> {PUBLIC} "createHasTypeArg";
5883 Parameter <13375 -13376> {} "alpha";
5884 Parameter <13377 -13378> {} "omega";
5885 Method <13379 -13380 13382 13384 13386> {PUBLIC} "createHasTypeArg";
5886 Parameter <13381 -13382> {} "id";
5887 Parameter <13383 -13384> {} "alpha";
5888 Parameter <13385 -13386> {} "omega";
5889 Method <13387 -13388> {PUBLIC} "getFirstHasTypeParam";
5890 Method <13389 -13390 13392 13394> {PUBLIC} "createHasTypeParam";
5891 Parameter <13391 -13392> {} "alpha";
5892 Parameter <13393 -13394> {} "omega";
5893 Method <13395 -13396 13398 13400 13402> {PUBLIC} "createHasTypeParam";
5894 Parameter <13397 -13398> {} "id";
5895 Parameter <13399 -13400> {} "alpha";
5896 Parameter <13401 -13402> {} "omega";
5897 Method <13403 -13404> {PUBLIC} "getFirstHasUpperBound";
5898 Method <13405 -13406 13408 13410> {PUBLIC} "createHasUpperBound";
5899 Parameter <13407 -13408> {} "alpha";
5900 Parameter <13409 -13410> {} "omega";
5901 Method <13411 -13412 13414 13416 13418> {PUBLIC} "createHasUpperBound";
5902 Parameter <13413 -13414> {} "id";
5903 Parameter <13415 -13416> {} "alpha";
5904 Parameter <13417 -13418> {} "omega";
5905 Method <13419 -13420> {PUBLIC} "getFirstImplements";
5906 Method <13421 -13422 13424 13426> {PUBLIC} "createImplements";
5907 Parameter <13423 -13424> {} "alpha";
5908 Parameter <13425 -13426> {} "omega";
5909 Method <13427 -13428 13430 13432 13434> {PUBLIC} "createImplements";
5910 Parameter <13429 -13430> {} "id";
5911 Parameter <13431 -13432> {} "alpha";
5912 Parameter <13433 -13434> {} "omega";
5913 Method <13435 -13436> {PUBLIC} "getFirstImports";
5914 Method <13437 -13438 13440 13442> {PUBLIC} "createImports";
5915 Parameter <13439 -13440> {} "alpha";
5916 Parameter <13441 -13442> {} "omega";
5917 Method <13443 -13444 13446 13448 13450> {PUBLIC} "createImports";
5918 Parameter <13445 -13446> {} "id";
5919 Parameter <13447 -13448> {} "alpha";
5920 Parameter <13449 -13450> {} "omega";
5921 Method <13451 -13452> {PUBLIC} "getFirstInterface";
5922 Method <13453 -13454> {PUBLIC} "createInterface";
5923 Method <13455 -13456 13458> {PUBLIC} "createInterface";
5924 Parameter <13457 -13458> {} "id";
5925 Method <13459 -13460> {PUBLIC} "getFirstMember";
5926 Method <13461 -13462> {PUBLIC} "getFirstMethod";
5927 Method <13463 -13464> {PUBLIC} "createMethod";
5928 Method <13465 -13466 13468> {PUBLIC} "createMethod";
5929 Parameter <13467 -13468> {} "id";
5930 Method <13469 -13470> {PUBLIC} "getFirstMethodLike";
5931 Method <13471 -13472> {PUBLIC} "getFirstModifiableElement";
5932 Method <13473 -13474> {PUBLIC} "getFirstNamedElement";
5933 Method <13475 -13476> {PUBLIC} "getFirstPackage";
5934 Method <13477 -13478> {PUBLIC} "createPackage";
5935 Method <13479 -13480 13482> {PUBLIC} "createPackage";
5936 Parameter <13481 -13482> {} "id";
5937 Method <13483 -13484> {PUBLIC} "getFirstParameter";
5938 Method <13485 -13486> {PUBLIC} "createParameter";
5939 Method <13487 -13488 13490> {PUBLIC} "createParameter";
5940 Parameter <13489 -13490> {} "id";
5941 Method <13491 -13492> {PUBLIC} "getFirstParametrizedType";
5942 Method <13493 -13494> {PUBLIC} "createParametrizedType";
5943 Method <13495 -13496 13498> {PUBLIC} "createParametrizedType";
5944 Parameter <13497 -13498> {} "id";
5945 Method <13499 -13500> {PUBLIC} "getFirstPrimitiveType";
5946 Method <13501 -13502> {PUBLIC} "createPrimitiveType";
5947 Method <13503 -13504 13506> {PUBLIC} "createPrimitiveType";
5948 Parameter <13505 -13506> {} "id";
5949 Method <13507 -13508> {PUBLIC} "getFirstQualifiedNamedElement";
5950 Method <13509 -13510> {PUBLIC} "getFirstSourceFile";
5951 Method <13511 -13512> {PUBLIC} "createSourceFile";
5952 Method <13513 -13514 13516> {PUBLIC} "createSourceFile";
5953 Parameter <13515 -13516> {} "id";
5954 Method <13517 -13518> {PUBLIC} "getFirstThrows";
5955 Method <13519 -13520 13522 13524> {PUBLIC} "createThrows";
5956 Parameter <13521 -13522> {} "alpha";
5957 Parameter <13523 -13524> {} "omega";
5958 Method <13525 -13526 13528 13530 13532> {PUBLIC} "createThrows";
5959 Parameter <13527 -13528> {} "id";
5960 Parameter <13529 -13530> {} "alpha";
5961 Parameter <13531 -13532> {} "omega";
5962 Method <13533 -13534> {PUBLIC} "getFirstType";
5963 Method <13535 -13536> {PUBLIC} "getFirstTypeParameter";
5964 Method <13537 -13538> {PUBLIC} "createTypeParameter";
5965 Method <13539 -13540 13542> {PUBLIC} "createTypeParameter";
5966 Parameter <13541 -13542> {} "id";
5967 Method <13543 -13544> {PUBLIC} "getFirstTypeParametrizable";
5968 Method <13545 -13546> {PUBLIC} "getFirstTypedElement";
5969 Method <13547 -13548> {PUBLIC} "getFirstWildcardType";
5970 Method <13549 -13550> {PUBLIC} "createWildcardType";
5971 Method <13551 -13552 13554> {PUBLIC} "createWildcardType";
5972 Parameter <13553 -13554> {} "id";
5973 Method <13557 -13558> {PUBLIC} "getHasTypeEdges";
5974 Method <13561 -13562> {PUBLIC} "getImportsEdges";
5975 Method <13565 -13566> {PUBLIC} "getContainsPackageEdges";
5976 Method <13569 -13570> {PUBLIC} "getContainsClassifierEdges";
5977 Method <13573 -13574> {PUBLIC} "getDefinesEdges";
5978 Method <13577 -13578> {PUBLIC} "getDeclaresEdges";
5979 Method <13581 -13582> {PUBLIC} "getHasParamEdges";
5980 Method <13585 -13586> {PUBLIC} "getExtendsEdges";
5981 Method <13589 -13590> {PUBLIC} "getImplementsEdges";
5982 Method <13593 -13594> {PUBLIC} "getHasElementTypeEdges";
5983 Method <13597 -13598> {PUBLIC} "getThrowsEdges";
5984 Method <13601 -13602> {PUBLIC} "getHasTypeParamEdges";
5985 Method <13605 -13606> {PUBLIC} "getHasBoundEdges";
5986 Method <13609 -13610> {PUBLIC} "getHasGenericTypeEdges";
5987 Method <13613 -13614> {PUBLIC} "getHasLowerBoundEdges";
5988 Method <13617 -13618> {PUBLIC} "getHasUpperBoundEdges";
5989 Method <13621 -13622> {PUBLIC} "getHasTypeArgEdges";
5990 Method <13625 -13626> {PUBLIC} "getDeclaresFieldEdges";
5991 Method <13629 -13630> {PUBLIC} "getDeclaresMethodEdges";
5992 Method <13633 -13634> {PUBLIC} "getDeclaresConstructorEdges";
5993 Method <13637 -13638> {PUBLIC} "getDeclaresEnumConstEdges";
5994 Method <13641 -13642> {PUBLIC} "getDeclaresAnnotationElementEdges";
5995 Method <13645 -13646> {PUBLIC} "getDeclaresNestedClassifierEdges";
5996 Method <13649 -13650> {PUBLIC} "getTypeVertices";
5997 Method <13653 -13654 13658> {PUBLIC} "getTypeVertices";
5998 Parameter <13657 -13658> {} "filter";
5999 Method <13661 -13662> {PUBLIC} "getConstructorVertices";
6000 Method <13665 -13666 13670> {PUBLIC} "getConstructorVertices";
6001 Parameter <13669 -13670> {} "filter";
6002 Method <13673 -13674> {PUBLIC} "getParametrizedTypeVertices";
6003 Method <13677 -13678 13682> {PUBLIC} "getParametrizedTypeVertices";
6004 Parameter <13681 -13682> {} "filter";
6005 Method <13685 -13686> {PUBLIC} "getQualifiedNamedElementVertices";
6006 Method <13689 -13690 13694> {PUBLIC} "getQualifiedNamedElementVertices";
6007 Parameter <13693 -13694> {} "filter";
6008 Method <13697 -13698> {PUBLIC} "getArrayTypeVertices";
6009 Method <13701 -13702 13706> {PUBLIC} "getArrayTypeVertices";
6010 Parameter <13705 -13706> {} "filter";
6011 Method <13709 -13710> {PUBLIC} "getTypedElementVertices";
6012 Method <13713 -13714 13718> {PUBLIC} "getTypedElementVertices";
6013 Parameter <13717 -13718> {} "filter";
6014 Method <13721 -13722> {PUBLIC} "getEnumVertices";
6015 Method <13725 -13726 13730> {PUBLIC} "getEnumVertices";
6016 Parameter <13729 -13730> {} "filter";
6017 Method <13733 -13734> {PUBLIC} "getMethodLikeVertices";
6018 Method <13737 -13738 13742> {PUBLIC} "getMethodLikeVertices";
6019 Parameter <13741 -13742> {} "filter";
6020 Method <13745 -13746> {PUBLIC} "getEnumConstVertices";
6021 Method <13749 -13750 13754> {PUBLIC} "getEnumConstVertices";
6022 Parameter <13753 -13754> {} "filter";
6023 Method <13757 -13758> {PUBLIC} "getNamedElementVertices";
6024 Method <13761 -13762 13766> {PUBLIC} "getNamedElementVertices";
6025 Parameter <13765 -13766> {} "filter";
6026 Method <13769 -13770> {PUBLIC} "getInterfaceVertices";
6027 Method <13773 -13774 13778> {PUBLIC} "getInterfaceVertices";
6028 Parameter <13777 -13778> {} "filter";
6029 Method <13781 -13782> {PUBLIC} "getSourceFileVertices";
6030 Method <13785 -13786 13790> {PUBLIC} "getSourceFileVertices";
6031 Parameter <13789 -13790> {} "filter";
6032 Method <13793 -13794> {PUBLIC} "getFieldVertices";
6033 Method <13797 -13798 13802> {PUBLIC} "getFieldVertices";
6034 Parameter <13801 -13802> {} "filter";
6035 Method <13805 -13806> {PUBLIC} "getPrimitiveTypeVertices";
6036 Method <13809 -13810 13814> {PUBLIC} "getPrimitiveTypeVertices";
6037 Parameter <13813 -13814> {} "filter";
6038 Method <13817 -13818> {PUBLIC} "getWildcardTypeVertices";
6039 Method <13821 -13822 13826> {PUBLIC} "getWildcardTypeVertices";
6040 Parameter <13825 -13826> {} "filter";
6041 Method <13829 -13830> {PUBLIC} "getClassifierVertices";
6042 Method <13833 -13834 13838> {PUBLIC} "getClassifierVertices";
6043 Parameter <13837 -13838> {} "filter";
6044 Method <13841 -13842> {PUBLIC} "getPackageVertices";
6045 Method <13845 -13846 13850> {PUBLIC} "getPackageVertices";
6046 Parameter <13849 -13850> {} "filter";
6047 Method <13853 -13854> {PUBLIC} "getAnnotationVertices";
6048 Method <13857 -13858 13862> {PUBLIC} "getAnnotationVertices";
6049 Parameter <13861 -13862> {} "filter";
6050 Method <13865 -13866> {PUBLIC} "getMemberVertices";
6051 Method <13869 -13870 13874> {PUBLIC} "getMemberVertices";
6052 Parameter <13873 -13874> {} "filter";
6053 Method <13877 -13878> {PUBLIC} "getParameterVertices";
6054 Method <13881 -13882 13886> {PUBLIC} "getParameterVertices";
6055 Parameter <13885 -13886> {} "filter";
6056 Method <13889 -13890> {PUBLIC} "getTypeParameterVertices";
6057 Method <13893 -13894 13898> {PUBLIC} "getTypeParameterVertices";
6058 Parameter <13897 -13898> {} "filter";
6059 Method <13901 -13902> {PUBLIC} "getClassVertices";
6060 Method <13905 -13906 13910> {PUBLIC} "getClassVertices";
6061 Parameter <13909 -13910> {} "filter";
6062 Method <13913 -13914> {PUBLIC} "getModifiableElementVertices";
6063 Method <13917 -13918 13922> {PUBLIC} "getModifiableElementVertices";
6064 Parameter <13921 -13922> {} "filter";
6065 Method <13925 -13926> {PUBLIC} "getMethodVertices";
6066 Method <13929 -13930 13934> {PUBLIC} "getMethodVertices";
6067 Parameter <13933 -13934> {} "filter";
6068 Method <13937 -13938> {PUBLIC} "getAbstractClassifierVertices";
6069 Method <13941 -13942 13946> {PUBLIC} "getAbstractClassifierVertices";
6070 Parameter <13945 -13946> {} "filter";
6071 Method <13949 -13950> {PUBLIC} "getAnnotationElementVertices";
6072 Method <13953 -13954 13958> {PUBLIC} "getAnnotationElementVertices";
6073 Parameter <13957 -13958> {} "filter";
6074 Method <13961 -13962> {PUBLIC} "getTypeParametrizableVertices";
6075 Method <13965 -13966 13970> {PUBLIC} "getTypeParametrizableVertices";
6076 Parameter <13969 -13970> {} "filter";
6077 SourceFile <13973 13974 13975 13976 13977 13978 13979 14327> 590 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/MethodImpl.java";
6078 Class <13980 13981 13982 13983 13984 13988 13990 13991 13997 14002 14005 14010 14018 14020 14026 14028 14032 14037 14044 14050 14056 14058 14060 14062 14064 14066 14068 14070 14072 14076 14078 14082 14084 14088 14090 14094 14096 14100 14102 14106 14108 14112 14119 14121 14129 14135 14141 14148 14150 14158 14164 14170 14177 14179 14187 14193 14199 14206 14208 14216 14222 14228 14235 14237 14241 14243 14250 14252 14256 14260 14264 14270 14274 14280 14284 14290 14294 14300 14304 14310 14314 14320 14324 -14327 -14328> {PUBLIC} "MethodImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl";
6079 Field <13987 -13988> {PROTECTED} "_modifiers";
6080 Field <13989 -13990> {PROTECTED} "_name";
6081 Constructor <-13991 13993 13995> {PUBLIC} "MethodImpl";
6082 Parameter <13992 -13993> {} "id";
6083 Parameter <13994 -13995> {} "g";
6084 Method <13996 -13997> {PUBLIC FINAL} "getAttributedElementClass";
6085 Method <14001 -14002> {PUBLIC FINAL} "getSchemaClass";
6086 WildcardType <13998 -14000> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
6087 Method <14003 14004 -14005 14007> {PUBLIC} "getAttribute";
6088 TypeParameter <-14003 -14004> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.getAttribute(String).T";
6089 Parameter <14006 -14007> {} "attributeName";
6090 Method <14008 14009 -14010 14012 14014> {PUBLIC} "setAttribute";
6091 TypeParameter <-14008 -14013> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.setAttribute(String,T).T";
6092 Parameter <14011 -14012> {} "attributeName";
6093 Parameter <14013 -14014> {} "data";
6094 Method <14017 -14018> {PUBLIC} "get_modifiers";
6095 Method <14019 -14020 14024> {PUBLIC} "set_modifiers";
6096 Parameter <14023 -14024> {} "_modifiers";
6097 Method <14025 -14026> {PUBLIC} "get_name";
6098 Method <14027 -14028 14030> {PUBLIC} "set_name";
6099 Parameter <14029 -14030> {} "_name";
6100 Method <14031 -14032 14034 14035> {PUBLIC} "readAttributeValues";
6101 Parameter <14033 -14034> {} "io";
6102 Method <14036 -14037 14039 14041 14042> {PUBLIC} "readAttributeValueFromString";
6103 Parameter <14038 -14039> {} "attributeName";
6104 Parameter <14040 -14041> {} "value";
6105 Method <14043 -14044 14046 14047 14048> {PUBLIC} "writeAttributeValues";
6106 Parameter <14045 -14046> {} "io";
6107 Method <14049 -14050 14052 14053 14054> {PUBLIC} "writeAttributeValueToString";
6108 Parameter <14051 -14052> {} "attributeName";
6109 Method <14055 -14056> {PUBLIC} "getNextMember";
6110 Method <14057 -14058> {PUBLIC} "getNextMethod";
6111 Method <14059 -14060> {PUBLIC} "getNextMethodLike";
6112 Method <14061 -14062> {PUBLIC} "getNextModifiableElement";
6113 Method <14063 -14064> {PUBLIC} "getNextNamedElement";
6114 Method <14065 -14066> {PUBLIC} "getNextTypeParametrizable";
6115 Method <14067 -14068> {PUBLIC} "getNextTypedElement";
6116 Method <14069 -14070> {PUBLIC} "getFirstHasTypeIncidence";
6117 Method <14071 -14072 14074> {PUBLIC} "getFirstHasTypeIncidence";
6118 Parameter <14073 -14074> {} "orientation";
6119 Method <14075 -14076> {PUBLIC} "getFirstHasTypeParamIncidence";
6120 Method <14077 -14078 14080> {PUBLIC} "getFirstHasTypeParamIncidence";
6121 Parameter <14079 -14080> {} "orientation";
6122 Method <14081 -14082> {PUBLIC} "getFirstDeclaresMethodIncidence";
6123 Method <14083 -14084 14086> {PUBLIC} "getFirstDeclaresMethodIncidence";
6124 Parameter <14085 -14086> {} "orientation";
6125 Method <14087 -14088> {PUBLIC} "getFirstImportsIncidence";
6126 Method <14089 -14090 14092> {PUBLIC} "getFirstImportsIncidence";
6127 Parameter <14091 -14092> {} "orientation";
6128 Method <14093 -14094> {PUBLIC} "getFirstHasParamIncidence";
6129 Method <14095 -14096 14098> {PUBLIC} "getFirstHasParamIncidence";
6130 Parameter <14097 -14098> {} "orientation";
6131 Method <14099 -14100> {PUBLIC} "getFirstThrowsIncidence";
6132 Method <14101 -14102 14104> {PUBLIC} "getFirstThrowsIncidence";
6133 Parameter <14103 -14104> {} "orientation";
6134 Method <14105 -14106> {PUBLIC} "getFirstDeclaresIncidence";
6135 Method <14107 -14108 14110> {PUBLIC} "getFirstDeclaresIncidence";
6136 Parameter <14109 -14110> {} "orientation";
6137 Method <14111 -14112 14114> {PUBLIC} "add_typeParams";
6138 Parameter <14113 -14114> {} "vertex";
6139 Method <14118 -14119> {PUBLIC} "remove_typeParams";
6140 WildcardType <14115 -14117> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
6141 Method <14120 -14121 14123> {PUBLIC} "remove_typeParams";
6142 Parameter <14122 -14123> {} "vertex";
6143 Method <14125 14128 -14129> {PUBLIC} "get_typeParams";
6144 TypeParameter <14124 -14125 -14127> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.get_typeParams().V";
6145 ParametrizedType <14126 14127 -14128 14132 14133 -14134> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.get_typeParams|V>";
6146 Method <14131 14134 -14135 14139> {PUBLIC} "get_typeParams";
6147 TypeParameter <14130 -14131 -14133 -14137> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.get_typeParams(VertexFilter<V>).V";
6148 ParametrizedType <14136 14137 -14138> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.get_typeParams|V>";
6149 Parameter <14138 -14139> {} "filter";
6150 Method <14140 -14141 14143> {PUBLIC} "add_exceptions";
6151 Parameter <14142 -14143> {} "vertex";
6152 Method <14147 -14148> {PUBLIC} "remove_exceptions";
6153 WildcardType <14144 -14146> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
6154 Method <14149 -14150 14152> {PUBLIC} "remove_exceptions";
6155 Parameter <14151 -14152> {} "vertex";
6156 Method <14154 14157 -14158> {PUBLIC} "get_exceptions";
6157 TypeParameter <14153 -14154 -14156> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.get_exceptions().V";
6158 ParametrizedType <14155 14156 -14157 14161 14162 -14163> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.get_exceptions|V>";
6159 Method <14160 14163 -14164 14168> {PUBLIC} "get_exceptions";
6160 TypeParameter <14159 -14160 -14162 -14166> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.get_exceptions(VertexFilter<V>).V";
6161 ParametrizedType <14165 14166 -14167> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.get_exceptions|V>";
6162 Parameter <14167 -14168> {} "filter";
6163 Method <14169 -14170 14172> {PUBLIC} "add_params";
6164 Parameter <14171 -14172> {} "vertex";
6165 Method <14176 -14177> {PUBLIC} "remove_params";
6166 WildcardType <14173 -14175> "? extends Parameter" "? extends de.uni_koblenz.jgralab.jex.schema.Parameter";
6167 Method <14178 -14179 14181> {PUBLIC} "remove_params";
6168 Parameter <14180 -14181> {} "vertex";
6169 Method <14183 14186 -14187> {PUBLIC} "get_params";
6170 TypeParameter <14182 -14183 -14185> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.get_params().V";
6171 ParametrizedType <14184 14185 -14186 14190 14191 -14192> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.get_params|V>";
6172 Method <14189 14192 -14193 14197> {PUBLIC} "get_params";
6173 TypeParameter <14188 -14189 -14191 -14195> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.get_params(VertexFilter<V>).V";
6174 ParametrizedType <14194 14195 -14196> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.get_params|V>";
6175 Parameter <14196 -14197> {} "filter";
6176 Method <14198 -14199 14201> {PUBLIC} "add_importers";
6177 Parameter <14200 -14201> {} "vertex";
6178 Method <14205 -14206> {PUBLIC} "remove_importers";
6179 WildcardType <14202 -14204> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
6180 Method <14207 -14208 14210> {PUBLIC} "remove_importers";
6181 Parameter <14209 -14210> {} "vertex";
6182 Method <14212 14215 -14216> {PUBLIC} "get_importers";
6183 TypeParameter <14211 -14212 -14214> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.get_importers().V";
6184 ParametrizedType <14213 14214 -14215 14219 14220 -14221> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.get_importers|V>";
6185 Method <14218 14221 -14222 14226> {PUBLIC} "get_importers";
6186 TypeParameter <14217 -14218 -14220 -14224> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.get_importers(VertexFilter<V>).V";
6187 ParametrizedType <14223 14224 -14225> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.MethodImpl.get_importers|V>";
6188 Parameter <14225 -14226> {} "filter";
6189 Method <14227 -14228 14230> {PUBLIC} "add_parent";
6190 Parameter <14229 -14230> {} "vertex";
6191 Method <14234 -14235> {PUBLIC} "remove_parent";
6192 WildcardType <14231 -14233> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
6193 Method <14236 -14237 14239> {PUBLIC} "remove_parent";
6194 Parameter <14238 -14239> {} "vertex";
6195 Method <14240 -14241> {PUBLIC} "get_parent";
6196 Method <14242 -14243 14245> {PUBLIC} "add_type";
6197 Parameter <14244 -14245> {} "vertex";
6198 Method <14249 -14250> {PUBLIC} "remove_type";
6199 WildcardType <14246 -14248> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
6200 Method <14251 -14252 14254> {PUBLIC} "remove_type";
6201 Parameter <14253 -14254> {} "vertex";
6202 Method <14255 -14256> {PUBLIC} "get_type";
6203 Method <14259 -14260> {PUBLIC} "getHasTypeIncidences";
6204 Method <14263 -14264 14266> {PUBLIC} "getHasTypeIncidences";
6205 Parameter <14265 -14266> {} "direction";
6206 Method <14269 -14270> {PUBLIC} "getHasTypeParamIncidences";
6207 Method <14273 -14274 14276> {PUBLIC} "getHasTypeParamIncidences";
6208 Parameter <14275 -14276> {} "direction";
6209 Method <14279 -14280> {PUBLIC} "getDeclaresMethodIncidences";
6210 Method <14283 -14284 14286> {PUBLIC} "getDeclaresMethodIncidences";
6211 Parameter <14285 -14286> {} "direction";
6212 Method <14289 -14290> {PUBLIC} "getImportsIncidences";
6213 Method <14293 -14294 14296> {PUBLIC} "getImportsIncidences";
6214 Parameter <14295 -14296> {} "direction";
6215 Method <14299 -14300> {PUBLIC} "getHasParamIncidences";
6216 Method <14303 -14304 14306> {PUBLIC} "getHasParamIncidences";
6217 Parameter <14305 -14306> {} "direction";
6218 Method <14309 -14310> {PUBLIC} "getThrowsIncidences";
6219 Method <14313 -14314 14316> {PUBLIC} "getThrowsIncidences";
6220 Parameter <14315 -14316> {} "direction";
6221 Method <14319 -14320> {PUBLIC} "getDeclaresIncidences";
6222 Method <14323 -14324 14326> {PUBLIC} "getDeclaresIncidences";
6223 Parameter <14325 -14326> {} "direction";
6224 SourceFile <14329 14330 14331 14332 14333 14334 14335 14545> 315 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/PackageImpl.java";
6225 Class <14336 14337 14338 14339 14341 14343 14344 14350 14355 14358 14363 14369 14371 14375 14377 14381 14386 14393 14399 14405 14407 14409 14411 14413 14417 14419 14423 14425 14429 14436 14438 14446 14452 14458 14465 14467 14475 14481 14487 14494 14496 14504 14510 14518 14522 14528 14532 14538 14542 -14545 -14546> {PUBLIC} "PackageImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.PackageImpl";
6226 Field <14340 -14341> {PROTECTED} "_name";
6227 Field <14342 -14343> {PROTECTED} "_qualifiedName";
6228 Constructor <-14344 14346 14348> {PUBLIC} "PackageImpl";
6229 Parameter <14345 -14346> {} "id";
6230 Parameter <14347 -14348> {} "g";
6231 Method <14349 -14350> {PUBLIC FINAL} "getAttributedElementClass";
6232 Method <14354 -14355> {PUBLIC FINAL} "getSchemaClass";
6233 WildcardType <14351 -14353> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
6234 Method <14356 14357 -14358 14360> {PUBLIC} "getAttribute";
6235 TypeParameter <-14356 -14357> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.PackageImpl.getAttribute(String).T";
6236 Parameter <14359 -14360> {} "attributeName";
6237 Method <14361 14362 -14363 14365 14367> {PUBLIC} "setAttribute";
6238 TypeParameter <-14361 -14366> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.PackageImpl.setAttribute(String,T).T";
6239 Parameter <14364 -14365> {} "attributeName";
6240 Parameter <14366 -14367> {} "data";
6241 Method <14368 -14369> {PUBLIC} "get_name";
6242 Method <14370 -14371 14373> {PUBLIC} "set_name";
6243 Parameter <14372 -14373> {} "_name";
6244 Method <14374 -14375> {PUBLIC} "get_qualifiedName";
6245 Method <14376 -14377 14379> {PUBLIC} "set_qualifiedName";
6246 Parameter <14378 -14379> {} "_qualifiedName";
6247 Method <14380 -14381 14383 14384> {PUBLIC} "readAttributeValues";
6248 Parameter <14382 -14383> {} "io";
6249 Method <14385 -14386 14388 14390 14391> {PUBLIC} "readAttributeValueFromString";
6250 Parameter <14387 -14388> {} "attributeName";
6251 Parameter <14389 -14390> {} "value";
6252 Method <14392 -14393 14395 14396 14397> {PUBLIC} "writeAttributeValues";
6253 Parameter <14394 -14395> {} "io";
6254 Method <14398 -14399 14401 14402 14403> {PUBLIC} "writeAttributeValueToString";
6255 Parameter <14400 -14401> {} "attributeName";
6256 Method <14404 -14405> {PUBLIC} "getNextNamedElement";
6257 Method <14406 -14407> {PUBLIC} "getNextPackage";
6258 Method <14408 -14409> {PUBLIC} "getNextQualifiedNamedElement";
6259 Method <14410 -14411> {PUBLIC} "getFirstContainsPackageIncidence";
6260 Method <14412 -14413 14415> {PUBLIC} "getFirstContainsPackageIncidence";
6261 Parameter <14414 -14415> {} "orientation";
6262 Method <14416 -14417> {PUBLIC} "getFirstContainsClassifierIncidence";
6263 Method <14418 -14419 14421> {PUBLIC} "getFirstContainsClassifierIncidence";
6264 Parameter <14420 -14421> {} "orientation";
6265 Method <14422 -14423> {PUBLIC} "getFirstImportsIncidence";
6266 Method <14424 -14425 14427> {PUBLIC} "getFirstImportsIncidence";
6267 Parameter <14426 -14427> {} "orientation";
6268 Method <14428 -14429 14431> {PUBLIC} "add_importers";
6269 Parameter <14430 -14431> {} "vertex";
6270 Method <14435 -14436> {PUBLIC} "remove_importers";
6271 WildcardType <14432 -14434> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
6272 Method <14437 -14438 14440> {PUBLIC} "remove_importers";
6273 Parameter <14439 -14440> {} "vertex";
6274 Method <14442 14445 -14446> {PUBLIC} "get_importers";
6275 TypeParameter <14441 -14442 -14444> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.PackageImpl.get_importers().V";
6276 ParametrizedType <14443 14444 -14445 14449 14450 -14451> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.PackageImpl.get_importers|V>";
6277 Method <14448 14451 -14452 14456> {PUBLIC} "get_importers";
6278 TypeParameter <14447 -14448 -14450 -14454> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.PackageImpl.get_importers(VertexFilter<V>).V";
6279 ParametrizedType <14453 14454 -14455> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.PackageImpl.get_importers|V>";
6280 Parameter <14455 -14456> {} "filter";
6281 Method <14457 -14458 14460> {PUBLIC} "add_types";
6282 Parameter <14459 -14460> {} "vertex";
6283 Method <14464 -14465> {PUBLIC} "remove_types";
6284 WildcardType <14461 -14463> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
6285 Method <14466 -14467 14469> {PUBLIC} "remove_types";
6286 Parameter <14468 -14469> {} "vertex";
6287 Method <14471 14474 -14475> {PUBLIC} "get_types";
6288 TypeParameter <14470 -14471 -14473> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.PackageImpl.get_types().V";
6289 ParametrizedType <14472 14473 -14474 14478 14479 -14480> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.PackageImpl.get_types|V>";
6290 Method <14477 14480 -14481 14485> {PUBLIC} "get_types";
6291 TypeParameter <14476 -14477 -14479 -14483> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.PackageImpl.get_types(VertexFilter<V>).V";
6292 ParametrizedType <14482 14483 -14484> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.PackageImpl.get_types|V>";
6293 Parameter <14484 -14485> {} "filter";
6294 Method <14486 -14487 14489> {PUBLIC} "add_subPackages";
6295 Parameter <14488 -14489> {} "vertex";
6296 Method <14493 -14494> {PUBLIC} "remove_subPackages";
6297 WildcardType <14490 -14492> "? extends Package" "? extends de.uni_koblenz.jgralab.jex.schema.Package";
6298 Method <14495 -14496 14498> {PUBLIC} "remove_subPackages";
6299 Parameter <14497 -14498> {} "vertex";
6300 Method <14500 14503 -14504> {PUBLIC} "get_subPackages";
6301 TypeParameter <14499 -14500 -14502> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.PackageImpl.get_subPackages().V";
6302 ParametrizedType <14501 14502 -14503 14507 14508 -14509> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.PackageImpl.get_subPackages|V>";
6303 Method <14506 14509 -14510 14514> {PUBLIC} "get_subPackages";
6304 TypeParameter <14505 -14506 -14508 -14512> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.PackageImpl.get_subPackages(VertexFilter<V>).V";
6305 ParametrizedType <14511 14512 -14513> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.PackageImpl.get_subPackages|V>";
6306 Parameter <14513 -14514> {} "filter";
6307 Method <14517 -14518> {PUBLIC} "getContainsPackageIncidences";
6308 Method <14521 -14522 14524> {PUBLIC} "getContainsPackageIncidences";
6309 Parameter <14523 -14524> {} "direction";
6310 Method <14527 -14528> {PUBLIC} "getContainsClassifierIncidences";
6311 Method <14531 -14532 14534> {PUBLIC} "getContainsClassifierIncidences";
6312 Parameter <14533 -14534> {} "direction";
6313 Method <14537 -14538> {PUBLIC} "getImportsIncidences";
6314 Method <14541 -14542 14544> {PUBLIC} "getImportsIncidences";
6315 Parameter <14543 -14544> {} "direction";
6316 SourceFile <14547 14548 14549 14550 14551 14552 14553 14744> 381 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ParameterImpl.java";
6317 Class <14554 14555 14556 14557 14558 14562 14564 14565 14571 14576 14579 14584 14592 14594 14600 14602 14606 14611 14618 14624 14630 14632 14634 14636 14638 14640 14644 14646 14650 14652 14656 14663 14665 14669 14671 14678 14680 14688 14694 14700 14707 14709 14713 14717 14721 14727 14731 14737 14741 -14744 -14745> {PUBLIC} "ParameterImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParameterImpl";
6318 Field <14561 -14562> {PROTECTED} "_modifiers";
6319 Field <14563 -14564> {PROTECTED} "_name";
6320 Constructor <-14565 14567 14569> {PUBLIC} "ParameterImpl";
6321 Parameter <14566 -14567> {} "id";
6322 Parameter <14568 -14569> {} "g";
6323 Method <14570 -14571> {PUBLIC FINAL} "getAttributedElementClass";
6324 Method <14575 -14576> {PUBLIC FINAL} "getSchemaClass";
6325 WildcardType <14572 -14574> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
6326 Method <14577 14578 -14579 14581> {PUBLIC} "getAttribute";
6327 TypeParameter <-14577 -14578> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParameterImpl.getAttribute(String).T";
6328 Parameter <14580 -14581> {} "attributeName";
6329 Method <14582 14583 -14584 14586 14588> {PUBLIC} "setAttribute";
6330 TypeParameter <-14582 -14587> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParameterImpl.setAttribute(String,T).T";
6331 Parameter <14585 -14586> {} "attributeName";
6332 Parameter <14587 -14588> {} "data";
6333 Method <14591 -14592> {PUBLIC} "get_modifiers";
6334 Method <14593 -14594 14598> {PUBLIC} "set_modifiers";
6335 Parameter <14597 -14598> {} "_modifiers";
6336 Method <14599 -14600> {PUBLIC} "get_name";
6337 Method <14601 -14602 14604> {PUBLIC} "set_name";
6338 Parameter <14603 -14604> {} "_name";
6339 Method <14605 -14606 14608 14609> {PUBLIC} "readAttributeValues";
6340 Parameter <14607 -14608> {} "io";
6341 Method <14610 -14611 14613 14615 14616> {PUBLIC} "readAttributeValueFromString";
6342 Parameter <14612 -14613> {} "attributeName";
6343 Parameter <14614 -14615> {} "value";
6344 Method <14617 -14618 14620 14621 14622> {PUBLIC} "writeAttributeValues";
6345 Parameter <14619 -14620> {} "io";
6346 Method <14623 -14624 14626 14627 14628> {PUBLIC} "writeAttributeValueToString";
6347 Parameter <14625 -14626> {} "attributeName";
6348 Method <14629 -14630> {PUBLIC} "getNextModifiableElement";
6349 Method <14631 -14632> {PUBLIC} "getNextNamedElement";
6350 Method <14633 -14634> {PUBLIC} "getNextParameter";
6351 Method <14635 -14636> {PUBLIC} "getNextTypedElement";
6352 Method <14637 -14638> {PUBLIC} "getFirstHasTypeIncidence";
6353 Method <14639 -14640 14642> {PUBLIC} "getFirstHasTypeIncidence";
6354 Parameter <14641 -14642> {} "orientation";
6355 Method <14643 -14644> {PUBLIC} "getFirstImportsIncidence";
6356 Method <14645 -14646 14648> {PUBLIC} "getFirstImportsIncidence";
6357 Parameter <14647 -14648> {} "orientation";
6358 Method <14649 -14650> {PUBLIC} "getFirstHasParamIncidence";
6359 Method <14651 -14652 14654> {PUBLIC} "getFirstHasParamIncidence";
6360 Parameter <14653 -14654> {} "orientation";
6361 Method <14655 -14656 14658> {PUBLIC} "add_method";
6362 Parameter <14657 -14658> {} "vertex";
6363 Method <14662 -14663> {PUBLIC} "remove_method";
6364 WildcardType <14659 -14661> "? extends MethodLike" "? extends de.uni_koblenz.jgralab.jex.schema.MethodLike";
6365 Method <14664 -14665 14667> {PUBLIC} "remove_method";
6366 Parameter <14666 -14667> {} "vertex";
6367 Method <14668 -14669> {PUBLIC} "get_method";
6368 Method <14670 -14671 14673> {PUBLIC} "add_importers";
6369 Parameter <14672 -14673> {} "vertex";
6370 Method <14677 -14678> {PUBLIC} "remove_importers";
6371 WildcardType <14674 -14676> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
6372 Method <14679 -14680 14682> {PUBLIC} "remove_importers";
6373 Parameter <14681 -14682> {} "vertex";
6374 Method <14684 14687 -14688> {PUBLIC} "get_importers";
6375 TypeParameter <14683 -14684 -14686> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParameterImpl.get_importers().V";
6376 ParametrizedType <14685 14686 -14687 14691 14692 -14693> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ParameterImpl.get_importers|V>";
6377 Method <14690 14693 -14694 14698> {PUBLIC} "get_importers";
6378 TypeParameter <14689 -14690 -14692 -14696> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParameterImpl.get_importers(VertexFilter<V>).V";
6379 ParametrizedType <14695 14696 -14697> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ParameterImpl.get_importers|V>";
6380 Parameter <14697 -14698> {} "filter";
6381 Method <14699 -14700 14702> {PUBLIC} "add_type";
6382 Parameter <14701 -14702> {} "vertex";
6383 Method <14706 -14707> {PUBLIC} "remove_type";
6384 WildcardType <14703 -14705> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
6385 Method <14708 -14709 14711> {PUBLIC} "remove_type";
6386 Parameter <14710 -14711> {} "vertex";
6387 Method <14712 -14713> {PUBLIC} "get_type";
6388 Method <14716 -14717> {PUBLIC} "getHasTypeIncidences";
6389 Method <14720 -14721 14723> {PUBLIC} "getHasTypeIncidences";
6390 Parameter <14722 -14723> {} "direction";
6391 Method <14726 -14727> {PUBLIC} "getImportsIncidences";
6392 Method <14730 -14731 14733> {PUBLIC} "getImportsIncidences";
6393 Parameter <14732 -14733> {} "direction";
6394 Method <14736 -14737> {PUBLIC} "getHasParamIncidences";
6395 Method <14740 -14741 14743> {PUBLIC} "getHasParamIncidences";
6396 Parameter <14742 -14743> {} "direction";
6397 SourceFile <14746 14747 14748 14749 14750 14751 14752 15519> 1171 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ParametrizedTypeImpl.java";
6398 Class <14753 14754 14755 14756 14760 14762 14764 14765 14771 14776 14779 14784 14792 14794 14800 14802 14806 14808 14812 14817 14824 14830 14836 14838 14840 14842 14844 14846 14848 14850 14852 14854 14858 14860 14864 14866 14870 14872 14876 14878 14882 14884 14888 14890 14894 14896 14900 14902 14906 14908 14912 14914 14918 14920 14924 14926 14930 14932 14936 14938 14942 14944 14948 14950 14954 14956 14960 14962 14966 14973 14975 14983 14989 14995 15002 15004 15012 15018 15024 15031 15033 15041 15047 15053 15060 15062 15066 15068 15075 15077 15085 15091 15097 15104 15106 15114 15120 15126 15133 15135 15143 15149 15155 15162 15164 15172 15178 15184 15191 15193 15201 15207 15213 15220 15222 15226 15228 15235 15237 15245 15251 15257 15264 15266 15274 15280 15286 15293 15295 15299 15301 15308 15310 15318 15324 15332 15336 15342 15346 15352 15356 15362 15366 15372 15376 15382 15386 15392 15396 15402 15406 15412 15416 15422 15426 15432 15436 15442 15446 15452 15456 15462 15466 15472 15476 15482 15486 15492 15496 15502 15506 15512 15516 -15519 -15520> {PUBLIC} "ParametrizedTypeImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl";
6399 Field <14759 -14760> {PROTECTED} "_modifiers";
6400 Field <14761 -14762> {PROTECTED} "_name";
6401 Field <14763 -14764> {PROTECTED} "_qualifiedName";
6402 Constructor <-14765 14767 14769> {PUBLIC} "ParametrizedTypeImpl";
6403 Parameter <14766 -14767> {} "id";
6404 Parameter <14768 -14769> {} "g";
6405 Method <14770 -14771> {PUBLIC FINAL} "getAttributedElementClass";
6406 Method <14775 -14776> {PUBLIC FINAL} "getSchemaClass";
6407 WildcardType <14772 -14774> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
6408 Method <14777 14778 -14779 14781> {PUBLIC} "getAttribute";
6409 TypeParameter <-14777 -14778> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.getAttribute(String).T";
6410 Parameter <14780 -14781> {} "attributeName";
6411 Method <14782 14783 -14784 14786 14788> {PUBLIC} "setAttribute";
6412 TypeParameter <-14782 -14787> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.setAttribute(String,T).T";
6413 Parameter <14785 -14786> {} "attributeName";
6414 Parameter <14787 -14788> {} "data";
6415 Method <14791 -14792> {PUBLIC} "get_modifiers";
6416 Method <14793 -14794 14798> {PUBLIC} "set_modifiers";
6417 Parameter <14797 -14798> {} "_modifiers";
6418 Method <14799 -14800> {PUBLIC} "get_name";
6419 Method <14801 -14802 14804> {PUBLIC} "set_name";
6420 Parameter <14803 -14804> {} "_name";
6421 Method <14805 -14806> {PUBLIC} "get_qualifiedName";
6422 Method <14807 -14808 14810> {PUBLIC} "set_qualifiedName";
6423 Parameter <14809 -14810> {} "_qualifiedName";
6424 Method <14811 -14812 14814 14815> {PUBLIC} "readAttributeValues";
6425 Parameter <14813 -14814> {} "io";
6426 Method <14816 -14817 14819 14821 14822> {PUBLIC} "readAttributeValueFromString";
6427 Parameter <14818 -14819> {} "attributeName";
6428 Parameter <14820 -14821> {} "value";
6429 Method <14823 -14824 14826 14827 14828> {PUBLIC} "writeAttributeValues";
6430 Parameter <14825 -14826> {} "io";
6431 Method <14829 -14830 14832 14833 14834> {PUBLIC} "writeAttributeValueToString";
6432 Parameter <14831 -14832> {} "attributeName";
6433 Method <14835 -14836> {PUBLIC} "getNextAbstractClassifier";
6434 Method <14837 -14838> {PUBLIC} "getNextMember";
6435 Method <14839 -14840> {PUBLIC} "getNextModifiableElement";
6436 Method <14841 -14842> {PUBLIC} "getNextNamedElement";
6437 Method <14843 -14844> {PUBLIC} "getNextParametrizedType";
6438 Method <14845 -14846> {PUBLIC} "getNextQualifiedNamedElement";
6439 Method <14847 -14848> {PUBLIC} "getNextType";
6440 Method <14849 -14850> {PUBLIC} "getNextTypeParametrizable";
6441 Method <14851 -14852> {PUBLIC} "getFirstDefinesIncidence";
6442 Method <14853 -14854 14856> {PUBLIC} "getFirstDefinesIncidence";
6443 Parameter <14855 -14856> {} "orientation";
6444 Method <14857 -14858> {PUBLIC} "getFirstHasUpperBoundIncidence";
6445 Method <14859 -14860 14862> {PUBLIC} "getFirstHasUpperBoundIncidence";
6446 Parameter <14861 -14862> {} "orientation";
6447 Method <14863 -14864> {PUBLIC} "getFirstContainsClassifierIncidence";
6448 Method <14865 -14866 14868> {PUBLIC} "getFirstContainsClassifierIncidence";
6449 Parameter <14867 -14868> {} "orientation";
6450 Method <14869 -14870> {PUBLIC} "getFirstHasTypeArgIncidence";
6451 Method <14871 -14872 14874> {PUBLIC} "getFirstHasTypeArgIncidence";
6452 Parameter <14873 -14874> {} "orientation";
6453 Method <14875 -14876> {PUBLIC} "getFirstDeclaresMethodIncidence";
6454 Method <14877 -14878 14880> {PUBLIC} "getFirstDeclaresMethodIncidence";
6455 Parameter <14879 -14880> {} "orientation";
6456 Method <14881 -14882> {PUBLIC} "getFirstHasElementTypeIncidence";
6457 Method <14883 -14884 14886> {PUBLIC} "getFirstHasElementTypeIncidence";
6458 Parameter <14885 -14886> {} "orientation";
6459 Method <14887 -14888> {PUBLIC} "getFirstThrowsIncidence";
6460 Method <14889 -14890 14892> {PUBLIC} "getFirstThrowsIncidence";
6461 Parameter <14891 -14892> {} "orientation";
6462 Method <14893 -14894> {PUBLIC} "getFirstImportsIncidence";
6463 Method <14895 -14896 14898> {PUBLIC} "getFirstImportsIncidence";
6464 Parameter <14897 -14898> {} "orientation";
6465 Method <14899 -14900> {PUBLIC} "getFirstHasBoundIncidence";
6466 Method <14901 -14902 14904> {PUBLIC} "getFirstHasBoundIncidence";
6467 Parameter <14903 -14904> {} "orientation";
6468 Method <14905 -14906> {PUBLIC} "getFirstHasLowerBoundIncidence";
6469 Method <14907 -14908 14910> {PUBLIC} "getFirstHasLowerBoundIncidence";
6470 Parameter <14909 -14910> {} "orientation";
6471 Method <14911 -14912> {PUBLIC} "getFirstDeclaresIncidence";
6472 Method <14913 -14914 14916> {PUBLIC} "getFirstDeclaresIncidence";
6473 Parameter <14915 -14916> {} "orientation";
6474 Method <14917 -14918> {PUBLIC} "getFirstDeclaresConstructorIncidence";
6475 Method <14919 -14920 14922> {PUBLIC} "getFirstDeclaresConstructorIncidence";
6476 Parameter <14921 -14922> {} "orientation";
6477 Method <14923 -14924> {PUBLIC} "getFirstExtendsIncidence";
6478 Method <14925 -14926 14928> {PUBLIC} "getFirstExtendsIncidence";
6479 Parameter <14927 -14928> {} "orientation";
6480 Method <14929 -14930> {PUBLIC} "getFirstHasGenericTypeIncidence";
6481 Method <14931 -14932 14934> {PUBLIC} "getFirstHasGenericTypeIncidence";
6482 Parameter <14933 -14934> {} "orientation";
6483 Method <14935 -14936> {PUBLIC} "getFirstImplementsIncidence";
6484 Method <14937 -14938 14940> {PUBLIC} "getFirstImplementsIncidence";
6485 Parameter <14939 -14940> {} "orientation";
6486 Method <14941 -14942> {PUBLIC} "getFirstHasTypeIncidence";
6487 Method <14943 -14944 14946> {PUBLIC} "getFirstHasTypeIncidence";
6488 Parameter <14945 -14946> {} "orientation";
6489 Method <14947 -14948> {PUBLIC} "getFirstDeclaresNestedClassifierIncidence";
6490 Method <14949 -14950 14952> {PUBLIC} "getFirstDeclaresNestedClassifierIncidence";
6491 Parameter <14951 -14952> {} "orientation";
6492 Method <14953 -14954> {PUBLIC} "getFirstHasTypeParamIncidence";
6493 Method <14955 -14956 14958> {PUBLIC} "getFirstHasTypeParamIncidence";
6494 Parameter <14957 -14958> {} "orientation";
6495 Method <14959 -14960> {PUBLIC} "getFirstDeclaresFieldIncidence";
6496 Method <14961 -14962 14964> {PUBLIC} "getFirstDeclaresFieldIncidence";
6497 Parameter <14963 -14964> {} "orientation";
6498 Method <14965 -14966 14968> {PUBLIC} "add_constructors";
6499 Parameter <14967 -14968> {} "vertex";
6500 Method <14972 -14973> {PUBLIC} "remove_constructors";
6501 WildcardType <14969 -14971> "? extends Constructor" "? extends de.uni_koblenz.jgralab.jex.schema.Constructor";
6502 Method <14974 -14975 14977> {PUBLIC} "remove_constructors";
6503 Parameter <14976 -14977> {} "vertex";
6504 Method <14979 14982 -14983> {PUBLIC} "get_constructors";
6505 TypeParameter <14978 -14979 -14981> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_constructors().V";
6506 ParametrizedType <14980 14981 -14982 14986 14987 -14988> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_constructors|V>";
6507 Method <14985 14988 -14989 14993> {PUBLIC} "get_constructors";
6508 TypeParameter <14984 -14985 -14987 -14991> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_constructors(VertexFilter<V>).V";
6509 ParametrizedType <14990 14991 -14992> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_constructors|V>";
6510 Parameter <14992 -14993> {} "filter";
6511 Method <14994 -14995 14997> {PUBLIC} "add_importers";
6512 Parameter <14996 -14997> {} "vertex";
6513 Method <15001 -15002> {PUBLIC} "remove_importers";
6514 WildcardType <14998 -15000> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
6515 Method <15003 -15004 15006> {PUBLIC} "remove_importers";
6516 Parameter <15005 -15006> {} "vertex";
6517 Method <15008 15011 -15012> {PUBLIC} "get_importers";
6518 TypeParameter <15007 -15008 -15010> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_importers().V";
6519 ParametrizedType <15009 15010 -15011 15015 15016 -15017> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_importers|V>";
6520 Method <15014 15017 -15018 15022> {PUBLIC} "get_importers";
6521 TypeParameter <15013 -15014 -15016 -15020> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_importers(VertexFilter<V>).V";
6522 ParametrizedType <15019 15020 -15021> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_importers|V>";
6523 Parameter <15021 -15022> {} "filter";
6524 Method <15023 -15024 15026> {PUBLIC} "add_fields";
6525 Parameter <15025 -15026> {} "vertex";
6526 Method <15030 -15031> {PUBLIC} "remove_fields";
6527 WildcardType <15027 -15029> "? extends Field" "? extends de.uni_koblenz.jgralab.jex.schema.Field";
6528 Method <15032 -15033 15035> {PUBLIC} "remove_fields";
6529 Parameter <15034 -15035> {} "vertex";
6530 Method <15037 15040 -15041> {PUBLIC} "get_fields";
6531 TypeParameter <15036 -15037 -15039> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_fields().V";
6532 ParametrizedType <15038 15039 -15040 15044 15045 -15046> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_fields|V>";
6533 Method <15043 15046 -15047 15051> {PUBLIC} "get_fields";
6534 TypeParameter <15042 -15043 -15045 -15049> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_fields(VertexFilter<V>).V";
6535 ParametrizedType <15048 15049 -15050> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_fields|V>";
6536 Parameter <15050 -15051> {} "filter";
6537 Method <15052 -15053 15055> {PUBLIC} "add_sourceFile";
6538 Parameter <15054 -15055> {} "vertex";
6539 Method <15059 -15060> {PUBLIC} "remove_sourceFile";
6540 WildcardType <15056 -15058> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
6541 Method <15061 -15062 15064> {PUBLIC} "remove_sourceFile";
6542 Parameter <15063 -15064> {} "vertex";
6543 Method <15065 -15066> {PUBLIC} "get_sourceFile";
6544 Method <15067 -15068 15070> {PUBLIC} "add_members";
6545 Parameter <15069 -15070> {} "vertex";
6546 Method <15074 -15075> {PUBLIC} "remove_members";
6547 WildcardType <15071 -15073> "? extends Member" "? extends de.uni_koblenz.jgralab.jex.schema.Member";
6548 Method <15076 -15077 15079> {PUBLIC} "remove_members";
6549 Parameter <15078 -15079> {} "vertex";
6550 Method <15081 15084 -15085> {PUBLIC} "get_members";
6551 TypeParameter <15080 -15081 -15083> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_members().V";
6552 ParametrizedType <15082 15083 -15084 15088 15089 -15090> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_members|V>";
6553 Method <15087 15090 -15091 15095> {PUBLIC} "get_members";
6554 TypeParameter <15086 -15087 -15089 -15093> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_members(VertexFilter<V>).V";
6555 ParametrizedType <15092 15093 -15094> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_members|V>";
6556 Parameter <15094 -15095> {} "filter";
6557 Method <15096 -15097 15099> {PUBLIC} "add_nestedClassifiers";
6558 Parameter <15098 -15099> {} "vertex";
6559 Method <15103 -15104> {PUBLIC} "remove_nestedClassifiers";
6560 WildcardType <15100 -15102> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
6561 Method <15105 -15106 15108> {PUBLIC} "remove_nestedClassifiers";
6562 Parameter <15107 -15108> {} "vertex";
6563 Method <15110 15113 -15114> {PUBLIC} "get_nestedClassifiers";
6564 TypeParameter <15109 -15110 -15112> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_nestedClassifiers().V";
6565 ParametrizedType <15111 15112 -15113 15117 15118 -15119> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_nestedClassifiers|V>";
6566 Method <15116 15119 -15120 15124> {PUBLIC} "get_nestedClassifiers";
6567 TypeParameter <15115 -15116 -15118 -15122> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_nestedClassifiers(VertexFilter<V>).V";
6568 ParametrizedType <15121 15122 -15123> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_nestedClassifiers|V>";
6569 Parameter <15123 -15124> {} "filter";
6570 Method <15125 -15126 15128> {PUBLIC} "add_subclasses";
6571 Parameter <15127 -15128> {} "vertex";
6572 Method <15132 -15133> {PUBLIC} "remove_subclasses";
6573 WildcardType <15129 -15131> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
6574 Method <15134 -15135 15137> {PUBLIC} "remove_subclasses";
6575 Parameter <15136 -15137> {} "vertex";
6576 Method <15139 15142 -15143> {PUBLIC} "get_subclasses";
6577 TypeParameter <15138 -15139 -15141> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_subclasses().V";
6578 ParametrizedType <15140 15141 -15142 15146 15147 -15148> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_subclasses|V>";
6579 Method <15145 15148 -15149 15153> {PUBLIC} "get_subclasses";
6580 TypeParameter <15144 -15145 -15147 -15151> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_subclasses(VertexFilter<V>).V";
6581 ParametrizedType <15150 15151 -15152> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_subclasses|V>";
6582 Parameter <15152 -15153> {} "filter";
6583 Method <15154 -15155 15157> {PUBLIC} "add_typeParams";
6584 Parameter <15156 -15157> {} "vertex";
6585 Method <15161 -15162> {PUBLIC} "remove_typeParams";
6586 WildcardType <15158 -15160> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
6587 Method <15163 -15164 15166> {PUBLIC} "remove_typeParams";
6588 Parameter <15165 -15166> {} "vertex";
6589 Method <15168 15171 -15172> {PUBLIC} "get_typeParams";
6590 TypeParameter <15167 -15168 -15170> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_typeParams().V";
6591 ParametrizedType <15169 15170 -15171 15175 15176 -15177> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_typeParams|V>";
6592 Method <15174 15177 -15178 15182> {PUBLIC} "get_typeParams";
6593 TypeParameter <15173 -15174 -15176 -15180> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_typeParams(VertexFilter<V>).V";
6594 ParametrizedType <15179 15180 -15181> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_typeParams|V>";
6595 Parameter <15181 -15182> {} "filter";
6596 Method <15183 -15184 15186> {PUBLIC} "add_implementors";
6597 Parameter <15185 -15186> {} "vertex";
6598 Method <15190 -15191> {PUBLIC} "remove_implementors";
6599 WildcardType <15187 -15189> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
6600 Method <15192 -15193 15195> {PUBLIC} "remove_implementors";
6601 Parameter <15194 -15195> {} "vertex";
6602 Method <15197 15200 -15201> {PUBLIC} "get_implementors";
6603 TypeParameter <15196 -15197 -15199> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_implementors().V";
6604 ParametrizedType <15198 15199 -15200 15204 15205 -15206> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_implementors|V>";
6605 Method <15203 15206 -15207 15211> {PUBLIC} "get_implementors";
6606 TypeParameter <15202 -15203 -15205 -15209> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_implementors(VertexFilter<V>).V";
6607 ParametrizedType <15208 15209 -15210> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_implementors|V>";
6608 Parameter <15210 -15211> {} "filter";
6609 Method <15212 -15213 15215> {PUBLIC} "add_genericType";
6610 Parameter <15214 -15215> {} "vertex";
6611 Method <15219 -15220> {PUBLIC} "remove_genericType";
6612 WildcardType <15216 -15218> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
6613 Method <15221 -15222 15224> {PUBLIC} "remove_genericType";
6614 Parameter <15223 -15224> {} "vertex";
6615 Method <15225 -15226> {PUBLIC} "get_genericType";
6616 Method <15227 -15228 15230> {PUBLIC} "add_typeArgs";
6617 Parameter <15229 -15230> {} "vertex";
6618 Method <15234 -15235> {PUBLIC} "remove_typeArgs";
6619 WildcardType <15231 -15233> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
6620 Method <15236 -15237 15239> {PUBLIC} "remove_typeArgs";
6621 Parameter <15238 -15239> {} "vertex";
6622 Method <15241 15244 -15245> {PUBLIC} "get_typeArgs";
6623 TypeParameter <15240 -15241 -15243> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_typeArgs().V";
6624 ParametrizedType <15242 15243 -15244 15248 15249 -15250> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_typeArgs|V>";
6625 Method <15247 15250 -15251 15255> {PUBLIC} "get_typeArgs";
6626 TypeParameter <15246 -15247 -15249 -15253> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_typeArgs(VertexFilter<V>).V";
6627 ParametrizedType <15252 15253 -15254> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_typeArgs|V>";
6628 Parameter <15254 -15255> {} "filter";
6629 Method <15256 -15257 15259> {PUBLIC} "add_methods";
6630 Parameter <15258 -15259> {} "vertex";
6631 Method <15263 -15264> {PUBLIC} "remove_methods";
6632 WildcardType <15260 -15262> "? extends Method" "? extends de.uni_koblenz.jgralab.jex.schema.Method";
6633 Method <15265 -15266 15268> {PUBLIC} "remove_methods";
6634 Parameter <15267 -15268> {} "vertex";
6635 Method <15270 15273 -15274> {PUBLIC} "get_methods";
6636 TypeParameter <15269 -15270 -15272> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_methods().V";
6637 ParametrizedType <15271 15272 -15273 15277 15278 -15279> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_methods|V>";
6638 Method <15276 15279 -15280 15284> {PUBLIC} "get_methods";
6639 TypeParameter <15275 -15276 -15278 -15282> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_methods(VertexFilter<V>).V";
6640 ParametrizedType <15281 15282 -15283> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_methods|V>";
6641 Parameter <15283 -15284> {} "filter";
6642 Method <15285 -15286 15288> {PUBLIC} "add_parent";
6643 Parameter <15287 -15288> {} "vertex";
6644 Method <15292 -15293> {PUBLIC} "remove_parent";
6645 WildcardType <15289 -15291> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
6646 Method <15294 -15295 15297> {PUBLIC} "remove_parent";
6647 Parameter <15296 -15297> {} "vertex";
6648 Method <15298 -15299> {PUBLIC} "get_parent";
6649 Method <15300 -15301 15303> {PUBLIC} "add_arrayType";
6650 Parameter <15302 -15303> {} "vertex";
6651 Method <15307 -15308> {PUBLIC} "remove_arrayType";
6652 WildcardType <15304 -15306> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
6653 Method <15309 -15310 15312> {PUBLIC} "remove_arrayType";
6654 Parameter <15311 -15312> {} "vertex";
6655 Method <15314 15317 -15318> {PUBLIC} "get_arrayType";
6656 TypeParameter <15313 -15314 -15316> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_arrayType().V";
6657 ParametrizedType <15315 15316 -15317 15321 15322 -15323> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_arrayType|V>";
6658 Method <15320 15323 -15324 15328> {PUBLIC} "get_arrayType";
6659 TypeParameter <15319 -15320 -15322 -15326> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_arrayType(VertexFilter<V>).V";
6660 ParametrizedType <15325 15326 -15327> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.ParametrizedTypeImpl.get_arrayType|V>";
6661 Parameter <15327 -15328> {} "filter";
6662 Method <15331 -15332> {PUBLIC} "getDefinesIncidences";
6663 Method <15335 -15336 15338> {PUBLIC} "getDefinesIncidences";
6664 Parameter <15337 -15338> {} "direction";
6665 Method <15341 -15342> {PUBLIC} "getHasUpperBoundIncidences";
6666 Method <15345 -15346 15348> {PUBLIC} "getHasUpperBoundIncidences";
6667 Parameter <15347 -15348> {} "direction";
6668 Method <15351 -15352> {PUBLIC} "getContainsClassifierIncidences";
6669 Method <15355 -15356 15358> {PUBLIC} "getContainsClassifierIncidences";
6670 Parameter <15357 -15358> {} "direction";
6671 Method <15361 -15362> {PUBLIC} "getHasTypeArgIncidences";
6672 Method <15365 -15366 15368> {PUBLIC} "getHasTypeArgIncidences";
6673 Parameter <15367 -15368> {} "direction";
6674 Method <15371 -15372> {PUBLIC} "getDeclaresMethodIncidences";
6675 Method <15375 -15376 15378> {PUBLIC} "getDeclaresMethodIncidences";
6676 Parameter <15377 -15378> {} "direction";
6677 Method <15381 -15382> {PUBLIC} "getHasElementTypeIncidences";
6678 Method <15385 -15386 15388> {PUBLIC} "getHasElementTypeIncidences";
6679 Parameter <15387 -15388> {} "direction";
6680 Method <15391 -15392> {PUBLIC} "getThrowsIncidences";
6681 Method <15395 -15396 15398> {PUBLIC} "getThrowsIncidences";
6682 Parameter <15397 -15398> {} "direction";
6683 Method <15401 -15402> {PUBLIC} "getImportsIncidences";
6684 Method <15405 -15406 15408> {PUBLIC} "getImportsIncidences";
6685 Parameter <15407 -15408> {} "direction";
6686 Method <15411 -15412> {PUBLIC} "getHasBoundIncidences";
6687 Method <15415 -15416 15418> {PUBLIC} "getHasBoundIncidences";
6688 Parameter <15417 -15418> {} "direction";
6689 Method <15421 -15422> {PUBLIC} "getHasLowerBoundIncidences";
6690 Method <15425 -15426 15428> {PUBLIC} "getHasLowerBoundIncidences";
6691 Parameter <15427 -15428> {} "direction";
6692 Method <15431 -15432> {PUBLIC} "getDeclaresIncidences";
6693 Method <15435 -15436 15438> {PUBLIC} "getDeclaresIncidences";
6694 Parameter <15437 -15438> {} "direction";
6695 Method <15441 -15442> {PUBLIC} "getDeclaresConstructorIncidences";
6696 Method <15445 -15446 15448> {PUBLIC} "getDeclaresConstructorIncidences";
6697 Parameter <15447 -15448> {} "direction";
6698 Method <15451 -15452> {PUBLIC} "getExtendsIncidences";
6699 Method <15455 -15456 15458> {PUBLIC} "getExtendsIncidences";
6700 Parameter <15457 -15458> {} "direction";
6701 Method <15461 -15462> {PUBLIC} "getHasGenericTypeIncidences";
6702 Method <15465 -15466 15468> {PUBLIC} "getHasGenericTypeIncidences";
6703 Parameter <15467 -15468> {} "direction";
6704 Method <15471 -15472> {PUBLIC} "getImplementsIncidences";
6705 Method <15475 -15476 15478> {PUBLIC} "getImplementsIncidences";
6706 Parameter <15477 -15478> {} "direction";
6707 Method <15481 -15482> {PUBLIC} "getHasTypeIncidences";
6708 Method <15485 -15486 15488> {PUBLIC} "getHasTypeIncidences";
6709 Parameter <15487 -15488> {} "direction";
6710 Method <15491 -15492> {PUBLIC} "getDeclaresNestedClassifierIncidences";
6711 Method <15495 -15496 15498> {PUBLIC} "getDeclaresNestedClassifierIncidences";
6712 Parameter <15497 -15498> {} "direction";
6713 Method <15501 -15502> {PUBLIC} "getHasTypeParamIncidences";
6714 Method <15505 -15506 15508> {PUBLIC} "getHasTypeParamIncidences";
6715 Parameter <15507 -15508> {} "direction";
6716 Method <15511 -15512> {PUBLIC} "getDeclaresFieldIncidences";
6717 Method <15515 -15516 15518> {PUBLIC} "getDeclaresFieldIncidences";
6718 Parameter <15517 -15518> {} "direction";
6719 SourceFile <15521 15522 15523 15524 15525 15526 15527 15798> 427 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/PrimitiveTypeImpl.java";
6720 Class <15528 15529 15530 15531 15533 15535 15537 15538 15544 15549 15552 15557 15563 15565 15569 15571 15575 15577 15581 15586 15593 15599 15605 15607 15609 15611 15613 15615 15619 15621 15625 15627 15631 15633 15637 15639 15643 15645 15649 15651 15655 15657 15661 15668 15670 15678 15684 15690 15697 15699 15707 15713 15721 15725 15731 15735 15741 15745 15751 15755 15761 15765 15771 15775 15781 15785 15791 15795 -15798 -15799> {PUBLIC} "PrimitiveTypeImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.PrimitiveTypeImpl";
6721 Field <15532 -15533> {PROTECTED} "_name";
6722 Field <15534 -15535> {PROTECTED} "_qualifiedName";
6723 Field <15536 -15537> {PROTECTED} "_type";
6724 Constructor <-15538 15540 15542> {PUBLIC} "PrimitiveTypeImpl";
6725 Parameter <15539 -15540> {} "id";
6726 Parameter <15541 -15542> {} "g";
6727 Method <15543 -15544> {PUBLIC FINAL} "getAttributedElementClass";
6728 Method <15548 -15549> {PUBLIC FINAL} "getSchemaClass";
6729 WildcardType <15545 -15547> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
6730 Method <15550 15551 -15552 15554> {PUBLIC} "getAttribute";
6731 TypeParameter <-15550 -15551> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.PrimitiveTypeImpl.getAttribute(String).T";
6732 Parameter <15553 -15554> {} "attributeName";
6733 Method <15555 15556 -15557 15559 15561> {PUBLIC} "setAttribute";
6734 TypeParameter <-15555 -15560> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.PrimitiveTypeImpl.setAttribute(String,T).T";
6735 Parameter <15558 -15559> {} "attributeName";
6736 Parameter <15560 -15561> {} "data";
6737 Method <15562 -15563> {PUBLIC} "get_name";
6738 Method <15564 -15565 15567> {PUBLIC} "set_name";
6739 Parameter <15566 -15567> {} "_name";
6740 Method <15568 -15569> {PUBLIC} "get_qualifiedName";
6741 Method <15570 -15571 15573> {PUBLIC} "set_qualifiedName";
6742 Parameter <15572 -15573> {} "_qualifiedName";
6743 Method <15574 -15575> {PUBLIC} "get_type";
6744 Method <15576 -15577 15579> {PUBLIC} "set_type";
6745 Parameter <15578 -15579> {} "_type";
6746 Method <15580 -15581 15583 15584> {PUBLIC} "readAttributeValues";
6747 Parameter <15582 -15583> {} "io";
6748 Method <15585 -15586 15588 15590 15591> {PUBLIC} "readAttributeValueFromString";
6749 Parameter <15587 -15588> {} "attributeName";
6750 Parameter <15589 -15590> {} "value";
6751 Method <15592 -15593 15595 15596 15597> {PUBLIC} "writeAttributeValues";
6752 Parameter <15594 -15595> {} "io";
6753 Method <15598 -15599 15601 15602 15603> {PUBLIC} "writeAttributeValueToString";
6754 Parameter <15600 -15601> {} "attributeName";
6755 Method <15604 -15605> {PUBLIC} "getNextNamedElement";
6756 Method <15606 -15607> {PUBLIC} "getNextPrimitiveType";
6757 Method <15608 -15609> {PUBLIC} "getNextQualifiedNamedElement";
6758 Method <15610 -15611> {PUBLIC} "getNextType";
6759 Method <15612 -15613> {PUBLIC} "getFirstHasUpperBoundIncidence";
6760 Method <15614 -15615 15617> {PUBLIC} "getFirstHasUpperBoundIncidence";
6761 Parameter <15616 -15617> {} "orientation";
6762 Method <15618 -15619> {PUBLIC} "getFirstHasTypeIncidence";
6763 Method <15620 -15621 15623> {PUBLIC} "getFirstHasTypeIncidence";
6764 Parameter <15622 -15623> {} "orientation";
6765 Method <15624 -15625> {PUBLIC} "getFirstHasTypeArgIncidence";
6766 Method <15626 -15627 15629> {PUBLIC} "getFirstHasTypeArgIncidence";
6767 Parameter <15628 -15629> {} "orientation";
6768 Method <15630 -15631> {PUBLIC} "getFirstThrowsIncidence";
6769 Method <15632 -15633 15635> {PUBLIC} "getFirstThrowsIncidence";
6770 Parameter <15634 -15635> {} "orientation";
6771 Method <15636 -15637> {PUBLIC} "getFirstImportsIncidence";
6772 Method <15638 -15639 15641> {PUBLIC} "getFirstImportsIncidence";
6773 Parameter <15640 -15641> {} "orientation";
6774 Method <15642 -15643> {PUBLIC} "getFirstHasElementTypeIncidence";
6775 Method <15644 -15645 15647> {PUBLIC} "getFirstHasElementTypeIncidence";
6776 Parameter <15646 -15647> {} "orientation";
6777 Method <15648 -15649> {PUBLIC} "getFirstHasBoundIncidence";
6778 Method <15650 -15651 15653> {PUBLIC} "getFirstHasBoundIncidence";
6779 Parameter <15652 -15653> {} "orientation";
6780 Method <15654 -15655> {PUBLIC} "getFirstHasLowerBoundIncidence";
6781 Method <15656 -15657 15659> {PUBLIC} "getFirstHasLowerBoundIncidence";
6782 Parameter <15658 -15659> {} "orientation";
6783 Method <15660 -15661 15663> {PUBLIC} "add_importers";
6784 Parameter <15662 -15663> {} "vertex";
6785 Method <15667 -15668> {PUBLIC} "remove_importers";
6786 WildcardType <15664 -15666> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
6787 Method <15669 -15670 15672> {PUBLIC} "remove_importers";
6788 Parameter <15671 -15672> {} "vertex";
6789 Method <15674 15677 -15678> {PUBLIC} "get_importers";
6790 TypeParameter <15673 -15674 -15676> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.PrimitiveTypeImpl.get_importers().V";
6791 ParametrizedType <15675 15676 -15677 15681 15682 -15683> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.PrimitiveTypeImpl.get_importers|V>";
6792 Method <15680 15683 -15684 15688> {PUBLIC} "get_importers";
6793 TypeParameter <15679 -15680 -15682 -15686> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.PrimitiveTypeImpl.get_importers(VertexFilter<V>).V";
6794 ParametrizedType <15685 15686 -15687> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.PrimitiveTypeImpl.get_importers|V>";
6795 Parameter <15687 -15688> {} "filter";
6796 Method <15689 -15690 15692> {PUBLIC} "add_arrayType";
6797 Parameter <15691 -15692> {} "vertex";
6798 Method <15696 -15697> {PUBLIC} "remove_arrayType";
6799 WildcardType <15693 -15695> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
6800 Method <15698 -15699 15701> {PUBLIC} "remove_arrayType";
6801 Parameter <15700 -15701> {} "vertex";
6802 Method <15703 15706 -15707> {PUBLIC} "get_arrayType";
6803 TypeParameter <15702 -15703 -15705> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.PrimitiveTypeImpl.get_arrayType().V";
6804 ParametrizedType <15704 15705 -15706 15710 15711 -15712> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.PrimitiveTypeImpl.get_arrayType|V>";
6805 Method <15709 15712 -15713 15717> {PUBLIC} "get_arrayType";
6806 TypeParameter <15708 -15709 -15711 -15715> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.PrimitiveTypeImpl.get_arrayType(VertexFilter<V>).V";
6807 ParametrizedType <15714 15715 -15716> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.PrimitiveTypeImpl.get_arrayType|V>";
6808 Parameter <15716 -15717> {} "filter";
6809 Method <15720 -15721> {PUBLIC} "getHasUpperBoundIncidences";
6810 Method <15724 -15725 15727> {PUBLIC} "getHasUpperBoundIncidences";
6811 Parameter <15726 -15727> {} "direction";
6812 Method <15730 -15731> {PUBLIC} "getHasTypeIncidences";
6813 Method <15734 -15735 15737> {PUBLIC} "getHasTypeIncidences";
6814 Parameter <15736 -15737> {} "direction";
6815 Method <15740 -15741> {PUBLIC} "getHasTypeArgIncidences";
6816 Method <15744 -15745 15747> {PUBLIC} "getHasTypeArgIncidences";
6817 Parameter <15746 -15747> {} "direction";
6818 Method <15750 -15751> {PUBLIC} "getThrowsIncidences";
6819 Method <15754 -15755 15757> {PUBLIC} "getThrowsIncidences";
6820 Parameter <15756 -15757> {} "direction";
6821 Method <15760 -15761> {PUBLIC} "getImportsIncidences";
6822 Method <15764 -15765 15767> {PUBLIC} "getImportsIncidences";
6823 Parameter <15766 -15767> {} "direction";
6824 Method <15770 -15771> {PUBLIC} "getHasElementTypeIncidences";
6825 Method <15774 -15775 15777> {PUBLIC} "getHasElementTypeIncidences";
6826 Parameter <15776 -15777> {} "direction";
6827 Method <15780 -15781> {PUBLIC} "getHasBoundIncidences";
6828 Method <15784 -15785 15787> {PUBLIC} "getHasBoundIncidences";
6829 Parameter <15786 -15787> {} "direction";
6830 Method <15790 -15791> {PUBLIC} "getHasLowerBoundIncidences";
6831 Method <15794 -15795 15797> {PUBLIC} "getHasLowerBoundIncidences";
6832 Parameter <15796 -15797> {} "direction";
6833 SourceFile <15800 15801 15802 15803 15804 15805 15806 15807 15808 15855> 67 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedContainsClassifierImpl.java";
6834 Class <-15800 -15809 -15857 -15865 -15913 -15922 -15979 -15988 -16045 -16054 -16111 -16120 -16177 -16186 -16243 -16251 -16308 -16317 -16371 -16380 -16428 -16437 -16485 -16494 -16542 -16551 -16599 -16608 -16656 -16665 -16713 -16722 -16770 -16779 -16827 -16836 -16884 -16893 -16941 -16950 -16998 -17007 -17061 -17070> {ABSTRACT} "ReversedEdgeImpl" "de.uni_koblenz.jgralab.impl.std.ReversedEdgeImpl";
6835 Constructor <-15812 15814 15816> {} "ReversedContainsClassifierImpl";
6836 Parameter <15813 -15814> {} "e";
6837 Parameter <15815 -15816> {} "g";
6838 Method <15817 -15818> {PUBLIC FINAL} "getAttributedElementClass";
6839 Method <15819 -15820 15822 15823> {PUBLIC} "readAttributeValues";
6840 Parameter <15821 -15822> {} "io";
6841 Method <15824 -15825 15827 15829 15830> {PUBLIC} "readAttributeValueFromString";
6842 Parameter <15826 -15827> {} "attributeName";
6843 Parameter <15828 -15829> {} "value";
6844 Method <15831 -15832 15834 15835 15836> {PUBLIC} "writeAttributeValues";
6845 Parameter <15833 -15834> {} "io";
6846 Method <15837 -15838 15840 15841 15842> {PUBLIC} "writeAttributeValueToString";
6847 Parameter <15839 -15840> {} "_attributeName";
6848 Method <15843 -15844> {PUBLIC} "getNextContainsClassifierInGraph";
6849 Method <15845 -15846> {PUBLIC} "getNextContainsClassifierIncidence";
6850 Method <15847 -15848 15850> {PUBLIC} "getNextContainsClassifierIncidence";
6851 Parameter <15849 -15850> {} "orientation";
6852 Method <15851 -15852> {PUBLIC} "getAlpha";
6853 Method <15853 -15854> {PUBLIC} "getOmega";
6854 SourceFile <15857 15858 15859 15860 15861 15862 15863 15864 15911> 66 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedContainsPackageImpl.java";
6855 Constructor <-15868 15870 15872> {} "ReversedContainsPackageImpl";
6856 Parameter <15869 -15870> {} "e";
6857 Parameter <15871 -15872> {} "g";
6858 Method <15873 -15874> {PUBLIC FINAL} "getAttributedElementClass";
6859 Method <15875 -15876 15878 15879> {PUBLIC} "readAttributeValues";
6860 Parameter <15877 -15878> {} "io";
6861 Method <15880 -15881 15883 15885 15886> {PUBLIC} "readAttributeValueFromString";
6862 Parameter <15882 -15883> {} "attributeName";
6863 Parameter <15884 -15885> {} "value";
6864 Method <15887 -15888 15890 15891 15892> {PUBLIC} "writeAttributeValues";
6865 Parameter <15889 -15890> {} "io";
6866 Method <15893 -15894 15896 15897 15898> {PUBLIC} "writeAttributeValueToString";
6867 Parameter <15895 -15896> {} "_attributeName";
6868 Method <15899 -15900> {PUBLIC} "getNextContainsPackageInGraph";
6869 Method <15901 -15902> {PUBLIC} "getNextContainsPackageIncidence";
6870 Method <15903 -15904 15906> {PUBLIC} "getNextContainsPackageIncidence";
6871 Parameter <15905 -15906> {} "orientation";
6872 Method <15907 -15908> {PUBLIC} "getAlpha";
6873 Method <15909 -15910> {PUBLIC} "getOmega";
6874 SourceFile <15913 15914 15915 15916 15917 15918 15919 15920 15921 15977> 79 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedDeclaresAnnotationElementImpl.java";
6875 Constructor <-15926 15928 15930> {} "ReversedDeclaresAnnotationElementImpl";
6876 Parameter <15927 -15928> {} "e";
6877 Parameter <15929 -15930> {} "g";
6878 Method <15931 -15932> {PUBLIC FINAL} "getAttributedElementClass";
6879 Method <15933 -15934 15936 15937> {PUBLIC} "readAttributeValues";
6880 Parameter <15935 -15936> {} "io";
6881 Method <15938 -15939 15941 15943 15944> {PUBLIC} "readAttributeValueFromString";
6882 Parameter <15940 -15941> {} "attributeName";
6883 Parameter <15942 -15943> {} "value";
6884 Method <15945 -15946 15948 15949 15950> {PUBLIC} "writeAttributeValues";
6885 Parameter <15947 -15948> {} "io";
6886 Method <15951 -15952 15954 15955 15956> {PUBLIC} "writeAttributeValueToString";
6887 Parameter <15953 -15954> {} "_attributeName";
6888 Method <15957 -15958> {PUBLIC} "getNextDeclaresInGraph";
6889 Method <15959 -15960> {PUBLIC} "getNextDeclaresAnnotationElementInGraph";
6890 Method <15961 -15962> {PUBLIC} "getNextDeclaresIncidence";
6891 Method <15963 -15964 15966> {PUBLIC} "getNextDeclaresIncidence";
6892 Parameter <15965 -15966> {} "orientation";
6893 Method <15967 -15968> {PUBLIC} "getNextDeclaresAnnotationElementIncidence";
6894 Method <15969 -15970 15972> {PUBLIC} "getNextDeclaresAnnotationElementIncidence";
6895 Parameter <15971 -15972> {} "orientation";
6896 Method <15973 -15974> {PUBLIC} "getAlpha";
6897 Method <15975 -15976> {PUBLIC} "getOmega";
6898 SourceFile <15979 15980 15981 15982 15983 15984 15985 15986 15987 16043> 79 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedDeclaresConstructorImpl.java";
6899 Constructor <-15992 15994 15996> {} "ReversedDeclaresConstructorImpl";
6900 Parameter <15993 -15994> {} "e";
6901 Parameter <15995 -15996> {} "g";
6902 Method <15997 -15998> {PUBLIC FINAL} "getAttributedElementClass";
6903 Method <15999 -16000 16002 16003> {PUBLIC} "readAttributeValues";
6904 Parameter <16001 -16002> {} "io";
6905 Method <16004 -16005 16007 16009 16010> {PUBLIC} "readAttributeValueFromString";
6906 Parameter <16006 -16007> {} "attributeName";
6907 Parameter <16008 -16009> {} "value";
6908 Method <16011 -16012 16014 16015 16016> {PUBLIC} "writeAttributeValues";
6909 Parameter <16013 -16014> {} "io";
6910 Method <16017 -16018 16020 16021 16022> {PUBLIC} "writeAttributeValueToString";
6911 Parameter <16019 -16020> {} "_attributeName";
6912 Method <16023 -16024> {PUBLIC} "getNextDeclaresInGraph";
6913 Method <16025 -16026> {PUBLIC} "getNextDeclaresConstructorInGraph";
6914 Method <16027 -16028> {PUBLIC} "getNextDeclaresIncidence";
6915 Method <16029 -16030 16032> {PUBLIC} "getNextDeclaresIncidence";
6916 Parameter <16031 -16032> {} "orientation";
6917 Method <16033 -16034> {PUBLIC} "getNextDeclaresConstructorIncidence";
6918 Method <16035 -16036 16038> {PUBLIC} "getNextDeclaresConstructorIncidence";
6919 Parameter <16037 -16038> {} "orientation";
6920 Method <16039 -16040> {PUBLIC} "getAlpha";
6921 Method <16041 -16042> {PUBLIC} "getOmega";
6922 SourceFile <16045 16046 16047 16048 16049 16050 16051 16052 16053 16109> 79 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedDeclaresEnumConstImpl.java";
6923 Constructor <-16058 16060 16062> {} "ReversedDeclaresEnumConstImpl";
6924 Parameter <16059 -16060> {} "e";
6925 Parameter <16061 -16062> {} "g";
6926 Method <16063 -16064> {PUBLIC FINAL} "getAttributedElementClass";
6927 Method <16065 -16066 16068 16069> {PUBLIC} "readAttributeValues";
6928 Parameter <16067 -16068> {} "io";
6929 Method <16070 -16071 16073 16075 16076> {PUBLIC} "readAttributeValueFromString";
6930 Parameter <16072 -16073> {} "attributeName";
6931 Parameter <16074 -16075> {} "value";
6932 Method <16077 -16078 16080 16081 16082> {PUBLIC} "writeAttributeValues";
6933 Parameter <16079 -16080> {} "io";
6934 Method <16083 -16084 16086 16087 16088> {PUBLIC} "writeAttributeValueToString";
6935 Parameter <16085 -16086> {} "_attributeName";
6936 Method <16089 -16090> {PUBLIC} "getNextDeclaresInGraph";
6937 Method <16091 -16092> {PUBLIC} "getNextDeclaresEnumConstInGraph";
6938 Method <16093 -16094> {PUBLIC} "getNextDeclaresIncidence";
6939 Method <16095 -16096 16098> {PUBLIC} "getNextDeclaresIncidence";
6940 Parameter <16097 -16098> {} "orientation";
6941 Method <16099 -16100> {PUBLIC} "getNextDeclaresEnumConstIncidence";
6942 Method <16101 -16102 16104> {PUBLIC} "getNextDeclaresEnumConstIncidence";
6943 Parameter <16103 -16104> {} "orientation";
6944 Method <16105 -16106> {PUBLIC} "getAlpha";
6945 Method <16107 -16108> {PUBLIC} "getOmega";
6946 SourceFile <16111 16112 16113 16114 16115 16116 16117 16118 16119 16175> 79 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedDeclaresFieldImpl.java";
6947 Constructor <-16124 16126 16128> {} "ReversedDeclaresFieldImpl";
6948 Parameter <16125 -16126> {} "e";
6949 Parameter <16127 -16128> {} "g";
6950 Method <16129 -16130> {PUBLIC FINAL} "getAttributedElementClass";
6951 Method <16131 -16132 16134 16135> {PUBLIC} "readAttributeValues";
6952 Parameter <16133 -16134> {} "io";
6953 Method <16136 -16137 16139 16141 16142> {PUBLIC} "readAttributeValueFromString";
6954 Parameter <16138 -16139> {} "attributeName";
6955 Parameter <16140 -16141> {} "value";
6956 Method <16143 -16144 16146 16147 16148> {PUBLIC} "writeAttributeValues";
6957 Parameter <16145 -16146> {} "io";
6958 Method <16149 -16150 16152 16153 16154> {PUBLIC} "writeAttributeValueToString";
6959 Parameter <16151 -16152> {} "_attributeName";
6960 Method <16155 -16156> {PUBLIC} "getNextDeclaresInGraph";
6961 Method <16157 -16158> {PUBLIC} "getNextDeclaresFieldInGraph";
6962 Method <16159 -16160> {PUBLIC} "getNextDeclaresIncidence";
6963 Method <16161 -16162 16164> {PUBLIC} "getNextDeclaresIncidence";
6964 Parameter <16163 -16164> {} "orientation";
6965 Method <16165 -16166> {PUBLIC} "getNextDeclaresFieldIncidence";
6966 Method <16167 -16168 16170> {PUBLIC} "getNextDeclaresFieldIncidence";
6967 Parameter <16169 -16170> {} "orientation";
6968 Method <16171 -16172> {PUBLIC} "getAlpha";
6969 Method <16173 -16174> {PUBLIC} "getOmega";
6970 SourceFile <16177 16178 16179 16180 16181 16182 16183 16184 16185 16241> 79 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedDeclaresMethodImpl.java";
6971 Constructor <-16190 16192 16194> {} "ReversedDeclaresMethodImpl";
6972 Parameter <16191 -16192> {} "e";
6973 Parameter <16193 -16194> {} "g";
6974 Method <16195 -16196> {PUBLIC FINAL} "getAttributedElementClass";
6975 Method <16197 -16198 16200 16201> {PUBLIC} "readAttributeValues";
6976 Parameter <16199 -16200> {} "io";
6977 Method <16202 -16203 16205 16207 16208> {PUBLIC} "readAttributeValueFromString";
6978 Parameter <16204 -16205> {} "attributeName";
6979 Parameter <16206 -16207> {} "value";
6980 Method <16209 -16210 16212 16213 16214> {PUBLIC} "writeAttributeValues";
6981 Parameter <16211 -16212> {} "io";
6982 Method <16215 -16216 16218 16219 16220> {PUBLIC} "writeAttributeValueToString";
6983 Parameter <16217 -16218> {} "_attributeName";
6984 Method <16221 -16222> {PUBLIC} "getNextDeclaresInGraph";
6985 Method <16223 -16224> {PUBLIC} "getNextDeclaresMethodInGraph";
6986 Method <16225 -16226> {PUBLIC} "getNextDeclaresIncidence";
6987 Method <16227 -16228 16230> {PUBLIC} "getNextDeclaresIncidence";
6988 Parameter <16229 -16230> {} "orientation";
6989 Method <16231 -16232> {PUBLIC} "getNextDeclaresMethodIncidence";
6990 Method <16233 -16234 16236> {PUBLIC} "getNextDeclaresMethodIncidence";
6991 Parameter <16235 -16236> {} "orientation";
6992 Method <16237 -16238> {PUBLIC} "getAlpha";
6993 Method <16239 -16240> {PUBLIC} "getOmega";
6994 SourceFile <16243 16244 16245 16246 16247 16248 16249 16250 16306> 78 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedDeclaresNestedClassifierImpl.java";
6995 Constructor <-16255 16257 16259> {} "ReversedDeclaresNestedClassifierImpl";
6996 Parameter <16256 -16257> {} "e";
6997 Parameter <16258 -16259> {} "g";
6998 Method <16260 -16261> {PUBLIC FINAL} "getAttributedElementClass";
6999 Method <16262 -16263 16265 16266> {PUBLIC} "readAttributeValues";
7000 Parameter <16264 -16265> {} "io";
7001 Method <16267 -16268 16270 16272 16273> {PUBLIC} "readAttributeValueFromString";
7002 Parameter <16269 -16270> {} "attributeName";
7003 Parameter <16271 -16272> {} "value";
7004 Method <16274 -16275 16277 16278 16279> {PUBLIC} "writeAttributeValues";
7005 Parameter <16276 -16277> {} "io";
7006 Method <16280 -16281 16283 16284 16285> {PUBLIC} "writeAttributeValueToString";
7007 Parameter <16282 -16283> {} "_attributeName";
7008 Method <16286 -16287> {PUBLIC} "getNextDeclaresInGraph";
7009 Method <16288 -16289> {PUBLIC} "getNextDeclaresNestedClassifierInGraph";
7010 Method <16290 -16291> {PUBLIC} "getNextDeclaresIncidence";
7011 Method <16292 -16293 16295> {PUBLIC} "getNextDeclaresIncidence";
7012 Parameter <16294 -16295> {} "orientation";
7013 Method <16296 -16297> {PUBLIC} "getNextDeclaresNestedClassifierIncidence";
7014 Method <16298 -16299 16301> {PUBLIC} "getNextDeclaresNestedClassifierIncidence";
7015 Parameter <16300 -16301> {} "orientation";
7016 Method <16302 -16303> {PUBLIC} "getAlpha";
7017 Method <16304 -16305> {PUBLIC} "getOmega";
7018 SourceFile <16308 16309 16310 16311 16312 16313 16314 16315 16316 16369> 75 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedDefinesImpl.java";
7019 Constructor <-16320 16322 16324> {} "ReversedDefinesImpl";
7020 Parameter <16321 -16322> {} "e";
7021 Parameter <16323 -16324> {} "g";
7022 Method <16325 -16326> {PUBLIC FINAL} "getAttributedElementClass";
7023 Method <16327 -16328> {PUBLIC} "get_lineNo";
7024 Method <16329 -16330 16332> {PUBLIC} "set_lineNo";
7025 Parameter <16331 -16332> {} "_lineNo";
7026 Method <16333 -16334 16336 16337> {PUBLIC} "readAttributeValues";
7027 Parameter <16335 -16336> {} "io";
7028 Method <16338 -16339 16341 16343 16344> {PUBLIC} "readAttributeValueFromString";
7029 Parameter <16340 -16341> {} "attributeName";
7030 Parameter <16342 -16343> {} "value";
7031 Method <16345 -16346 16348 16349 16350> {PUBLIC} "writeAttributeValues";
7032 Parameter <16347 -16348> {} "io";
7033 Method <16351 -16352 16354 16355 16356> {PUBLIC} "writeAttributeValueToString";
7034 Parameter <16353 -16354> {} "_attributeName";
7035 Method <16357 -16358> {PUBLIC} "getNextDefinesInGraph";
7036 Method <16359 -16360> {PUBLIC} "getNextDefinesIncidence";
7037 Method <16361 -16362 16364> {PUBLIC} "getNextDefinesIncidence";
7038 Parameter <16363 -16364> {} "orientation";
7039 Method <16365 -16366> {PUBLIC} "getAlpha";
7040 Method <16367 -16368> {PUBLIC} "getOmega";
7041 SourceFile <16371 16372 16373 16374 16375 16376 16377 16378 16379 16426> 67 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedExtendsImpl.java";
7042 Constructor <-16383 16385 16387> {} "ReversedExtendsImpl";
7043 Parameter <16384 -16385> {} "e";
7044 Parameter <16386 -16387> {} "g";
7045 Method <16388 -16389> {PUBLIC FINAL} "getAttributedElementClass";
7046 Method <16390 -16391 16393 16394> {PUBLIC} "readAttributeValues";
7047 Parameter <16392 -16393> {} "io";
7048 Method <16395 -16396 16398 16400 16401> {PUBLIC} "readAttributeValueFromString";
7049 Parameter <16397 -16398> {} "attributeName";
7050 Parameter <16399 -16400> {} "value";
7051 Method <16402 -16403 16405 16406 16407> {PUBLIC} "writeAttributeValues";
7052 Parameter <16404 -16405> {} "io";
7053 Method <16408 -16409 16411 16412 16413> {PUBLIC} "writeAttributeValueToString";
7054 Parameter <16410 -16411> {} "_attributeName";
7055 Method <16414 -16415> {PUBLIC} "getNextExtendsInGraph";
7056 Method <16416 -16417> {PUBLIC} "getNextExtendsIncidence";
7057 Method <16418 -16419 16421> {PUBLIC} "getNextExtendsIncidence";
7058 Parameter <16420 -16421> {} "orientation";
7059 Method <16422 -16423> {PUBLIC} "getAlpha";
7060 Method <16424 -16425> {PUBLIC} "getOmega";
7061 SourceFile <16428 16429 16430 16431 16432 16433 16434 16435 16436 16483> 67 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedHasBoundImpl.java";
7062 Constructor <-16440 16442 16444> {} "ReversedHasBoundImpl";
7063 Parameter <16441 -16442> {} "e";
7064 Parameter <16443 -16444> {} "g";
7065 Method <16445 -16446> {PUBLIC FINAL} "getAttributedElementClass";
7066 Method <16447 -16448 16450 16451> {PUBLIC} "readAttributeValues";
7067 Parameter <16449 -16450> {} "io";
7068 Method <16452 -16453 16455 16457 16458> {PUBLIC} "readAttributeValueFromString";
7069 Parameter <16454 -16455> {} "attributeName";
7070 Parameter <16456 -16457> {} "value";
7071 Method <16459 -16460 16462 16463 16464> {PUBLIC} "writeAttributeValues";
7072 Parameter <16461 -16462> {} "io";
7073 Method <16465 -16466 16468 16469 16470> {PUBLIC} "writeAttributeValueToString";
7074 Parameter <16467 -16468> {} "_attributeName";
7075 Method <16471 -16472> {PUBLIC} "getNextHasBoundInGraph";
7076 Method <16473 -16474> {PUBLIC} "getNextHasBoundIncidence";
7077 Method <16475 -16476 16478> {PUBLIC} "getNextHasBoundIncidence";
7078 Parameter <16477 -16478> {} "orientation";
7079 Method <16479 -16480> {PUBLIC} "getAlpha";
7080 Method <16481 -16482> {PUBLIC} "getOmega";
7081 SourceFile <16485 16486 16487 16488 16489 16490 16491 16492 16493 16540> 67 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedHasElementTypeImpl.java";
7082 Constructor <-16497 16499 16501> {} "ReversedHasElementTypeImpl";
7083 Parameter <16498 -16499> {} "e";
7084 Parameter <16500 -16501> {} "g";
7085 Method <16502 -16503> {PUBLIC FINAL} "getAttributedElementClass";
7086 Method <16504 -16505 16507 16508> {PUBLIC} "readAttributeValues";
7087 Parameter <16506 -16507> {} "io";
7088 Method <16509 -16510 16512 16514 16515> {PUBLIC} "readAttributeValueFromString";
7089 Parameter <16511 -16512> {} "attributeName";
7090 Parameter <16513 -16514> {} "value";
7091 Method <16516 -16517 16519 16520 16521> {PUBLIC} "writeAttributeValues";
7092 Parameter <16518 -16519> {} "io";
7093 Method <16522 -16523 16525 16526 16527> {PUBLIC} "writeAttributeValueToString";
7094 Parameter <16524 -16525> {} "_attributeName";
7095 Method <16528 -16529> {PUBLIC} "getNextHasElementTypeInGraph";
7096 Method <16530 -16531> {PUBLIC} "getNextHasElementTypeIncidence";
7097 Method <16532 -16533 16535> {PUBLIC} "getNextHasElementTypeIncidence";
7098 Parameter <16534 -16535> {} "orientation";
7099 Method <16536 -16537> {PUBLIC} "getAlpha";
7100 Method <16538 -16539> {PUBLIC} "getOmega";
7101 SourceFile <16542 16543 16544 16545 16546 16547 16548 16549 16550 16597> 67 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedHasGenericTypeImpl.java";
7102 Constructor <-16554 16556 16558> {} "ReversedHasGenericTypeImpl";
7103 Parameter <16555 -16556> {} "e";
7104 Parameter <16557 -16558> {} "g";
7105 Method <16559 -16560> {PUBLIC FINAL} "getAttributedElementClass";
7106 Method <16561 -16562 16564 16565> {PUBLIC} "readAttributeValues";
7107 Parameter <16563 -16564> {} "io";
7108 Method <16566 -16567 16569 16571 16572> {PUBLIC} "readAttributeValueFromString";
7109 Parameter <16568 -16569> {} "attributeName";
7110 Parameter <16570 -16571> {} "value";
7111 Method <16573 -16574 16576 16577 16578> {PUBLIC} "writeAttributeValues";
7112 Parameter <16575 -16576> {} "io";
7113 Method <16579 -16580 16582 16583 16584> {PUBLIC} "writeAttributeValueToString";
7114 Parameter <16581 -16582> {} "_attributeName";
7115 Method <16585 -16586> {PUBLIC} "getNextHasGenericTypeInGraph";
7116 Method <16587 -16588> {PUBLIC} "getNextHasGenericTypeIncidence";
7117 Method <16589 -16590 16592> {PUBLIC} "getNextHasGenericTypeIncidence";
7118 Parameter <16591 -16592> {} "orientation";
7119 Method <16593 -16594> {PUBLIC} "getAlpha";
7120 Method <16595 -16596> {PUBLIC} "getOmega";
7121 SourceFile <16599 16600 16601 16602 16603 16604 16605 16606 16607 16654> 67 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedHasLowerBoundImpl.java";
7122 Constructor <-16611 16613 16615> {} "ReversedHasLowerBoundImpl";
7123 Parameter <16612 -16613> {} "e";
7124 Parameter <16614 -16615> {} "g";
7125 Method <16616 -16617> {PUBLIC FINAL} "getAttributedElementClass";
7126 Method <16618 -16619 16621 16622> {PUBLIC} "readAttributeValues";
7127 Parameter <16620 -16621> {} "io";
7128 Method <16623 -16624 16626 16628 16629> {PUBLIC} "readAttributeValueFromString";
7129 Parameter <16625 -16626> {} "attributeName";
7130 Parameter <16627 -16628> {} "value";
7131 Method <16630 -16631 16633 16634 16635> {PUBLIC} "writeAttributeValues";
7132 Parameter <16632 -16633> {} "io";
7133 Method <16636 -16637 16639 16640 16641> {PUBLIC} "writeAttributeValueToString";
7134 Parameter <16638 -16639> {} "_attributeName";
7135 Method <16642 -16643> {PUBLIC} "getNextHasLowerBoundInGraph";
7136 Method <16644 -16645> {PUBLIC} "getNextHasLowerBoundIncidence";
7137 Method <16646 -16647 16649> {PUBLIC} "getNextHasLowerBoundIncidence";
7138 Parameter <16648 -16649> {} "orientation";
7139 Method <16650 -16651> {PUBLIC} "getAlpha";
7140 Method <16652 -16653> {PUBLIC} "getOmega";
7141 SourceFile <16656 16657 16658 16659 16660 16661 16662 16663 16664 16711> 67 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedHasParamImpl.java";
7142 Constructor <-16668 16670 16672> {} "ReversedHasParamImpl";
7143 Parameter <16669 -16670> {} "e";
7144 Parameter <16671 -16672> {} "g";
7145 Method <16673 -16674> {PUBLIC FINAL} "getAttributedElementClass";
7146 Method <16675 -16676 16678 16679> {PUBLIC} "readAttributeValues";
7147 Parameter <16677 -16678> {} "io";
7148 Method <16680 -16681 16683 16685 16686> {PUBLIC} "readAttributeValueFromString";
7149 Parameter <16682 -16683> {} "attributeName";
7150 Parameter <16684 -16685> {} "value";
7151 Method <16687 -16688 16690 16691 16692> {PUBLIC} "writeAttributeValues";
7152 Parameter <16689 -16690> {} "io";
7153 Method <16693 -16694 16696 16697 16698> {PUBLIC} "writeAttributeValueToString";
7154 Parameter <16695 -16696> {} "_attributeName";
7155 Method <16699 -16700> {PUBLIC} "getNextHasParamInGraph";
7156 Method <16701 -16702> {PUBLIC} "getNextHasParamIncidence";
7157 Method <16703 -16704 16706> {PUBLIC} "getNextHasParamIncidence";
7158 Parameter <16705 -16706> {} "orientation";
7159 Method <16707 -16708> {PUBLIC} "getAlpha";
7160 Method <16709 -16710> {PUBLIC} "getOmega";
7161 SourceFile <16713 16714 16715 16716 16717 16718 16719 16720 16721 16768> 67 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedHasTypeArgImpl.java";
7162 Constructor <-16725 16727 16729> {} "ReversedHasTypeArgImpl";
7163 Parameter <16726 -16727> {} "e";
7164 Parameter <16728 -16729> {} "g";
7165 Method <16730 -16731> {PUBLIC FINAL} "getAttributedElementClass";
7166 Method <16732 -16733 16735 16736> {PUBLIC} "readAttributeValues";
7167 Parameter <16734 -16735> {} "io";
7168 Method <16737 -16738 16740 16742 16743> {PUBLIC} "readAttributeValueFromString";
7169 Parameter <16739 -16740> {} "attributeName";
7170 Parameter <16741 -16742> {} "value";
7171 Method <16744 -16745 16747 16748 16749> {PUBLIC} "writeAttributeValues";
7172 Parameter <16746 -16747> {} "io";
7173 Method <16750 -16751 16753 16754 16755> {PUBLIC} "writeAttributeValueToString";
7174 Parameter <16752 -16753> {} "_attributeName";
7175 Method <16756 -16757> {PUBLIC} "getNextHasTypeArgInGraph";
7176 Method <16758 -16759> {PUBLIC} "getNextHasTypeArgIncidence";
7177 Method <16760 -16761 16763> {PUBLIC} "getNextHasTypeArgIncidence";
7178 Parameter <16762 -16763> {} "orientation";
7179 Method <16764 -16765> {PUBLIC} "getAlpha";
7180 Method <16766 -16767> {PUBLIC} "getOmega";
7181 SourceFile <16770 16771 16772 16773 16774 16775 16776 16777 16778 16825> 67 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedHasTypeImpl.java";
7182 Constructor <-16782 16784 16786> {} "ReversedHasTypeImpl";
7183 Parameter <16783 -16784> {} "e";
7184 Parameter <16785 -16786> {} "g";
7185 Method <16787 -16788> {PUBLIC FINAL} "getAttributedElementClass";
7186 Method <16789 -16790 16792 16793> {PUBLIC} "readAttributeValues";
7187 Parameter <16791 -16792> {} "io";
7188 Method <16794 -16795 16797 16799 16800> {PUBLIC} "readAttributeValueFromString";
7189 Parameter <16796 -16797> {} "attributeName";
7190 Parameter <16798 -16799> {} "value";
7191 Method <16801 -16802 16804 16805 16806> {PUBLIC} "writeAttributeValues";
7192 Parameter <16803 -16804> {} "io";
7193 Method <16807 -16808 16810 16811 16812> {PUBLIC} "writeAttributeValueToString";
7194 Parameter <16809 -16810> {} "_attributeName";
7195 Method <16813 -16814> {PUBLIC} "getNextHasTypeInGraph";
7196 Method <16815 -16816> {PUBLIC} "getNextHasTypeIncidence";
7197 Method <16817 -16818 16820> {PUBLIC} "getNextHasTypeIncidence";
7198 Parameter <16819 -16820> {} "orientation";
7199 Method <16821 -16822> {PUBLIC} "getAlpha";
7200 Method <16823 -16824> {PUBLIC} "getOmega";
7201 SourceFile <16827 16828 16829 16830 16831 16832 16833 16834 16835 16882> 67 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedHasTypeParamImpl.java";
7202 Constructor <-16839 16841 16843> {} "ReversedHasTypeParamImpl";
7203 Parameter <16840 -16841> {} "e";
7204 Parameter <16842 -16843> {} "g";
7205 Method <16844 -16845> {PUBLIC FINAL} "getAttributedElementClass";
7206 Method <16846 -16847 16849 16850> {PUBLIC} "readAttributeValues";
7207 Parameter <16848 -16849> {} "io";
7208 Method <16851 -16852 16854 16856 16857> {PUBLIC} "readAttributeValueFromString";
7209 Parameter <16853 -16854> {} "attributeName";
7210 Parameter <16855 -16856> {} "value";
7211 Method <16858 -16859 16861 16862 16863> {PUBLIC} "writeAttributeValues";
7212 Parameter <16860 -16861> {} "io";
7213 Method <16864 -16865 16867 16868 16869> {PUBLIC} "writeAttributeValueToString";
7214 Parameter <16866 -16867> {} "_attributeName";
7215 Method <16870 -16871> {PUBLIC} "getNextHasTypeParamInGraph";
7216 Method <16872 -16873> {PUBLIC} "getNextHasTypeParamIncidence";
7217 Method <16874 -16875 16877> {PUBLIC} "getNextHasTypeParamIncidence";
7218 Parameter <16876 -16877> {} "orientation";
7219 Method <16878 -16879> {PUBLIC} "getAlpha";
7220 Method <16880 -16881> {PUBLIC} "getOmega";
7221 SourceFile <16884 16885 16886 16887 16888 16889 16890 16891 16892 16939> 67 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedHasUpperBoundImpl.java";
7222 Constructor <-16896 16898 16900> {} "ReversedHasUpperBoundImpl";
7223 Parameter <16897 -16898> {} "e";
7224 Parameter <16899 -16900> {} "g";
7225 Method <16901 -16902> {PUBLIC FINAL} "getAttributedElementClass";
7226 Method <16903 -16904 16906 16907> {PUBLIC} "readAttributeValues";
7227 Parameter <16905 -16906> {} "io";
7228 Method <16908 -16909 16911 16913 16914> {PUBLIC} "readAttributeValueFromString";
7229 Parameter <16910 -16911> {} "attributeName";
7230 Parameter <16912 -16913> {} "value";
7231 Method <16915 -16916 16918 16919 16920> {PUBLIC} "writeAttributeValues";
7232 Parameter <16917 -16918> {} "io";
7233 Method <16921 -16922 16924 16925 16926> {PUBLIC} "writeAttributeValueToString";
7234 Parameter <16923 -16924> {} "_attributeName";
7235 Method <16927 -16928> {PUBLIC} "getNextHasUpperBoundInGraph";
7236 Method <16929 -16930> {PUBLIC} "getNextHasUpperBoundIncidence";
7237 Method <16931 -16932 16934> {PUBLIC} "getNextHasUpperBoundIncidence";
7238 Parameter <16933 -16934> {} "orientation";
7239 Method <16935 -16936> {PUBLIC} "getAlpha";
7240 Method <16937 -16938> {PUBLIC} "getOmega";
7241 SourceFile <16941 16942 16943 16944 16945 16946 16947 16948 16949 16996> 67 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedImplementsImpl.java";
7242 Constructor <-16953 16955 16957> {} "ReversedImplementsImpl";
7243 Parameter <16954 -16955> {} "e";
7244 Parameter <16956 -16957> {} "g";
7245 Method <16958 -16959> {PUBLIC FINAL} "getAttributedElementClass";
7246 Method <16960 -16961 16963 16964> {PUBLIC} "readAttributeValues";
7247 Parameter <16962 -16963> {} "io";
7248 Method <16965 -16966 16968 16970 16971> {PUBLIC} "readAttributeValueFromString";
7249 Parameter <16967 -16968> {} "attributeName";
7250 Parameter <16969 -16970> {} "value";
7251 Method <16972 -16973 16975 16976 16977> {PUBLIC} "writeAttributeValues";
7252 Parameter <16974 -16975> {} "io";
7253 Method <16978 -16979 16981 16982 16983> {PUBLIC} "writeAttributeValueToString";
7254 Parameter <16980 -16981> {} "_attributeName";
7255 Method <16984 -16985> {PUBLIC} "getNextImplementsInGraph";
7256 Method <16986 -16987> {PUBLIC} "getNextImplementsIncidence";
7257 Method <16988 -16989 16991> {PUBLIC} "getNextImplementsIncidence";
7258 Parameter <16990 -16991> {} "orientation";
7259 Method <16992 -16993> {PUBLIC} "getAlpha";
7260 Method <16994 -16995> {PUBLIC} "getOmega";
7261 SourceFile <16998 16999 17000 17001 17002 17003 17004 17005 17006 17059> 75 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedImportsImpl.java";
7262 Constructor <-17010 17012 17014> {} "ReversedImportsImpl";
7263 Parameter <17011 -17012> {} "e";
7264 Parameter <17013 -17014> {} "g";
7265 Method <17015 -17016> {PUBLIC FINAL} "getAttributedElementClass";
7266 Method <17017 -17018> {PUBLIC} "get_lineNo";
7267 Method <17019 -17020 17022> {PUBLIC} "set_lineNo";
7268 Parameter <17021 -17022> {} "_lineNo";
7269 Method <17023 -17024 17026 17027> {PUBLIC} "readAttributeValues";
7270 Parameter <17025 -17026> {} "io";
7271 Method <17028 -17029 17031 17033 17034> {PUBLIC} "readAttributeValueFromString";
7272 Parameter <17030 -17031> {} "attributeName";
7273 Parameter <17032 -17033> {} "value";
7274 Method <17035 -17036 17038 17039 17040> {PUBLIC} "writeAttributeValues";
7275 Parameter <17037 -17038> {} "io";
7276 Method <17041 -17042 17044 17045 17046> {PUBLIC} "writeAttributeValueToString";
7277 Parameter <17043 -17044> {} "_attributeName";
7278 Method <17047 -17048> {PUBLIC} "getNextImportsInGraph";
7279 Method <17049 -17050> {PUBLIC} "getNextImportsIncidence";
7280 Method <17051 -17052 17054> {PUBLIC} "getNextImportsIncidence";
7281 Parameter <17053 -17054> {} "orientation";
7282 Method <17055 -17056> {PUBLIC} "getAlpha";
7283 Method <17057 -17058> {PUBLIC} "getOmega";
7284 SourceFile <17061 17062 17063 17064 17065 17066 17067 17068 17069 17116> 67 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ReversedThrowsImpl.java";
7285 Class <17070 17071 17072 17073 17079 17081 17086 17093 17099 17105 17107 17109 17113 17115 -17116 -17117 -17292> {PUBLIC} "ReversedThrowsImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ReversedThrowsImpl";
7286 Constructor <-17073 17075 17077> {} "ReversedThrowsImpl";
7287 Parameter <17074 -17075> {} "e";
7288 Parameter <17076 -17077> {} "g";
7289 Method <17078 -17079> {PUBLIC FINAL} "getAttributedElementClass";
7290 Method <17080 -17081 17083 17084> {PUBLIC} "readAttributeValues";
7291 Parameter <17082 -17083> {} "io";
7292 Method <17085 -17086 17088 17090 17091> {PUBLIC} "readAttributeValueFromString";
7293 Parameter <17087 -17088> {} "attributeName";
7294 Parameter <17089 -17090> {} "value";
7295 Method <17092 -17093 17095 17096 17097> {PUBLIC} "writeAttributeValues";
7296 Parameter <17094 -17095> {} "io";
7297 Method <17098 -17099 17101 17102 17103> {PUBLIC} "writeAttributeValueToString";
7298 Parameter <17100 -17101> {} "_attributeName";
7299 Method <17104 -17105> {PUBLIC} "getNextThrowsInGraph";
7300 Method <17106 -17107> {PUBLIC} "getNextThrowsIncidence";
7301 Method <17108 -17109 17111> {PUBLIC} "getNextThrowsIncidence";
7302 Parameter <17110 -17111> {} "orientation";
7303 Method <17112 -17113> {PUBLIC} "getAlpha";
7304 Method <17114 -17115> {PUBLIC} "getOmega";
7305 SourceFile <17118 17119 17120 17121 17122 17123 17124 17284> 247 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/SourceFileImpl.java";
7306 Class <17125 17126 17127 17129 17131 17132 17138 17143 17146 17151 17157 17159 17163 17165 17169 17174 17181 17187 17193 17195 17197 17201 17203 17207 17214 17216 17224 17230 17236 17243 17245 17253 17259 17267 17271 17277 17281 -17284 -17285> {PUBLIC} "SourceFileImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.SourceFileImpl";
7307 Field <17128 -17129> {PROTECTED} "_lines";
7308 Field <17130 -17131> {PROTECTED} "_path";
7309 Constructor <-17132 17134 17136> {PUBLIC} "SourceFileImpl";
7310 Parameter <17133 -17134> {} "id";
7311 Parameter <17135 -17136> {} "g";
7312 Method <17137 -17138> {PUBLIC FINAL} "getAttributedElementClass";
7313 Method <17142 -17143> {PUBLIC FINAL} "getSchemaClass";
7314 WildcardType <17139 -17141> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
7315 Method <17144 17145 -17146 17148> {PUBLIC} "getAttribute";
7316 TypeParameter <-17144 -17145> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.SourceFileImpl.getAttribute(String).T";
7317 Parameter <17147 -17148> {} "attributeName";
7318 Method <17149 17150 -17151 17153 17155> {PUBLIC} "setAttribute";
7319 TypeParameter <-17149 -17154> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.SourceFileImpl.setAttribute(String,T).T";
7320 Parameter <17152 -17153> {} "attributeName";
7321 Parameter <17154 -17155> {} "data";
7322 Method <17156 -17157> {PUBLIC} "get_lines";
7323 Method <17158 -17159 17161> {PUBLIC} "set_lines";
7324 Parameter <17160 -17161> {} "_lines";
7325 Method <17162 -17163> {PUBLIC} "get_path";
7326 Method <17164 -17165 17167> {PUBLIC} "set_path";
7327 Parameter <17166 -17167> {} "_path";
7328 Method <17168 -17169 17171 17172> {PUBLIC} "readAttributeValues";
7329 Parameter <17170 -17171> {} "io";
7330 Method <17173 -17174 17176 17178 17179> {PUBLIC} "readAttributeValueFromString";
7331 Parameter <17175 -17176> {} "attributeName";
7332 Parameter <17177 -17178> {} "value";
7333 Method <17180 -17181 17183 17184 17185> {PUBLIC} "writeAttributeValues";
7334 Parameter <17182 -17183> {} "io";
7335 Method <17186 -17187 17189 17190 17191> {PUBLIC} "writeAttributeValueToString";
7336 Parameter <17188 -17189> {} "attributeName";
7337 Method <17192 -17193> {PUBLIC} "getNextSourceFile";
7338 Method <17194 -17195> {PUBLIC} "getFirstDefinesIncidence";
7339 Method <17196 -17197 17199> {PUBLIC} "getFirstDefinesIncidence";
7340 Parameter <17198 -17199> {} "orientation";
7341 Method <17200 -17201> {PUBLIC} "getFirstImportsIncidence";
7342 Method <17202 -17203 17205> {PUBLIC} "getFirstImportsIncidence";
7343 Parameter <17204 -17205> {} "orientation";
7344 Method <17206 -17207 17209> {PUBLIC} "add_imports";
7345 Parameter <17208 -17209> {} "vertex";
7346 Method <17213 -17214> {PUBLIC} "remove_imports";
7347 WildcardType <17210 -17212> "? extends NamedElement" "? extends de.uni_koblenz.jgralab.jex.schema.NamedElement";
7348 Method <17215 -17216 17218> {PUBLIC} "remove_imports";
7349 Parameter <17217 -17218> {} "vertex";
7350 Method <17220 17223 -17224> {PUBLIC} "get_imports";
7351 TypeParameter <17219 -17220 -17222> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.SourceFileImpl.get_imports().V";
7352 ParametrizedType <17221 17222 -17223 17227 17228 -17229> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.SourceFileImpl.get_imports|V>";
7353 Method <17226 17229 -17230 17234> {PUBLIC} "get_imports";
7354 TypeParameter <17225 -17226 -17228 -17232> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.SourceFileImpl.get_imports(VertexFilter<V>).V";
7355 ParametrizedType <17231 17232 -17233> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.SourceFileImpl.get_imports|V>";
7356 Parameter <17233 -17234> {} "filter";
7357 Method <17235 -17236 17238> {PUBLIC} "add_classifiers";
7358 Parameter <17237 -17238> {} "vertex";
7359 Method <17242 -17243> {PUBLIC} "remove_classifiers";
7360 WildcardType <17239 -17241> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
7361 Method <17244 -17245 17247> {PUBLIC} "remove_classifiers";
7362 Parameter <17246 -17247> {} "vertex";
7363 Method <17249 17252 -17253> {PUBLIC} "get_classifiers";
7364 TypeParameter <17248 -17249 -17251> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.SourceFileImpl.get_classifiers().V";
7365 ParametrizedType <17250 17251 -17252 17256 17257 -17258> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.SourceFileImpl.get_classifiers|V>";
7366 Method <17255 17258 -17259 17263> {PUBLIC} "get_classifiers";
7367 TypeParameter <17254 -17255 -17257 -17261> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.SourceFileImpl.get_classifiers(VertexFilter<V>).V";
7368 ParametrizedType <17260 17261 -17262> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.SourceFileImpl.get_classifiers|V>";
7369 Parameter <17262 -17263> {} "filter";
7370 Method <17266 -17267> {PUBLIC} "getDefinesIncidences";
7371 Method <17270 -17271 17273> {PUBLIC} "getDefinesIncidences";
7372 Parameter <17272 -17273> {} "direction";
7373 Method <17276 -17277> {PUBLIC} "getImportsIncidences";
7374 Method <17280 -17281 17283> {PUBLIC} "getImportsIncidences";
7375 Parameter <17282 -17283> {} "direction";
7376 SourceFile <17286 17287 17288 17289 17290 17291 17292 17293 17294 17295 17371> 105 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/ThrowsImpl.java";
7377 Class <17296 17297 17298 17299 17309 17314 17317 17322 17328 17333 17340 17346 17352 17354 17356 17360 17362 17364 17366 17368 17370 -17371 -17372> {PUBLIC} "ThrowsImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.ThrowsImpl";
7378 Constructor <-17299 17301 17303 17305 17307> {PUBLIC} "ThrowsImpl";
7379 Parameter <17300 -17301> {} "id";
7380 Parameter <17302 -17303> {} "g";
7381 Parameter <17304 -17305> {} "alpha";
7382 Parameter <17306 -17307> {} "omega";
7383 Method <17308 -17309> {PUBLIC FINAL} "getAttributedElementClass";
7384 Method <17313 -17314> {PUBLIC FINAL} "getSchemaClass";
7385 WildcardType <17310 -17312> "? extends Edge" "? extends de.uni_koblenz.jgralab.Edge";
7386 Method <17315 17316 -17317 17319> {PUBLIC} "getAttribute";
7387 TypeParameter <-17315 -17316> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ThrowsImpl.getAttribute(String).T";
7388 Parameter <17318 -17319> {} "attributeName";
7389 Method <17320 17321 -17322 17324 17326> {PUBLIC} "setAttribute";
7390 TypeParameter <-17320 -17325> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.ThrowsImpl.setAttribute(String,T).T";
7391 Parameter <17323 -17324> {} "attributeName";
7392 Parameter <17325 -17326> {} "data";
7393 Method <17327 -17328 17330 17331> {PUBLIC} "readAttributeValues";
7394 Parameter <17329 -17330> {} "io";
7395 Method <17332 -17333 17335 17337 17338> {PUBLIC} "readAttributeValueFromString";
7396 Parameter <17334 -17335> {} "attributeName";
7397 Parameter <17336 -17337> {} "value";
7398 Method <17339 -17340 17342 17343 17344> {PUBLIC} "writeAttributeValues";
7399 Parameter <17341 -17342> {} "io";
7400 Method <17345 -17346 17348 17349 17350> {PUBLIC} "writeAttributeValueToString";
7401 Parameter <17347 -17348> {} "attributeName";
7402 Method <17351 -17352> {PUBLIC} "getNextThrowsInGraph";
7403 Method <17353 -17354> {PUBLIC} "getNextThrowsIncidence";
7404 Method <17355 -17356 17358> {PUBLIC} "getNextThrowsIncidence";
7405 Parameter <17357 -17358> {} "orientation";
7406 Method <17359 -17360> {PUBLIC} "getAggregationKind";
7407 Method <17361 -17362> {PUBLIC} "getAlphaAggregationKind";
7408 Method <17363 -17364> {PUBLIC} "getOmegaAggregationKind";
7409 Method <17365 -17366> {PROTECTED} "createReversedEdge";
7410 Method <17367 -17368> {PUBLIC} "getAlpha";
7411 Method <17369 -17370> {PUBLIC} "getOmega";
7412 SourceFile <17373 17374 17375 17376 17377 17378 17379 18115> 1114 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/TypeParameterImpl.java";
7413 Class <17380 17381 17382 17383 17387 17389 17391 17392 17398 17403 17406 17411 17419 17421 17427 17429 17433 17435 17439 17444 17451 17457 17463 17465 17467 17469 17471 17473 17475 17477 17479 17481 17485 17487 17491 17493 17497 17499 17503 17505 17509 17511 17515 17517 17521 17523 17527 17529 17533 17535 17539 17541 17545 17547 17551 17553 17557 17559 17563 17565 17569 17571 17575 17577 17581 17583 17587 17594 17596 17604 17610 17616 17623 17625 17633 17639 17645 17652 17654 17662 17668 17674 17681 17683 17687 17689 17696 17698 17706 17712 17718 17725 17727 17735 17741 17747 17754 17756 17764 17770 17776 17783 17785 17793 17799 17805 17812 17814 17822 17828 17834 17841 17843 17851 17857 17863 17870 17872 17880 17886 17892 17899 17901 17905 17907 17914 17916 17924 17930 17938 17942 17948 17952 17958 17962 17968 17972 17978 17982 17988 17992 17998 18002 18008 18012 18018 18022 18028 18032 18038 18042 18048 18052 18058 18062 18068 18072 18078 18082 18088 18092 18098 18102 18108 18112 -18115 -18116> {PUBLIC} "TypeParameterImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl";
7414 Field <17386 -17387> {PROTECTED} "_modifiers";
7415 Field <17388 -17389> {PROTECTED} "_name";
7416 Field <17390 -17391> {PROTECTED} "_qualifiedName";
7417 Constructor <-17392 17394 17396> {PUBLIC} "TypeParameterImpl";
7418 Parameter <17393 -17394> {} "id";
7419 Parameter <17395 -17396> {} "g";
7420 Method <17397 -17398> {PUBLIC FINAL} "getAttributedElementClass";
7421 Method <17402 -17403> {PUBLIC FINAL} "getSchemaClass";
7422 WildcardType <17399 -17401> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
7423 Method <17404 17405 -17406 17408> {PUBLIC} "getAttribute";
7424 TypeParameter <-17404 -17405> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.getAttribute(String).T";
7425 Parameter <17407 -17408> {} "attributeName";
7426 Method <17409 17410 -17411 17413 17415> {PUBLIC} "setAttribute";
7427 TypeParameter <-17409 -17414> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.setAttribute(String,T).T";
7428 Parameter <17412 -17413> {} "attributeName";
7429 Parameter <17414 -17415> {} "data";
7430 Method <17418 -17419> {PUBLIC} "get_modifiers";
7431 Method <17420 -17421 17425> {PUBLIC} "set_modifiers";
7432 Parameter <17424 -17425> {} "_modifiers";
7433 Method <17426 -17427> {PUBLIC} "get_name";
7434 Method <17428 -17429 17431> {PUBLIC} "set_name";
7435 Parameter <17430 -17431> {} "_name";
7436 Method <17432 -17433> {PUBLIC} "get_qualifiedName";
7437 Method <17434 -17435 17437> {PUBLIC} "set_qualifiedName";
7438 Parameter <17436 -17437> {} "_qualifiedName";
7439 Method <17438 -17439 17441 17442> {PUBLIC} "readAttributeValues";
7440 Parameter <17440 -17441> {} "io";
7441 Method <17443 -17444 17446 17448 17449> {PUBLIC} "readAttributeValueFromString";
7442 Parameter <17445 -17446> {} "attributeName";
7443 Parameter <17447 -17448> {} "value";
7444 Method <17450 -17451 17453 17454 17455> {PUBLIC} "writeAttributeValues";
7445 Parameter <17452 -17453> {} "io";
7446 Method <17456 -17457 17459 17460 17461> {PUBLIC} "writeAttributeValueToString";
7447 Parameter <17458 -17459> {} "attributeName";
7448 Method <17462 -17463> {PUBLIC} "getNextAbstractClassifier";
7449 Method <17464 -17465> {PUBLIC} "getNextMember";
7450 Method <17466 -17467> {PUBLIC} "getNextModifiableElement";
7451 Method <17468 -17469> {PUBLIC} "getNextNamedElement";
7452 Method <17470 -17471> {PUBLIC} "getNextQualifiedNamedElement";
7453 Method <17472 -17473> {PUBLIC} "getNextType";
7454 Method <17474 -17475> {PUBLIC} "getNextTypeParameter";
7455 Method <17476 -17477> {PUBLIC} "getNextTypeParametrizable";
7456 Method <17478 -17479> {PUBLIC} "getFirstDefinesIncidence";
7457 Method <17480 -17481 17483> {PUBLIC} "getFirstDefinesIncidence";
7458 Parameter <17482 -17483> {} "orientation";
7459 Method <17484 -17485> {PUBLIC} "getFirstHasUpperBoundIncidence";
7460 Method <17486 -17487 17489> {PUBLIC} "getFirstHasUpperBoundIncidence";
7461 Parameter <17488 -17489> {} "orientation";
7462 Method <17490 -17491> {PUBLIC} "getFirstContainsClassifierIncidence";
7463 Method <17492 -17493 17495> {PUBLIC} "getFirstContainsClassifierIncidence";
7464 Parameter <17494 -17495> {} "orientation";
7465 Method <17496 -17497> {PUBLIC} "getFirstHasTypeArgIncidence";
7466 Method <17498 -17499 17501> {PUBLIC} "getFirstHasTypeArgIncidence";
7467 Parameter <17500 -17501> {} "orientation";
7468 Method <17502 -17503> {PUBLIC} "getFirstDeclaresMethodIncidence";
7469 Method <17504 -17505 17507> {PUBLIC} "getFirstDeclaresMethodIncidence";
7470 Parameter <17506 -17507> {} "orientation";
7471 Method <17508 -17509> {PUBLIC} "getFirstHasElementTypeIncidence";
7472 Method <17510 -17511 17513> {PUBLIC} "getFirstHasElementTypeIncidence";
7473 Parameter <17512 -17513> {} "orientation";
7474 Method <17514 -17515> {PUBLIC} "getFirstThrowsIncidence";
7475 Method <17516 -17517 17519> {PUBLIC} "getFirstThrowsIncidence";
7476 Parameter <17518 -17519> {} "orientation";
7477 Method <17520 -17521> {PUBLIC} "getFirstImportsIncidence";
7478 Method <17522 -17523 17525> {PUBLIC} "getFirstImportsIncidence";
7479 Parameter <17524 -17525> {} "orientation";
7480 Method <17526 -17527> {PUBLIC} "getFirstHasBoundIncidence";
7481 Method <17528 -17529 17531> {PUBLIC} "getFirstHasBoundIncidence";
7482 Parameter <17530 -17531> {} "orientation";
7483 Method <17532 -17533> {PUBLIC} "getFirstHasLowerBoundIncidence";
7484 Method <17534 -17535 17537> {PUBLIC} "getFirstHasLowerBoundIncidence";
7485 Parameter <17536 -17537> {} "orientation";
7486 Method <17538 -17539> {PUBLIC} "getFirstDeclaresIncidence";
7487 Method <17540 -17541 17543> {PUBLIC} "getFirstDeclaresIncidence";
7488 Parameter <17542 -17543> {} "orientation";
7489 Method <17544 -17545> {PUBLIC} "getFirstDeclaresConstructorIncidence";
7490 Method <17546 -17547 17549> {PUBLIC} "getFirstDeclaresConstructorIncidence";
7491 Parameter <17548 -17549> {} "orientation";
7492 Method <17550 -17551> {PUBLIC} "getFirstExtendsIncidence";
7493 Method <17552 -17553 17555> {PUBLIC} "getFirstExtendsIncidence";
7494 Parameter <17554 -17555> {} "orientation";
7495 Method <17556 -17557> {PUBLIC} "getFirstImplementsIncidence";
7496 Method <17558 -17559 17561> {PUBLIC} "getFirstImplementsIncidence";
7497 Parameter <17560 -17561> {} "orientation";
7498 Method <17562 -17563> {PUBLIC} "getFirstHasTypeIncidence";
7499 Method <17564 -17565 17567> {PUBLIC} "getFirstHasTypeIncidence";
7500 Parameter <17566 -17567> {} "orientation";
7501 Method <17568 -17569> {PUBLIC} "getFirstDeclaresNestedClassifierIncidence";
7502 Method <17570 -17571 17573> {PUBLIC} "getFirstDeclaresNestedClassifierIncidence";
7503 Parameter <17572 -17573> {} "orientation";
7504 Method <17574 -17575> {PUBLIC} "getFirstHasTypeParamIncidence";
7505 Method <17576 -17577 17579> {PUBLIC} "getFirstHasTypeParamIncidence";
7506 Parameter <17578 -17579> {} "orientation";
7507 Method <17580 -17581> {PUBLIC} "getFirstDeclaresFieldIncidence";
7508 Method <17582 -17583 17585> {PUBLIC} "getFirstDeclaresFieldIncidence";
7509 Parameter <17584 -17585> {} "orientation";
7510 Method <17586 -17587 17589> {PUBLIC} "add_constructors";
7511 Parameter <17588 -17589> {} "vertex";
7512 Method <17593 -17594> {PUBLIC} "remove_constructors";
7513 WildcardType <17590 -17592> "? extends Constructor" "? extends de.uni_koblenz.jgralab.jex.schema.Constructor";
7514 Method <17595 -17596 17598> {PUBLIC} "remove_constructors";
7515 Parameter <17597 -17598> {} "vertex";
7516 Method <17600 17603 -17604> {PUBLIC} "get_constructors";
7517 TypeParameter <17599 -17600 -17602> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_constructors().V";
7518 ParametrizedType <17601 17602 -17603 17607 17608 -17609> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_constructors|V>";
7519 Method <17606 17609 -17610 17614> {PUBLIC} "get_constructors";
7520 TypeParameter <17605 -17606 -17608 -17612> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_constructors(VertexFilter<V>).V";
7521 ParametrizedType <17611 17612 -17613> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_constructors|V>";
7522 Parameter <17613 -17614> {} "filter";
7523 Method <17615 -17616 17618> {PUBLIC} "add_importers";
7524 Parameter <17617 -17618> {} "vertex";
7525 Method <17622 -17623> {PUBLIC} "remove_importers";
7526 WildcardType <17619 -17621> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
7527 Method <17624 -17625 17627> {PUBLIC} "remove_importers";
7528 Parameter <17626 -17627> {} "vertex";
7529 Method <17629 17632 -17633> {PUBLIC} "get_importers";
7530 TypeParameter <17628 -17629 -17631> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_importers().V";
7531 ParametrizedType <17630 17631 -17632 17636 17637 -17638> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_importers|V>";
7532 Method <17635 17638 -17639 17643> {PUBLIC} "get_importers";
7533 TypeParameter <17634 -17635 -17637 -17641> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_importers(VertexFilter<V>).V";
7534 ParametrizedType <17640 17641 -17642> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_importers|V>";
7535 Parameter <17642 -17643> {} "filter";
7536 Method <17644 -17645 17647> {PUBLIC} "add_fields";
7537 Parameter <17646 -17647> {} "vertex";
7538 Method <17651 -17652> {PUBLIC} "remove_fields";
7539 WildcardType <17648 -17650> "? extends Field" "? extends de.uni_koblenz.jgralab.jex.schema.Field";
7540 Method <17653 -17654 17656> {PUBLIC} "remove_fields";
7541 Parameter <17655 -17656> {} "vertex";
7542 Method <17658 17661 -17662> {PUBLIC} "get_fields";
7543 TypeParameter <17657 -17658 -17660> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_fields().V";
7544 ParametrizedType <17659 17660 -17661 17665 17666 -17667> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_fields|V>";
7545 Method <17664 17667 -17668 17672> {PUBLIC} "get_fields";
7546 TypeParameter <17663 -17664 -17666 -17670> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_fields(VertexFilter<V>).V";
7547 ParametrizedType <17669 17670 -17671> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_fields|V>";
7548 Parameter <17671 -17672> {} "filter";
7549 Method <17673 -17674 17676> {PUBLIC} "add_sourceFile";
7550 Parameter <17675 -17676> {} "vertex";
7551 Method <17680 -17681> {PUBLIC} "remove_sourceFile";
7552 WildcardType <17677 -17679> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
7553 Method <17682 -17683 17685> {PUBLIC} "remove_sourceFile";
7554 Parameter <17684 -17685> {} "vertex";
7555 Method <17686 -17687> {PUBLIC} "get_sourceFile";
7556 Method <17688 -17689 17691> {PUBLIC} "add_members";
7557 Parameter <17690 -17691> {} "vertex";
7558 Method <17695 -17696> {PUBLIC} "remove_members";
7559 WildcardType <17692 -17694> "? extends Member" "? extends de.uni_koblenz.jgralab.jex.schema.Member";
7560 Method <17697 -17698 17700> {PUBLIC} "remove_members";
7561 Parameter <17699 -17700> {} "vertex";
7562 Method <17702 17705 -17706> {PUBLIC} "get_members";
7563 TypeParameter <17701 -17702 -17704> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_members().V";
7564 ParametrizedType <17703 17704 -17705 17709 17710 -17711> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_members|V>";
7565 Method <17708 17711 -17712 17716> {PUBLIC} "get_members";
7566 TypeParameter <17707 -17708 -17710 -17714> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_members(VertexFilter<V>).V";
7567 ParametrizedType <17713 17714 -17715> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_members|V>";
7568 Parameter <17715 -17716> {} "filter";
7569 Method <17717 -17718 17720> {PUBLIC} "add_nestedClassifiers";
7570 Parameter <17719 -17720> {} "vertex";
7571 Method <17724 -17725> {PUBLIC} "remove_nestedClassifiers";
7572 WildcardType <17721 -17723> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
7573 Method <17726 -17727 17729> {PUBLIC} "remove_nestedClassifiers";
7574 Parameter <17728 -17729> {} "vertex";
7575 Method <17731 17734 -17735> {PUBLIC} "get_nestedClassifiers";
7576 TypeParameter <17730 -17731 -17733> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_nestedClassifiers().V";
7577 ParametrizedType <17732 17733 -17734 17738 17739 -17740> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_nestedClassifiers|V>";
7578 Method <17737 17740 -17741 17745> {PUBLIC} "get_nestedClassifiers";
7579 TypeParameter <17736 -17737 -17739 -17743> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_nestedClassifiers(VertexFilter<V>).V";
7580 ParametrizedType <17742 17743 -17744> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_nestedClassifiers|V>";
7581 Parameter <17744 -17745> {} "filter";
7582 Method <17746 -17747 17749> {PUBLIC} "add_subclasses";
7583 Parameter <17748 -17749> {} "vertex";
7584 Method <17753 -17754> {PUBLIC} "remove_subclasses";
7585 WildcardType <17750 -17752> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
7586 Method <17755 -17756 17758> {PUBLIC} "remove_subclasses";
7587 Parameter <17757 -17758> {} "vertex";
7588 Method <17760 17763 -17764> {PUBLIC} "get_subclasses";
7589 TypeParameter <17759 -17760 -17762> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_subclasses().V";
7590 ParametrizedType <17761 17762 -17763 17767 17768 -17769> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_subclasses|V>";
7591 Method <17766 17769 -17770 17774> {PUBLIC} "get_subclasses";
7592 TypeParameter <17765 -17766 -17768 -17772> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_subclasses(VertexFilter<V>).V";
7593 ParametrizedType <17771 17772 -17773> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_subclasses|V>";
7594 Parameter <17773 -17774> {} "filter";
7595 Method <17775 -17776 17778> {PUBLIC} "add_typeParams";
7596 Parameter <17777 -17778> {} "vertex";
7597 Method <17782 -17783> {PUBLIC} "remove_typeParams";
7598 WildcardType <17779 -17781> "? extends TypeParameter" "? extends de.uni_koblenz.jgralab.jex.schema.TypeParameter";
7599 Method <17784 -17785 17787> {PUBLIC} "remove_typeParams";
7600 Parameter <17786 -17787> {} "vertex";
7601 Method <17789 17792 -17793> {PUBLIC} "get_typeParams";
7602 TypeParameter <17788 -17789 -17791> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_typeParams().V";
7603 ParametrizedType <17790 17791 -17792 17796 17797 -17798> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_typeParams|V>";
7604 Method <17795 17798 -17799 17803> {PUBLIC} "get_typeParams";
7605 TypeParameter <17794 -17795 -17797 -17801> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_typeParams(VertexFilter<V>).V";
7606 ParametrizedType <17800 17801 -17802> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_typeParams|V>";
7607 Parameter <17802 -17803> {} "filter";
7608 Method <17804 -17805 17807> {PUBLIC} "add_implementors";
7609 Parameter <17806 -17807> {} "vertex";
7610 Method <17811 -17812> {PUBLIC} "remove_implementors";
7611 WildcardType <17808 -17810> "? extends Classifier" "? extends de.uni_koblenz.jgralab.jex.schema.Classifier";
7612 Method <17813 -17814 17816> {PUBLIC} "remove_implementors";
7613 Parameter <17815 -17816> {} "vertex";
7614 Method <17818 17821 -17822> {PUBLIC} "get_implementors";
7615 TypeParameter <17817 -17818 -17820> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_implementors().V";
7616 ParametrizedType <17819 17820 -17821 17825 17826 -17827> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_implementors|V>";
7617 Method <17824 17827 -17828 17832> {PUBLIC} "get_implementors";
7618 TypeParameter <17823 -17824 -17826 -17830> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_implementors(VertexFilter<V>).V";
7619 ParametrizedType <17829 17830 -17831> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_implementors|V>";
7620 Parameter <17831 -17832> {} "filter";
7621 Method <17833 -17834 17836> {PUBLIC} "add_methods";
7622 Parameter <17835 -17836> {} "vertex";
7623 Method <17840 -17841> {PUBLIC} "remove_methods";
7624 WildcardType <17837 -17839> "? extends Method" "? extends de.uni_koblenz.jgralab.jex.schema.Method";
7625 Method <17842 -17843 17845> {PUBLIC} "remove_methods";
7626 Parameter <17844 -17845> {} "vertex";
7627 Method <17847 17850 -17851> {PUBLIC} "get_methods";
7628 TypeParameter <17846 -17847 -17849> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_methods().V";
7629 ParametrizedType <17848 17849 -17850 17854 17855 -17856> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_methods|V>";
7630 Method <17853 17856 -17857 17861> {PUBLIC} "get_methods";
7631 TypeParameter <17852 -17853 -17855 -17859> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_methods(VertexFilter<V>).V";
7632 ParametrizedType <17858 17859 -17860> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_methods|V>";
7633 Parameter <17860 -17861> {} "filter";
7634 Method <17862 -17863 17865> {PUBLIC} "add_bounds";
7635 Parameter <17864 -17865> {} "vertex";
7636 Method <17869 -17870> {PUBLIC} "remove_bounds";
7637 WildcardType <17866 -17868> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
7638 Method <17871 -17872 17874> {PUBLIC} "remove_bounds";
7639 Parameter <17873 -17874> {} "vertex";
7640 Method <17876 17879 -17880> {PUBLIC} "get_bounds";
7641 TypeParameter <17875 -17876 -17878> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_bounds().V";
7642 ParametrizedType <17877 17878 -17879 17883 17884 -17885> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_bounds|V>";
7643 Method <17882 17885 -17886 17890> {PUBLIC} "get_bounds";
7644 TypeParameter <17881 -17882 -17884 -17888> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_bounds(VertexFilter<V>).V";
7645 ParametrizedType <17887 17888 -17889> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_bounds|V>";
7646 Parameter <17889 -17890> {} "filter";
7647 Method <17891 -17892 17894> {PUBLIC} "add_parent";
7648 Parameter <17893 -17894> {} "vertex";
7649 Method <17898 -17899> {PUBLIC} "remove_parent";
7650 WildcardType <17895 -17897> "? extends AbstractClassifier" "? extends de.uni_koblenz.jgralab.jex.schema.AbstractClassifier";
7651 Method <17900 -17901 17903> {PUBLIC} "remove_parent";
7652 Parameter <17902 -17903> {} "vertex";
7653 Method <17904 -17905> {PUBLIC} "get_parent";
7654 Method <17906 -17907 17909> {PUBLIC} "add_arrayType";
7655 Parameter <17908 -17909> {} "vertex";
7656 Method <17913 -17914> {PUBLIC} "remove_arrayType";
7657 WildcardType <17910 -17912> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
7658 Method <17915 -17916 17918> {PUBLIC} "remove_arrayType";
7659 Parameter <17917 -17918> {} "vertex";
7660 Method <17920 17923 -17924> {PUBLIC} "get_arrayType";
7661 TypeParameter <17919 -17920 -17922> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_arrayType().V";
7662 ParametrizedType <17921 17922 -17923 17927 17928 -17929> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_arrayType|V>";
7663 Method <17926 17929 -17930 17934> {PUBLIC} "get_arrayType";
7664 TypeParameter <17925 -17926 -17928 -17932> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_arrayType(VertexFilter<V>).V";
7665 ParametrizedType <17931 17932 -17933> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.TypeParameterImpl.get_arrayType|V>";
7666 Parameter <17933 -17934> {} "filter";
7667 Method <17937 -17938> {PUBLIC} "getDefinesIncidences";
7668 Method <17941 -17942 17944> {PUBLIC} "getDefinesIncidences";
7669 Parameter <17943 -17944> {} "direction";
7670 Method <17947 -17948> {PUBLIC} "getHasUpperBoundIncidences";
7671 Method <17951 -17952 17954> {PUBLIC} "getHasUpperBoundIncidences";
7672 Parameter <17953 -17954> {} "direction";
7673 Method <17957 -17958> {PUBLIC} "getContainsClassifierIncidences";
7674 Method <17961 -17962 17964> {PUBLIC} "getContainsClassifierIncidences";
7675 Parameter <17963 -17964> {} "direction";
7676 Method <17967 -17968> {PUBLIC} "getHasTypeArgIncidences";
7677 Method <17971 -17972 17974> {PUBLIC} "getHasTypeArgIncidences";
7678 Parameter <17973 -17974> {} "direction";
7679 Method <17977 -17978> {PUBLIC} "getDeclaresMethodIncidences";
7680 Method <17981 -17982 17984> {PUBLIC} "getDeclaresMethodIncidences";
7681 Parameter <17983 -17984> {} "direction";
7682 Method <17987 -17988> {PUBLIC} "getHasElementTypeIncidences";
7683 Method <17991 -17992 17994> {PUBLIC} "getHasElementTypeIncidences";
7684 Parameter <17993 -17994> {} "direction";
7685 Method <17997 -17998> {PUBLIC} "getThrowsIncidences";
7686 Method <18001 -18002 18004> {PUBLIC} "getThrowsIncidences";
7687 Parameter <18003 -18004> {} "direction";
7688 Method <18007 -18008> {PUBLIC} "getImportsIncidences";
7689 Method <18011 -18012 18014> {PUBLIC} "getImportsIncidences";
7690 Parameter <18013 -18014> {} "direction";
7691 Method <18017 -18018> {PUBLIC} "getHasBoundIncidences";
7692 Method <18021 -18022 18024> {PUBLIC} "getHasBoundIncidences";
7693 Parameter <18023 -18024> {} "direction";
7694 Method <18027 -18028> {PUBLIC} "getHasLowerBoundIncidences";
7695 Method <18031 -18032 18034> {PUBLIC} "getHasLowerBoundIncidences";
7696 Parameter <18033 -18034> {} "direction";
7697 Method <18037 -18038> {PUBLIC} "getDeclaresIncidences";
7698 Method <18041 -18042 18044> {PUBLIC} "getDeclaresIncidences";
7699 Parameter <18043 -18044> {} "direction";
7700 Method <18047 -18048> {PUBLIC} "getDeclaresConstructorIncidences";
7701 Method <18051 -18052 18054> {PUBLIC} "getDeclaresConstructorIncidences";
7702 Parameter <18053 -18054> {} "direction";
7703 Method <18057 -18058> {PUBLIC} "getExtendsIncidences";
7704 Method <18061 -18062 18064> {PUBLIC} "getExtendsIncidences";
7705 Parameter <18063 -18064> {} "direction";
7706 Method <18067 -18068> {PUBLIC} "getImplementsIncidences";
7707 Method <18071 -18072 18074> {PUBLIC} "getImplementsIncidences";
7708 Parameter <18073 -18074> {} "direction";
7709 Method <18077 -18078> {PUBLIC} "getHasTypeIncidences";
7710 Method <18081 -18082 18084> {PUBLIC} "getHasTypeIncidences";
7711 Parameter <18083 -18084> {} "direction";
7712 Method <18087 -18088> {PUBLIC} "getDeclaresNestedClassifierIncidences";
7713 Method <18091 -18092 18094> {PUBLIC} "getDeclaresNestedClassifierIncidences";
7714 Parameter <18093 -18094> {} "direction";
7715 Method <18097 -18098> {PUBLIC} "getHasTypeParamIncidences";
7716 Method <18101 -18102 18104> {PUBLIC} "getHasTypeParamIncidences";
7717 Parameter <18103 -18104> {} "direction";
7718 Method <18107 -18108> {PUBLIC} "getDeclaresFieldIncidences";
7719 Method <18111 -18112 18114> {PUBLIC} "getDeclaresFieldIncidences";
7720 Parameter <18113 -18114> {} "direction";
7721 SourceFile <18117 18118 18119 18120 18121 18122 18123 18416> 456 "src/de/uni_koblenz/jgralab/jex/schema/impl/std/WildcardTypeImpl.java";
7722 Class <18124 18125 18126 18127 18129 18131 18132 18138 18143 18146 18151 18157 18159 18163 18165 18169 18174 18181 18187 18193 18195 18197 18199 18201 18203 18207 18209 18213 18215 18219 18221 18225 18227 18231 18233 18237 18239 18243 18245 18249 18256 18258 18266 18272 18278 18285 18287 18291 18293 18300 18302 18310 18316 18322 18329 18331 18335 18339 18343 18349 18353 18359 18363 18369 18373 18379 18383 18389 18393 18399 18403 18409 18413 -18416 -18417> {PUBLIC} "WildcardTypeImpl" "de.uni_koblenz.jgralab.jex.schema.impl.std.WildcardTypeImpl";
7723 Field <18128 -18129> {PROTECTED} "_name";
7724 Field <18130 -18131> {PROTECTED} "_qualifiedName";
7725 Constructor <-18132 18134 18136> {PUBLIC} "WildcardTypeImpl";
7726 Parameter <18133 -18134> {} "id";
7727 Parameter <18135 -18136> {} "g";
7728 Method <18137 -18138> {PUBLIC FINAL} "getAttributedElementClass";
7729 Method <18142 -18143> {PUBLIC FINAL} "getSchemaClass";
7730 WildcardType <18139 -18141> "? extends Vertex" "? extends de.uni_koblenz.jgralab.Vertex";
7731 Method <18144 18145 -18146 18148> {PUBLIC} "getAttribute";
7732 TypeParameter <-18144 -18145> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.WildcardTypeImpl.getAttribute(String).T";
7733 Parameter <18147 -18148> {} "attributeName";
7734 Method <18149 18150 -18151 18153 18155> {PUBLIC} "setAttribute";
7735 TypeParameter <-18149 -18154> n "T" "de.uni_koblenz.jgralab.jex.schema.impl.std.WildcardTypeImpl.setAttribute(String,T).T";
7736 Parameter <18152 -18153> {} "attributeName";
7737 Parameter <18154 -18155> {} "data";
7738 Method <18156 -18157> {PUBLIC} "get_name";
7739 Method <18158 -18159 18161> {PUBLIC} "set_name";
7740 Parameter <18160 -18161> {} "_name";
7741 Method <18162 -18163> {PUBLIC} "get_qualifiedName";
7742 Method <18164 -18165 18167> {PUBLIC} "set_qualifiedName";
7743 Parameter <18166 -18167> {} "_qualifiedName";
7744 Method <18168 -18169 18171 18172> {PUBLIC} "readAttributeValues";
7745 Parameter <18170 -18171> {} "io";
7746 Method <18173 -18174 18176 18178 18179> {PUBLIC} "readAttributeValueFromString";
7747 Parameter <18175 -18176> {} "attributeName";
7748 Parameter <18177 -18178> {} "value";
7749 Method <18180 -18181 18183 18184 18185> {PUBLIC} "writeAttributeValues";
7750 Parameter <18182 -18183> {} "io";
7751 Method <18186 -18187 18189 18190 18191> {PUBLIC} "writeAttributeValueToString";
7752 Parameter <18188 -18189> {} "attributeName";
7753 Method <18192 -18193> {PUBLIC} "getNextNamedElement";
7754 Method <18194 -18195> {PUBLIC} "getNextQualifiedNamedElement";
7755 Method <18196 -18197> {PUBLIC} "getNextType";
7756 Method <18198 -18199> {PUBLIC} "getNextWildcardType";
7757 Method <18200 -18201> {PUBLIC} "getFirstHasUpperBoundIncidence";
7758 Method <18202 -18203 18205> {PUBLIC} "getFirstHasUpperBoundIncidence";
7759 Parameter <18204 -18205> {} "orientation";
7760 Method <18206 -18207> {PUBLIC} "getFirstHasTypeIncidence";
7761 Method <18208 -18209 18211> {PUBLIC} "getFirstHasTypeIncidence";
7762 Parameter <18210 -18211> {} "orientation";
7763 Method <18212 -18213> {PUBLIC} "getFirstHasTypeArgIncidence";
7764 Method <18214 -18215 18217> {PUBLIC} "getFirstHasTypeArgIncidence";
7765 Parameter <18216 -18217> {} "orientation";
7766 Method <18218 -18219> {PUBLIC} "getFirstThrowsIncidence";
7767 Method <18220 -18221 18223> {PUBLIC} "getFirstThrowsIncidence";
7768 Parameter <18222 -18223> {} "orientation";
7769 Method <18224 -18225> {PUBLIC} "getFirstImportsIncidence";
7770 Method <18226 -18227 18229> {PUBLIC} "getFirstImportsIncidence";
7771 Parameter <18228 -18229> {} "orientation";
7772 Method <18230 -18231> {PUBLIC} "getFirstHasElementTypeIncidence";
7773 Method <18232 -18233 18235> {PUBLIC} "getFirstHasElementTypeIncidence";
7774 Parameter <18234 -18235> {} "orientation";
7775 Method <18236 -18237> {PUBLIC} "getFirstHasBoundIncidence";
7776 Method <18238 -18239 18241> {PUBLIC} "getFirstHasBoundIncidence";
7777 Parameter <18240 -18241> {} "orientation";
7778 Method <18242 -18243> {PUBLIC} "getFirstHasLowerBoundIncidence";
7779 Method <18244 -18245 18247> {PUBLIC} "getFirstHasLowerBoundIncidence";
7780 Parameter <18246 -18247> {} "orientation";
7781 Method <18248 -18249 18251> {PUBLIC} "add_importers";
7782 Parameter <18250 -18251> {} "vertex";
7783 Method <18255 -18256> {PUBLIC} "remove_importers";
7784 WildcardType <18252 -18254> "? extends SourceFile" "? extends de.uni_koblenz.jgralab.jex.schema.SourceFile";
7785 Method <18257 -18258 18260> {PUBLIC} "remove_importers";
7786 Parameter <18259 -18260> {} "vertex";
7787 Method <18262 18265 -18266> {PUBLIC} "get_importers";
7788 TypeParameter <18261 -18262 -18264> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.WildcardTypeImpl.get_importers().V";
7789 ParametrizedType <18263 18264 -18265 18269 18270 -18271> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.WildcardTypeImpl.get_importers|V>";
7790 Method <18268 18271 -18272 18276> {PUBLIC} "get_importers";
7791 TypeParameter <18267 -18268 -18270 -18274> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.WildcardTypeImpl.get_importers(VertexFilter<V>).V";
7792 ParametrizedType <18273 18274 -18275> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.WildcardTypeImpl.get_importers|V>";
7793 Parameter <18275 -18276> {} "filter";
7794 Method <18277 -18278 18280> {PUBLIC} "add_upperBound";
7795 Parameter <18279 -18280> {} "vertex";
7796 Method <18284 -18285> {PUBLIC} "remove_upperBound";
7797 WildcardType <18281 -18283> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
7798 Method <18286 -18287 18289> {PUBLIC} "remove_upperBound";
7799 Parameter <18288 -18289> {} "vertex";
7800 Method <18290 -18291> {PUBLIC} "get_upperBound";
7801 Method <18292 -18293 18295> {PUBLIC} "add_arrayType";
7802 Parameter <18294 -18295> {} "vertex";
7803 Method <18299 -18300> {PUBLIC} "remove_arrayType";
7804 WildcardType <18296 -18298> "? extends ArrayType" "? extends de.uni_koblenz.jgralab.jex.schema.ArrayType";
7805 Method <18301 -18302 18304> {PUBLIC} "remove_arrayType";
7806 Parameter <18303 -18304> {} "vertex";
7807 Method <18306 18309 -18310> {PUBLIC} "get_arrayType";
7808 TypeParameter <18305 -18306 -18308> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.WildcardTypeImpl.get_arrayType().V";
7809 ParametrizedType <18307 18308 -18309 18313 18314 -18315> n "Iterable<V>" "java.lang.Iterable<de.uni_koblenz.jgralab.jex.schema.impl.std.WildcardTypeImpl.get_arrayType|V>";
7810 Method <18312 18315 -18316 18320> {PUBLIC} "get_arrayType";
7811 TypeParameter <18311 -18312 -18314 -18318> n "V" "de.uni_koblenz.jgralab.jex.schema.impl.std.WildcardTypeImpl.get_arrayType(VertexFilter<V>).V";
7812 ParametrizedType <18317 18318 -18319> n "VertexFilter<V>" "de.uni_koblenz.jgralab.VertexFilter<de.uni_koblenz.jgralab.jex.schema.impl.std.WildcardTypeImpl.get_arrayType|V>";
7813 Parameter <18319 -18320> {} "filter";
7814 Method <18321 -18322 18324> {PUBLIC} "add_lowerBound";
7815 Parameter <18323 -18324> {} "vertex";
7816 Method <18328 -18329> {PUBLIC} "remove_lowerBound";
7817 WildcardType <18325 -18327> "? extends Type" "? extends de.uni_koblenz.jgralab.jex.schema.Type";
7818 Method <18330 -18331 18333> {PUBLIC} "remove_lowerBound";
7819 Parameter <18332 -18333> {} "vertex";
7820 Method <18334 -18335> {PUBLIC} "get_lowerBound";
7821 Method <18338 -18339> {PUBLIC} "getHasUpperBoundIncidences";
7822 Method <18342 -18343 18345> {PUBLIC} "getHasUpperBoundIncidences";
7823 Parameter <18344 -18345> {} "direction";
7824 Method <18348 -18349> {PUBLIC} "getHasTypeIncidences";
7825 Method <18352 -18353 18355> {PUBLIC} "getHasTypeIncidences";
7826 Parameter <18354 -18355> {} "direction";
7827 Method <18358 -18359> {PUBLIC} "getHasTypeArgIncidences";
7828 Method <18362 -18363 18365> {PUBLIC} "getHasTypeArgIncidences";
7829 Parameter <18364 -18365> {} "direction";
7830 Method <18368 -18369> {PUBLIC} "getThrowsIncidences";
7831 Method <18372 -18373 18375> {PUBLIC} "getThrowsIncidences";
7832 Parameter <18374 -18375> {} "direction";
7833 Method <18378 -18379> {PUBLIC} "getImportsIncidences";
7834 Method <18382 -18383 18385> {PUBLIC} "getImportsIncidences";
7835 Parameter <18384 -18385> {} "direction";
7836 Method <18388 -18389> {PUBLIC} "getHasElementTypeIncidences";
7837 Method <18392 -18393 18395> {PUBLIC} "getHasElementTypeIncidences";
7838 Parameter <18394 -18395> {} "direction";
7839 Method <18398 -18399> {PUBLIC} "getHasBoundIncidences";
7840 Method <18402 -18403 18405> {PUBLIC} "getHasBoundIncidences";
7841 Parameter <18404 -18405> {} "direction";
7842 Method <18408 -18409> {PUBLIC} "getHasLowerBoundIncidences";
7843 Method <18412 -18413 18415> {PUBLIC} "getHasLowerBoundIncidences";
7844 Parameter <18414 -18415> {} "direction";
1 ContainsPackage;
2 ContainsPackage;
3 ContainsPackage;
4 ContainsPackage;
5 ContainsPackage;
6 Imports 9;
7 Extends;
8 Extends;
9 Extends;
10 Extends;
11 Extends;
12 HasType;
13 DeclaresField;
14 HasType;
15 DeclaresMethod;
16 HasType;
17 DeclaresMethod;
18 HasType;
19 DeclaresMethod;
20 HasType;
21 DeclaresMethod;
22 HasType;
23 DeclaresMethod;
24 HasType;
25 DeclaresMethod;
26 HasType;
27 DeclaresMethod;
28 HasType;
29 DeclaresMethod;
30 HasType;
31 DeclaresMethod;
32 HasType;
33 HasParam;
34 HasType;
35 DeclaresMethod;
36 HasType;
37 DeclaresMethod;
38 HasType;
39 HasParam;
40 HasType;
41 DeclaresMethod;
42 HasType;
43 DeclaresMethod;
44 HasType;
45 HasParam;
46 HasType;
47 DeclaresMethod;
48 HasType;
49 DeclaresMethod;
50 HasType;
51 HasParam;
52 HasType;
53 DeclaresMethod;
54 HasType;
55 DeclaresMethod;
56 HasType;
57 HasParam;
58 HasType;
59 DeclaresMethod;
60 HasType;
61 DeclaresMethod;
62 HasType;
63 HasParam;
64 HasType;
65 DeclaresMethod;
66 HasType;
67 DeclaresMethod;
68 HasType;
69 HasParam;
70 HasType;
71 DeclaresMethod;
72 HasType;
73 DeclaresMethod;
74 HasType;
75 HasParam;
76 HasType;
77 DeclaresMethod;
78 HasType;
79 DeclaresMethod;
80 HasType;
81 HasParam;
82 HasType;
83 DeclaresMethod;
84 HasType;
85 HasParam;
86 HasUpperBound;
87 HasGenericType;
88 HasTypeArg;
89 HasType;
90 DeclaresMethod;
91 HasType;
92 DeclaresMethod;
93 HasType;
94 HasParam;
95 HasBound;
96 HasTypeParam;
97 HasGenericType;
98 HasTypeArg;
99 HasType;
100 DeclaresMethod;
101 HasBound;
102 HasTypeParam;
103 HasGenericType;
104 HasTypeArg;
105 HasType;
106 DeclaresMethod;
107 HasGenericType;
108 HasTypeArg;
109 HasType;
110 HasParam;
111 HasType;
112 DeclaresMethod;
113 HasType;
114 HasParam;
115 HasUpperBound;
116 HasGenericType;
117 HasTypeArg;
118 HasType;
119 DeclaresMethod;
120 HasType;
121 DeclaresMethod;
122 HasType;
123 HasParam;
124 HasBound;
125 HasTypeParam;
126 HasGenericType;
127 HasTypeArg;
128 HasType;
129 DeclaresMethod;
130 HasBound;
131 HasTypeParam;
132 HasGenericType;
133 HasTypeArg;
134 HasType;
135 DeclaresMethod;
136 HasGenericType;
137 HasTypeArg;
138 HasType;
139 HasParam;
140 HasType;
141 DeclaresMethod;
142 HasType;
143 HasParam;
144 HasUpperBound;
145 HasGenericType;
146 HasTypeArg;
147 HasType;
148 DeclaresMethod;
149 HasType;
150 DeclaresMethod;
151 HasType;
152 HasParam;
153 HasBound;
154 HasTypeParam;
155 HasGenericType;
156 HasTypeArg;
157 HasType;
158 DeclaresMethod;
159 HasBound;
160 HasTypeParam;
161 HasGenericType;
162 HasTypeArg;
163 HasType;
164 DeclaresMethod;
165 HasGenericType;
166 HasTypeArg;
167 HasType;
168 HasParam;
169 HasType;
170 DeclaresMethod;
171 HasType;
172 HasParam;
173 HasUpperBound;
174 HasGenericType;
175 HasTypeArg;
176 HasType;
177 DeclaresMethod;
178 HasType;
179 DeclaresMethod;
180 HasType;
181 HasParam;
182 HasType;
183 DeclaresMethod;
184 HasType;
185 DeclaresMethod;
186 HasType;
187 HasParam;
188 HasUpperBound;
189 HasGenericType;
190 HasTypeArg;
191 HasType;
192 DeclaresMethod;
193 HasType;
194 DeclaresMethod;
195 HasType;
196 HasParam;
197 HasBound;
198 HasTypeParam;
199 HasGenericType;
200 HasTypeArg;
201 HasType;
202 DeclaresMethod;
203 HasBound;
204 HasTypeParam;
205 HasGenericType;
206 HasTypeArg;
207 HasType;
208 DeclaresMethod;
209 HasGenericType;
210 HasTypeArg;
211 HasType;
212 HasParam;
213 HasType;
214 DeclaresMethod;
215 HasType;
216 HasParam;
217 HasUpperBound;
218 HasGenericType;
219 HasTypeArg;
220 HasType;
221 DeclaresMethod;
222 HasType;
223 DeclaresMethod;
224 HasType;
225 HasParam;
226 HasBound;
227 HasTypeParam;
228 HasGenericType;
229 HasTypeArg;
230 HasType;
231 DeclaresMethod;
232 HasBound;
233 HasTypeParam;
234 HasGenericType;
235 HasTypeArg;
236 HasType;
237 DeclaresMethod;
238 HasGenericType;
239 HasTypeArg;
240 HasType;
241 HasParam;
242 HasType;
243 DeclaresMethod;
244 HasType;
245 HasParam;
246 HasUpperBound;
247 HasGenericType;
248 HasTypeArg;
249 HasType;
250 DeclaresMethod;
251 HasType;
252 DeclaresMethod;
253 HasType;
254 HasParam;
255 HasBound;
256 HasTypeParam;
257 HasGenericType;
258 HasTypeArg;
259 HasType;
260 DeclaresMethod;
261 HasBound;
262 HasTypeParam;
263 HasGenericType;
264 HasTypeArg;
265 HasType;
266 DeclaresMethod;
267 HasGenericType;
268 HasTypeArg;
269 HasType;
270 HasParam;
271 HasType;
272 DeclaresMethod;
273 HasType;
274 HasParam;
275 HasUpperBound;
276 HasGenericType;
277 HasTypeArg;
278 HasType;
279 DeclaresMethod;
280 HasType;
281 DeclaresMethod;
282 HasType;
283 HasParam;
284 HasBound;
285 HasTypeParam;
286 HasGenericType;
287 HasTypeArg;
288 HasType;
289 DeclaresMethod;
290 HasBound;
291 HasTypeParam;
292 HasGenericType;
293 HasTypeArg;
294 HasType;
295 DeclaresMethod;
296 HasGenericType;
297 HasTypeArg;
298 HasType;
299 HasParam;
300 HasType;
301 DeclaresMethod;
302 HasType;
303 HasParam;
304 HasUpperBound;
305 HasGenericType;
306 HasTypeArg;
307 HasType;
308 DeclaresMethod;
309 HasType;
310 DeclaresMethod;
311 HasType;
312 HasParam;
313 HasBound;
314 HasTypeParam;
315 HasGenericType;
316 HasTypeArg;
317 HasType;
318 DeclaresMethod;
319 HasBound;
320 HasTypeParam;
321 HasGenericType;
322 HasTypeArg;
323 HasType;
324 DeclaresMethod;
325 HasGenericType;
326 HasTypeArg;
327 HasType;
328 HasParam;
329 HasType;
330 DeclaresMethod;
331 HasType;
332 HasParam;
333 HasUpperBound;
334 HasGenericType;
335 HasTypeArg;
336 HasType;
337 DeclaresMethod;
338 HasType;
339 DeclaresMethod;
340 HasType;
341 HasParam;
342 HasBound;
343 HasTypeParam;
344 HasGenericType;
345 HasTypeArg;
346 HasType;
347 DeclaresMethod;
348 HasBound;
349 HasTypeParam;
350 HasGenericType;
351 HasTypeArg;
352 HasType;
353 DeclaresMethod;
354 HasGenericType;
355 HasTypeArg;
356 HasType;
357 HasParam;
358 HasType;
359 DeclaresMethod;
360 HasType;
361 HasParam;
362 HasUpperBound;
363 HasGenericType;
364 HasTypeArg;
365 HasType;
366 DeclaresMethod;
367 HasType;
368 DeclaresMethod;
369 HasType;
370 HasParam;
371 HasType;
372 DeclaresMethod;
373 HasType;
374 DeclaresMethod;
375 HasType;
376 HasParam;
377 HasUpperBound;
378 HasGenericType;
379 HasTypeArg;
380 HasType;
381 DeclaresMethod;
382 HasType;
383 DeclaresMethod;
384 HasType;
385 HasParam;
386 HasBound;
387 HasTypeParam;
388 HasGenericType;
389 HasTypeArg;
390 HasType;
391 DeclaresMethod;
392 HasBound;
393 HasTypeParam;
394 HasGenericType;
395 HasTypeArg;
396 HasType;
397 DeclaresMethod;
398 HasGenericType;
399 HasTypeArg;
400 HasType;
401 HasParam;
402 HasGenericType;
403 HasTypeArg;
404 HasType;
405 DeclaresMethod;
406 HasGenericType;
407 HasTypeArg;
408 HasType;
409 DeclaresMethod;
410 HasType;
411 HasParam;
412 HasGenericType;
413 HasTypeArg;
414 HasType;
415 DeclaresMethod;
416 HasGenericType;
417 HasTypeArg;
418 HasType;
419 DeclaresMethod;
420 HasType;
421 HasParam;
422 HasGenericType;
423 HasTypeArg;
424 HasType;
425 DeclaresMethod;
426 HasGenericType;
427 HasTypeArg;
428 HasType;
429 DeclaresMethod;
430 HasType;
431 HasParam;
432 HasGenericType;
433 HasTypeArg;
434 HasType;
435 DeclaresMethod;
436 HasGenericType;
437 HasTypeArg;
438 HasType;
439 DeclaresMethod;
440 HasType;
441 HasParam;
442 HasGenericType;
443 HasTypeArg;
444 HasType;
445 DeclaresMethod;
446 HasGenericType;
447 HasTypeArg;
448 HasType;
449 DeclaresMethod;
450 HasType;
451 HasParam;
452 HasGenericType;
453 HasTypeArg;
454 HasType;
455 DeclaresMethod;
456 HasGenericType;
457 HasTypeArg;
458 HasType;
459 DeclaresMethod;
460 HasType;
461 HasParam;
462 HasGenericType;
463 HasTypeArg;
464 HasType;
465 DeclaresMethod;
466 HasGenericType;
467 HasTypeArg;
468 HasType;
469 DeclaresMethod;
470 HasType;
471 HasParam;
472 HasGenericType;
473 HasTypeArg;
474 HasType;
475 DeclaresMethod;
476 HasGenericType;
477 HasTypeArg;
478 HasType;
479 DeclaresMethod;
480 HasType;
481 HasParam;
482 HasGenericType;
483 HasTypeArg;
484 HasType;
485 DeclaresMethod;
486 HasGenericType;
487 HasTypeArg;
488 HasType;
489 DeclaresMethod;
490 HasType;
491 HasParam;
492 Defines 11;
493 ContainsClassifier;
494 Imports 9;
495 Extends;
496 Extends;
497 HasType;
498 DeclaresField;
499 HasType;
500 DeclaresMethod;
501 HasType;
502 DeclaresMethod;
503 HasType;
504 DeclaresMethod;
505 HasType;
506 DeclaresMethod;
507 HasType;
508 DeclaresMethod;
509 HasType;
510 DeclaresMethod;
511 HasType;
512 DeclaresMethod;
513 HasType;
514 DeclaresMethod;
515 HasType;
516 DeclaresMethod;
517 HasType;
518 DeclaresMethod;
519 HasType;
520 DeclaresMethod;
521 HasType;
522 HasParam;
523 HasType;
524 DeclaresMethod;
525 HasType;
526 HasParam;
527 HasUpperBound;
528 HasGenericType;
529 HasTypeArg;
530 HasType;
531 DeclaresMethod;
532 HasType;
533 DeclaresMethod;
534 HasType;
535 HasParam;
536 HasBound;
537 HasTypeParam;
538 HasGenericType;
539 HasTypeArg;
540 HasType;
541 DeclaresMethod;
542 HasBound;
543 HasTypeParam;
544 HasGenericType;
545 HasTypeArg;
546 HasType;
547 DeclaresMethod;
548 HasGenericType;
549 HasTypeArg;
550 HasType;
551 HasParam;
552 HasType;
553 DeclaresMethod;
554 HasType;
555 HasParam;
556 HasUpperBound;
557 HasGenericType;
558 HasTypeArg;
559 HasType;
560 DeclaresMethod;
561 HasType;
562 DeclaresMethod;
563 HasType;
564 HasParam;
565 HasBound;
566 HasTypeParam;
567 HasGenericType;
568 HasTypeArg;
569 HasType;
570 DeclaresMethod;
571 HasBound;
572 HasTypeParam;
573 HasGenericType;
574 HasTypeArg;
575 HasType;
576 DeclaresMethod;
577 HasGenericType;
578 HasTypeArg;
579 HasType;
580 HasParam;
581 HasType;
582 DeclaresMethod;
583 HasType;
584 HasParam;
585 HasUpperBound;
586 HasGenericType;
587 HasTypeArg;
588 HasType;
589 DeclaresMethod;
590 HasType;
591 DeclaresMethod;
592 HasType;
593 HasParam;
594 HasBound;
595 HasTypeParam;
596 HasGenericType;
597 HasTypeArg;
598 HasType;
599 DeclaresMethod;
600 HasBound;
601 HasTypeParam;
602 HasGenericType;
603 HasTypeArg;
604 HasType;
605 DeclaresMethod;
606 HasGenericType;
607 HasTypeArg;
608 HasType;
609 HasParam;
610 HasType;
611 DeclaresMethod;
612 HasType;
613 HasParam;
614 HasUpperBound;
615 HasGenericType;
616 HasTypeArg;
617 HasType;
618 DeclaresMethod;
619 HasType;
620 DeclaresMethod;
621 HasType;
622 HasParam;
623 HasBound;
624 HasTypeParam;
625 HasGenericType;
626 HasTypeArg;
627 HasType;
628 DeclaresMethod;
629 HasBound;
630 HasTypeParam;
631 HasGenericType;
632 HasTypeArg;
633 HasType;
634 DeclaresMethod;
635 HasGenericType;
636 HasTypeArg;
637 HasType;
638 HasParam;
639 HasType;
640 DeclaresMethod;
641 HasType;
642 HasParam;
643 HasUpperBound;
644 HasGenericType;
645 HasTypeArg;
646 HasType;
647 DeclaresMethod;
648 HasType;
649 DeclaresMethod;
650 HasType;
651 HasParam;
652 HasType;
653 DeclaresMethod;
654 HasType;
655 DeclaresMethod;
656 HasType;
657 HasParam;
658 HasUpperBound;
659 HasGenericType;
660 HasTypeArg;
661 HasType;
662 DeclaresMethod;
663 HasType;
664 DeclaresMethod;
665 HasType;
666 HasParam;
667 HasBound;
668 HasTypeParam;
669 HasGenericType;
670 HasTypeArg;
671 HasType;
672 DeclaresMethod;
673 HasBound;
674 HasTypeParam;
675 HasGenericType;
676 HasTypeArg;
677 HasType;
678 DeclaresMethod;
679 HasGenericType;
680 HasTypeArg;
681 HasType;
682 HasParam;
683 HasType;
684 DeclaresMethod;
685 HasType;
686 HasParam;
687 HasUpperBound;
688 HasGenericType;
689 HasTypeArg;
690 HasType;
691 DeclaresMethod;
692 HasType;
693 DeclaresMethod;
694 HasType;
695 HasParam;
696 HasBound;
697 HasTypeParam;
698 HasGenericType;
699 HasTypeArg;
700 HasType;
701 DeclaresMethod;
702 HasBound;
703 HasTypeParam;
704 HasGenericType;
705 HasTypeArg;
706 HasType;
707 DeclaresMethod;
708 HasGenericType;
709 HasTypeArg;
710 HasType;
711 HasParam;
712 HasType;
713 DeclaresMethod;
714 HasType;
715 HasParam;
716 HasUpperBound;
717 HasGenericType;
718 HasTypeArg;
719 HasType;
720 DeclaresMethod;
721 HasType;
722 DeclaresMethod;
723 HasType;
724 HasParam;
725 HasBound;
726 HasTypeParam;
727 HasGenericType;
728 HasTypeArg;
729 HasType;
730 DeclaresMethod;
731 HasBound;
732 HasTypeParam;
733 HasGenericType;
734 HasTypeArg;
735 HasType;
736 DeclaresMethod;
737 HasGenericType;
738 HasTypeArg;
739 HasType;
740 HasParam;
741 HasType;
742 DeclaresMethod;
743 HasType;
744 HasParam;
745 HasUpperBound;
746 HasGenericType;
747 HasTypeArg;
748 HasType;
749 DeclaresMethod;
750 HasType;
751 DeclaresMethod;
752 HasType;
753 HasParam;
754 HasBound;
755 HasTypeParam;
756 HasGenericType;
757 HasTypeArg;
758 HasType;
759 DeclaresMethod;
760 HasBound;
761 HasTypeParam;
762 HasGenericType;
763 HasTypeArg;
764 HasType;
765 DeclaresMethod;
766 HasGenericType;
767 HasTypeArg;
768 HasType;
769 HasParam;
770 HasType;
771 DeclaresMethod;
772 HasType;
773 HasParam;
774 HasUpperBound;
775 HasGenericType;
776 HasTypeArg;
777 HasType;
778 DeclaresMethod;
779 HasType;
780 DeclaresMethod;
781 HasType;
782 HasParam;
783 HasType;
784 DeclaresMethod;
785 HasType;
786 DeclaresMethod;
787 HasType;
788 HasParam;
789 HasUpperBound;
790 HasGenericType;
791 HasTypeArg;
792 HasType;
793 DeclaresMethod;
794 HasType;
795 DeclaresMethod;
796 HasType;
797 HasParam;
798 HasBound;
799 HasTypeParam;
800 HasGenericType;
801 HasTypeArg;
802 HasType;
803 DeclaresMethod;
804 HasBound;
805 HasTypeParam;
806 HasGenericType;
807 HasTypeArg;
808 HasType;
809 DeclaresMethod;
810 HasGenericType;
811 HasTypeArg;
812 HasType;
813 HasParam;
814 HasType;
815 DeclaresMethod;
816 HasType;
817 HasParam;
818 HasUpperBound;
819 HasGenericType;
820 HasTypeArg;
821 HasType;
822 DeclaresMethod;
823 HasType;
824 DeclaresMethod;
825 HasType;
826 HasParam;
827 HasBound;
828 HasTypeParam;
829 HasGenericType;
830 HasTypeArg;
831 HasType;
832 DeclaresMethod;
833 HasBound;
834 HasTypeParam;
835 HasGenericType;
836 HasTypeArg;
837 HasType;
838 DeclaresMethod;
839 HasGenericType;
840 HasTypeArg;
841 HasType;
842 HasParam;
843 HasType;
844 DeclaresMethod;
845 HasType;
846 HasParam;
847 HasUpperBound;
848 HasGenericType;
849 HasTypeArg;
850 HasType;
851 DeclaresMethod;
852 HasType;
853 DeclaresMethod;
854 HasType;
855 HasParam;
856 HasBound;
857 HasTypeParam;
858 HasGenericType;
859 HasTypeArg;
860 HasType;
861 DeclaresMethod;
862 HasBound;
863 HasTypeParam;
864 HasGenericType;
865 HasTypeArg;
866 HasType;
867 DeclaresMethod;
868 HasGenericType;
869 HasTypeArg;
870 HasType;
871 HasParam;
872 HasType;
873 DeclaresMethod;
874 HasType;
875 HasParam;
876 HasUpperBound;
877 HasGenericType;
878 HasTypeArg;
879 HasType;
880 DeclaresMethod;
881 HasType;
882 DeclaresMethod;
883 HasType;
884 HasParam;
885 HasType;
886 DeclaresMethod;
887 HasType;
888 DeclaresMethod;
889 HasType;
890 HasParam;
891 HasUpperBound;
892 HasGenericType;
893 HasTypeArg;
894 HasType;
895 DeclaresMethod;
896 HasType;
897 DeclaresMethod;
898 HasType;
899 HasParam;
900 HasBound;
901 HasTypeParam;
902 HasGenericType;
903 HasTypeArg;
904 HasType;
905 DeclaresMethod;
906 HasBound;
907 HasTypeParam;
908 HasGenericType;
909 HasTypeArg;
910 HasType;
911 DeclaresMethod;
912 HasGenericType;
913 HasTypeArg;
914 HasType;
915 HasParam;
916 HasGenericType;
917 HasTypeArg;
918 HasType;
919 DeclaresMethod;
920 HasGenericType;
921 HasTypeArg;
922 HasType;
923 DeclaresMethod;
924 HasType;
925 HasParam;
926 Defines 11;
927 ContainsClassifier;
928 Imports 9;
929 Extends;
930 Extends;
931 Extends;
932 HasType;
933 DeclaresField;
934 HasType;
935 DeclaresMethod;
936 HasType;
937 DeclaresMethod;
938 HasType;
939 DeclaresMethod;
940 HasType;
941 DeclaresMethod;
942 HasType;
943 DeclaresMethod;
944 HasType;
945 DeclaresMethod;
946 HasType;
947 DeclaresMethod;
948 HasType;
949 HasParam;
950 HasType;
951 DeclaresMethod;
952 HasType;
953 HasParam;
954 HasUpperBound;
955 HasGenericType;
956 HasTypeArg;
957 HasType;
958 DeclaresMethod;
959 HasType;
960 DeclaresMethod;
961 HasType;
962 HasParam;
963 HasBound;
964 HasTypeParam;
965 HasGenericType;
966 HasTypeArg;
967 HasType;
968 DeclaresMethod;
969 HasBound;
970 HasTypeParam;
971 HasGenericType;
972 HasTypeArg;
973 HasType;
974 DeclaresMethod;
975 HasGenericType;
976 HasTypeArg;
977 HasType;
978 HasParam;
979 HasType;
980 DeclaresMethod;
981 HasType;
982 HasParam;
983 HasUpperBound;
984 HasGenericType;
985 HasTypeArg;
986 HasType;
987 DeclaresMethod;
988 HasType;
989 DeclaresMethod;
990 HasType;
991 HasParam;
992 HasType;
993 DeclaresMethod;
994 HasType;
995 DeclaresMethod;
996 HasType;
997 HasParam;
998 HasUpperBound;
999 HasGenericType;
1000 HasTypeArg;
1001 HasType;
1002 DeclaresMethod;
1003 HasType;
1004 DeclaresMethod;
1005 HasType;
1006 HasParam;
1007 HasType;
1008 DeclaresMethod;
1009 HasGenericType;
1010 HasTypeArg;
1011 HasType;
1012 DeclaresMethod;
1013 HasGenericType;
1014 HasTypeArg;
1015 HasType;
1016 DeclaresMethod;
1017 HasType;
1018 HasParam;
1019 Defines 135;
1020 ContainsClassifier;
1021 Imports 9;
1022 Extends;
1023 Extends;
1024 HasType;
1025 DeclaresField;
1026 HasType;
1027 DeclaresMethod;
1028 HasType;
1029 DeclaresMethod;
1030 HasType;
1031 HasParam;
1032 HasType;
1033 DeclaresMethod;
1034 HasType;
1035 DeclaresMethod;
1036 HasType;
1037 DeclaresMethod;
1038 HasType;
1039 DeclaresMethod;
1040 HasType;
1041 DeclaresMethod;
1042 HasType;
1043 DeclaresMethod;
1044 HasType;
1045 HasParam;
1046 HasType;
1047 DeclaresMethod;
1048 HasType;
1049 HasParam;
1050 HasUpperBound;
1051 HasGenericType;
1052 HasTypeArg;
1053 HasType;
1054 DeclaresMethod;
1055 HasType;
1056 DeclaresMethod;
1057 HasType;
1058 HasParam;
1059 HasBound;
1060 HasTypeParam;
1061 HasGenericType;
1062 HasTypeArg;
1063 HasType;
1064 DeclaresMethod;
1065 HasBound;
1066 HasTypeParam;
1067 HasGenericType;
1068 HasTypeArg;
1069 HasType;
1070 DeclaresMethod;
1071 HasGenericType;
1072 HasTypeArg;
1073 HasType;
1074 HasParam;
1075 HasType;
1076 DeclaresMethod;
1077 HasType;
1078 HasParam;
1079 HasUpperBound;
1080 HasGenericType;
1081 HasTypeArg;
1082 HasType;
1083 DeclaresMethod;
1084 HasType;
1085 DeclaresMethod;
1086 HasType;
1087 HasParam;
1088 HasType;
1089 DeclaresMethod;
1090 HasType;
1091 DeclaresMethod;
1092 HasType;
1093 HasParam;
1094 HasUpperBound;
1095 HasGenericType;
1096 HasTypeArg;
1097 HasType;
1098 DeclaresMethod;
1099 HasType;
1100 DeclaresMethod;
1101 HasType;
1102 HasParam;
1103 HasBound;
1104 HasTypeParam;
1105 HasGenericType;
1106 HasTypeArg;
1107 HasType;
1108 DeclaresMethod;
1109 HasBound;
1110 HasTypeParam;
1111 HasGenericType;
1112 HasTypeArg;
1113 HasType;
1114 DeclaresMethod;
1115 HasGenericType;
1116 HasTypeArg;
1117 HasType;
1118 HasParam;
1119 HasGenericType;
1120 HasTypeArg;
1121 HasType;
1122 DeclaresMethod;
1123 HasGenericType;
1124 HasTypeArg;
1125 HasType;
1126 DeclaresMethod;
1127 HasType;
1128 HasParam;
1129 Defines 470;
1130 ContainsClassifier;
1131 Extends;
1132 Extends;
1133 HasType;
1134 DeclaresField;
1135 HasType;
1136 DeclaresMethod;
1137 HasType;
1138 DeclaresMethod;
1139 HasType;
1140 DeclaresMethod;
1141 HasType;
1142 DeclaresMethod;
1143 HasType;
1144 DeclaresMethod;
1145 HasType;
1146 DeclaresMethod;
1147 HasType;
1148 DeclaresMethod;
1149 HasType;
1150 DeclaresMethod;
1151 HasType;
1152 DeclaresMethod;
1153 HasType;
1154 DeclaresMethod;
1155 HasType;
1156 HasParam;
1157 HasUpperBound;
1158 HasGenericType;
1159 HasTypeArg;
1160 HasType;
1161 DeclaresMethod;
1162 HasType;
1163 DeclaresMethod;
1164 HasType;
1165 HasParam;
1166 HasBound;
1167 HasTypeParam;
1168 HasGenericType;
1169 HasTypeArg;
1170 HasType;
1171 DeclaresMethod;
1172 HasBound;
1173 HasTypeParam;
1174 HasGenericType;
1175 HasTypeArg;
1176 HasType;
1177 DeclaresMethod;
1178 HasGenericType;
1179 HasTypeArg;
1180 HasType;
1181 HasParam;
1182 HasType;
1183 DeclaresMethod;
1184 HasType;
1185 HasParam;
1186 HasUpperBound;
1187 HasGenericType;
1188 HasTypeArg;
1189 HasType;
1190 DeclaresMethod;
1191 HasType;
1192 DeclaresMethod;
1193 HasType;
1194 HasParam;
1195 HasBound;
1196 HasTypeParam;
1197 HasGenericType;
1198 HasTypeArg;
1199 HasType;
1200 DeclaresMethod;
1201 HasBound;
1202 HasTypeParam;
1203 HasGenericType;
1204 HasTypeArg;
1205 HasType;
1206 DeclaresMethod;
1207 HasGenericType;
1208 HasTypeArg;
1209 HasType;
1210 HasParam;
1211 HasType;
1212 DeclaresMethod;
1213 HasType;
1214 HasParam;
1215 HasUpperBound;
1216 HasGenericType;
1217 HasTypeArg;
1218 HasType;
1219 DeclaresMethod;
1220 HasType;
1221 DeclaresMethod;
1222 HasType;
1223 HasParam;
1224 HasBound;
1225 HasTypeParam;
1226 HasGenericType;
1227 HasTypeArg;
1228 HasType;
1229 DeclaresMethod;
1230 HasBound;
1231 HasTypeParam;
1232 HasGenericType;
1233 HasTypeArg;
1234 HasType;
1235 DeclaresMethod;
1236 HasGenericType;
1237 HasTypeArg;
1238 HasType;
1239 HasParam;
1240 HasType;
1241 DeclaresMethod;
1242 HasType;
1243 HasParam;
1244 HasUpperBound;
1245 HasGenericType;
1246 HasTypeArg;
1247 HasType;
1248 DeclaresMethod;
1249 HasType;
1250 DeclaresMethod;
1251 HasType;
1252 HasParam;
1253 HasType;
1254 DeclaresMethod;
1255 HasType;
1256 DeclaresMethod;
1257 HasType;
1258 HasParam;
1259 HasUpperBound;
1260 HasGenericType;
1261 HasTypeArg;
1262 HasType;
1263 DeclaresMethod;
1264 HasType;
1265 DeclaresMethod;
1266 HasType;
1267 HasParam;
1268 HasBound;
1269 HasTypeParam;
1270 HasGenericType;
1271 HasTypeArg;
1272 HasType;
1273 DeclaresMethod;
1274 HasBound;
1275 HasTypeParam;
1276 HasGenericType;
1277 HasTypeArg;
1278 HasType;
1279 DeclaresMethod;
1280 HasGenericType;
1281 HasTypeArg;
1282 HasType;
1283 HasParam;
1284 HasType;
1285 DeclaresMethod;
1286 HasType;
1287 HasParam;
1288 HasUpperBound;
1289 HasGenericType;
1290 HasTypeArg;
1291 HasType;
1292 DeclaresMethod;
1293 HasType;
1294 DeclaresMethod;
1295 HasType;
1296 HasParam;
1297 HasBound;
1298 HasTypeParam;
1299 HasGenericType;
1300 HasTypeArg;
1301 HasType;
1302 DeclaresMethod;
1303 HasBound;
1304 HasTypeParam;
1305 HasGenericType;
1306 HasTypeArg;
1307 HasType;
1308 DeclaresMethod;
1309 HasGenericType;
1310 HasTypeArg;
1311 HasType;
1312 HasParam;
1313 HasType;
1314 DeclaresMethod;
1315 HasType;
1316 HasParam;
1317 HasUpperBound;
1318 HasGenericType;
1319 HasTypeArg;
1320 HasType;
1321 DeclaresMethod;
1322 HasType;
1323 DeclaresMethod;
1324 HasType;
1325 HasParam;
1326 HasBound;
1327 HasTypeParam;
1328 HasGenericType;
1329 HasTypeArg;
1330 HasType;
1331 DeclaresMethod;
1332 HasBound;
1333 HasTypeParam;
1334 HasGenericType;
1335 HasTypeArg;
1336 HasType;
1337 DeclaresMethod;
1338 HasGenericType;
1339 HasTypeArg;
1340 HasType;
1341 HasParam;
1342 HasType;
1343 DeclaresMethod;
1344 HasType;
1345 HasParam;
1346 HasUpperBound;
1347 HasGenericType;
1348 HasTypeArg;
1349 HasType;
1350 DeclaresMethod;
1351 HasType;
1352 DeclaresMethod;
1353 HasType;
1354 HasParam;
1355 HasBound;
1356 HasTypeParam;
1357 HasGenericType;
1358 HasTypeArg;
1359 HasType;
1360 DeclaresMethod;
1361 HasBound;
1362 HasTypeParam;
1363 HasGenericType;
1364 HasTypeArg;
1365 HasType;
1366 DeclaresMethod;
1367 HasGenericType;
1368 HasTypeArg;
1369 HasType;
1370 HasParam;
1371 HasType;
1372 DeclaresMethod;
1373 HasType;
1374 HasParam;
1375 HasUpperBound;
1376 HasGenericType;
1377 HasTypeArg;
1378 HasType;
1379 DeclaresMethod;
1380 HasType;
1381 DeclaresMethod;
1382 HasType;
1383 HasParam;
1384 HasType;
1385 DeclaresMethod;
1386 HasType;
1387 DeclaresMethod;
1388 HasType;
1389 HasParam;
1390 HasUpperBound;
1391 HasGenericType;
1392 HasTypeArg;
1393 HasType;
1394 DeclaresMethod;
1395 HasType;
1396 DeclaresMethod;
1397 HasType;
1398 HasParam;
1399 HasBound;
1400 HasTypeParam;
1401 HasGenericType;
1402 HasTypeArg;
1403 HasType;
1404 DeclaresMethod;
1405 HasBound;
1406 HasTypeParam;
1407 HasGenericType;
1408 HasTypeArg;
1409 HasType;
1410 DeclaresMethod;
1411 HasGenericType;
1412 HasTypeArg;
1413 HasType;
1414 HasParam;
1415 HasType;
1416 DeclaresMethod;
1417 HasType;
1418 HasParam;
1419 HasUpperBound;
1420 HasGenericType;
1421 HasTypeArg;
1422 HasType;
1423 DeclaresMethod;
1424 HasType;
1425 DeclaresMethod;
1426 HasType;
1427 HasParam;
1428 HasBound;
1429 HasTypeParam;
1430 HasGenericType;
1431 HasTypeArg;
1432 HasType;
1433 DeclaresMethod;
1434 HasBound;
1435 HasTypeParam;
1436 HasGenericType;
1437 HasTypeArg;
1438 HasType;
1439 DeclaresMethod;
1440 HasGenericType;
1441 HasTypeArg;
1442 HasType;
1443 HasParam;
1444 HasType;
1445 DeclaresMethod;
1446 HasType;
1447 HasParam;
1448 HasUpperBound;
1449 HasGenericType;
1450 HasTypeArg;
1451 HasType;
1452 DeclaresMethod;
1453 HasType;
1454 DeclaresMethod;
1455 HasType;
1456 HasParam;
1457 HasBound;
1458 HasTypeParam;
1459 HasGenericType;
1460 HasTypeArg;
1461 HasType;
1462 DeclaresMethod;
1463 HasBound;
1464 HasTypeParam;
1465 HasGenericType;
1466 HasTypeArg;
1467 HasType;
1468 DeclaresMethod;
1469 HasGenericType;
1470 HasTypeArg;
1471 HasType;
1472 HasParam;
1473 HasType;
1474 DeclaresMethod;
1475 HasType;
1476 HasParam;
1477 HasUpperBound;
1478 HasGenericType;
1479 HasTypeArg;
1480 HasType;
1481 DeclaresMethod;
1482 HasType;
1483 DeclaresMethod;
1484 HasType;
1485 HasParam;
1486 HasType;
1487 DeclaresMethod;
1488 HasType;
1489 DeclaresMethod;
1490 HasType;
1491 HasParam;
1492 HasUpperBound;
1493 HasGenericType;
1494 HasTypeArg;
1495 HasType;
1496 DeclaresMethod;
1497 HasType;
1498 DeclaresMethod;
1499 HasType;
1500 HasParam;
1501 HasBound;
1502 HasTypeParam;
1503 HasGenericType;
1504 HasTypeArg;
1505 HasType;
1506 DeclaresMethod;
1507 HasBound;
1508 HasTypeParam;
1509 HasGenericType;
1510 HasTypeArg;
1511 HasType;
1512 DeclaresMethod;
1513 HasGenericType;
1514 HasTypeArg;
1515 HasType;
1516 HasParam;
1517 Defines 9;
1518 ContainsClassifier;
1519 Imports 9;
1520 Extends;
1521 Extends;
1522 HasType;
1523 DeclaresField;
1524 HasType;
1525 DeclaresMethod;
1526 HasType;
1527 DeclaresMethod;
1528 HasType;
1529 DeclaresMethod;
1530 HasType;
1531 DeclaresMethod;
1532 HasType;
1533 DeclaresMethod;
1534 HasType;
1535 DeclaresMethod;
1536 HasType;
1537 DeclaresMethod;
1538 HasType;
1539 DeclaresMethod;
1540 HasType;
1541 DeclaresMethod;
1542 HasType;
1543 DeclaresMethod;
1544 HasType;
1545 HasParam;
1546 HasType;
1547 DeclaresMethod;
1548 HasType;
1549 DeclaresMethod;
1550 HasType;
1551 HasParam;
1552 HasType;
1553 DeclaresMethod;
1554 HasType;
1555 DeclaresMethod;
1556 HasType;
1557 HasParam;
1558 HasType;
1559 DeclaresMethod;
1560 HasType;
1561 HasParam;
1562 HasUpperBound;
1563 HasGenericType;
1564 HasTypeArg;
1565 HasType;
1566 DeclaresMethod;
1567 HasType;
1568 DeclaresMethod;
1569 HasType;
1570 HasParam;
1571 HasBound;
1572 HasTypeParam;
1573 HasGenericType;
1574 HasTypeArg;
1575 HasType;
1576 DeclaresMethod;
1577 HasBound;
1578 HasTypeParam;
1579 HasGenericType;
1580 HasTypeArg;
1581 HasType;
1582 DeclaresMethod;
1583 HasGenericType;
1584 HasTypeArg;
1585 HasType;
1586 HasParam;
1587 HasType;
1588 DeclaresMethod;
1589 HasType;
1590 HasParam;
1591 HasUpperBound;
1592 HasGenericType;
1593 HasTypeArg;
1594 HasType;
1595 DeclaresMethod;
1596 HasType;
1597 DeclaresMethod;
1598 HasType;
1599 HasParam;
1600 HasBound;
1601 HasTypeParam;
1602 HasGenericType;
1603 HasTypeArg;
1604 HasType;
1605 DeclaresMethod;
1606 HasBound;
1607 HasTypeParam;
1608 HasGenericType;
1609 HasTypeArg;
1610 HasType;
1611 DeclaresMethod;
1612 HasGenericType;
1613 HasTypeArg;
1614 HasType;
1615 HasParam;
1616 HasType;
1617 DeclaresMethod;
1618 HasType;
1619 HasParam;
1620 HasUpperBound;
1621 HasGenericType;
1622 HasTypeArg;
1623 HasType;
1624 DeclaresMethod;
1625 HasType;
1626 DeclaresMethod;
1627 HasType;
1628 HasParam;
1629 HasBound;
1630 HasTypeParam;
1631 HasGenericType;
1632 HasTypeArg;
1633 HasType;
1634 DeclaresMethod;
1635 HasBound;
1636 HasTypeParam;
1637 HasGenericType;
1638 HasTypeArg;
1639 HasType;
1640 DeclaresMethod;
1641 HasGenericType;
1642 HasTypeArg;
1643 HasType;
1644 HasParam;
1645 HasType;
1646 DeclaresMethod;
1647 HasType;
1648 HasParam;
1649 HasUpperBound;
1650 HasGenericType;
1651 HasTypeArg;
1652 HasType;
1653 DeclaresMethod;
1654 HasType;
1655 DeclaresMethod;
1656 HasType;
1657 HasParam;
1658 HasType;
1659 DeclaresMethod;
1660 HasType;
1661 DeclaresMethod;
1662 HasType;
1663 HasParam;
1664 HasUpperBound;
1665 HasGenericType;
1666 HasTypeArg;
1667 HasType;
1668 DeclaresMethod;
1669 HasType;
1670 DeclaresMethod;
1671 HasType;
1672 HasParam;
1673 HasBound;
1674 HasTypeParam;
1675 HasGenericType;
1676 HasTypeArg;
1677 HasType;
1678 DeclaresMethod;
1679 HasBound;
1680 HasTypeParam;
1681 HasGenericType;
1682 HasTypeArg;
1683 HasType;
1684 DeclaresMethod;
1685 HasGenericType;
1686 HasTypeArg;
1687 HasType;
1688 HasParam;
1689 HasType;
1690 DeclaresMethod;
1691 HasType;
1692 HasParam;
1693 HasUpperBound;
1694 HasGenericType;
1695 HasTypeArg;
1696 HasType;
1697 DeclaresMethod;
1698 HasType;
1699 DeclaresMethod;
1700 HasType;
1701 HasParam;
1702 HasBound;
1703 HasTypeParam;
1704 HasGenericType;
1705 HasTypeArg;
1706 HasType;
1707 DeclaresMethod;
1708 HasBound;
1709 HasTypeParam;
1710 HasGenericType;
1711 HasTypeArg;
1712 HasType;
1713 DeclaresMethod;
1714 HasGenericType;
1715 HasTypeArg;
1716 HasType;
1717 HasParam;
1718 HasType;
1719 DeclaresMethod;
1720 HasType;
1721 HasParam;
1722 HasUpperBound;
1723 HasGenericType;
1724 HasTypeArg;
1725 HasType;
1726 DeclaresMethod;
1727 HasType;
1728 DeclaresMethod;
1729 HasType;
1730 HasParam;
1731 HasBound;
1732 HasTypeParam;
1733 HasGenericType;
1734 HasTypeArg;
1735 HasType;
1736 DeclaresMethod;
1737 HasBound;
1738 HasTypeParam;
1739 HasGenericType;
1740 HasTypeArg;
1741 HasType;
1742 DeclaresMethod;
1743 HasGenericType;
1744 HasTypeArg;
1745 HasType;
1746 HasParam;
1747 HasType;
1748 DeclaresMethod;
1749 HasType;
1750 HasParam;
1751 HasUpperBound;
1752 HasGenericType;
1753 HasTypeArg;
1754 HasType;
1755 DeclaresMethod;
1756 HasType;
1757 DeclaresMethod;
1758 HasType;
1759 HasParam;
1760 HasBound;
1761 HasTypeParam;
1762 HasGenericType;
1763 HasTypeArg;
1764 HasType;
1765 DeclaresMethod;
1766 HasBound;
1767 HasTypeParam;
1768 HasGenericType;
1769 HasTypeArg;
1770 HasType;
1771 DeclaresMethod;
1772 HasGenericType;
1773 HasTypeArg;
1774 HasType;
1775 HasParam;
1776 HasType;
1777 DeclaresMethod;
1778 HasType;
1779 HasParam;
1780 HasUpperBound;
1781 HasGenericType;
1782 HasTypeArg;
1783 HasType;
1784 DeclaresMethod;
1785 HasType;
1786 DeclaresMethod;
1787 HasType;
1788 HasParam;
1789 HasType;
1790 DeclaresMethod;
1791 HasType;
1792 DeclaresMethod;
1793 HasType;
1794 HasParam;
1795 HasUpperBound;
1796 HasGenericType;
1797 HasTypeArg;
1798 HasType;
1799 DeclaresMethod;
1800 HasType;
1801 DeclaresMethod;
1802 HasType;
1803 HasParam;
1804 HasBound;
1805 HasTypeParam;
1806 HasGenericType;
1807 HasTypeArg;
1808 HasType;
1809 DeclaresMethod;
1810 HasBound;
1811 HasTypeParam;
1812 HasGenericType;
1813 HasTypeArg;
1814 HasType;
1815 DeclaresMethod;
1816 HasGenericType;
1817 HasTypeArg;
1818 HasType;
1819 HasParam;
1820 HasType;
1821 DeclaresMethod;
1822 HasType;
1823 HasParam;
1824 HasUpperBound;
1825 HasGenericType;
1826 HasTypeArg;
1827 HasType;
1828 DeclaresMethod;
1829 HasType;
1830 DeclaresMethod;
1831 HasType;
1832 HasParam;
1833 HasBound;
1834 HasTypeParam;
1835 HasGenericType;
1836 HasTypeArg;
1837 HasType;
1838 DeclaresMethod;
1839 HasBound;
1840 HasTypeParam;
1841 HasGenericType;
1842 HasTypeArg;
1843 HasType;
1844 DeclaresMethod;
1845 HasGenericType;
1846 HasTypeArg;
1847 HasType;
1848 HasParam;
1849 HasType;
1850 DeclaresMethod;
1851 HasType;
1852 HasParam;
1853 HasUpperBound;
1854 HasGenericType;
1855 HasTypeArg;
1856 HasType;
1857 DeclaresMethod;
1858 HasType;
1859 DeclaresMethod;
1860 HasType;
1861 HasParam;
1862 HasBound;
1863 HasTypeParam;
1864 HasGenericType;
1865 HasTypeArg;
1866 HasType;
1867 DeclaresMethod;
1868 HasBound;
1869 HasTypeParam;
1870 HasGenericType;
1871 HasTypeArg;
1872 HasType;
1873 DeclaresMethod;
1874 HasGenericType;
1875 HasTypeArg;
1876 HasType;
1877 HasParam;
1878 HasType;
1879 DeclaresMethod;
1880 HasType;
1881 HasParam;
1882 HasUpperBound;
1883 HasGenericType;
1884 HasTypeArg;
1885 HasType;
1886 DeclaresMethod;
1887 HasType;
1888 DeclaresMethod;
1889 HasType;
1890 HasParam;
1891 HasType;
1892 DeclaresMethod;
1893 HasType;
1894 DeclaresMethod;
1895 HasType;
1896 HasParam;
1897 HasUpperBound;
1898 HasGenericType;
1899 HasTypeArg;
1900 HasType;
1901 DeclaresMethod;
1902 HasType;
1903 DeclaresMethod;
1904 HasType;
1905 HasParam;
1906 HasBound;
1907 HasTypeParam;
1908 HasGenericType;
1909 HasTypeArg;
1910 HasType;
1911 DeclaresMethod;
1912 HasBound;
1913 HasTypeParam;
1914 HasGenericType;
1915 HasTypeArg;
1916 HasType;
1917 DeclaresMethod;
1918 HasGenericType;
1919 HasTypeArg;
1920 HasType;
1921 HasParam;
1922 HasGenericType;
1923 HasTypeArg;
1924 HasType;
1925 DeclaresMethod;
1926 HasGenericType;
1927 HasTypeArg;
1928 HasType;
1929 DeclaresMethod;
1930 HasType;
1931 HasParam;
1932 HasGenericType;
1933 HasTypeArg;
1934 HasType;
1935 DeclaresMethod;
1936 HasGenericType;
1937 HasTypeArg;
1938 HasType;
1939 DeclaresMethod;
1940 HasType;
1941 HasParam;
1942 HasGenericType;
1943 HasTypeArg;
1944 HasType;
1945 DeclaresMethod;
1946 HasGenericType;
1947 HasTypeArg;
1948 HasType;
1949 DeclaresMethod;
1950 HasType;
1951 HasParam;
1952 Defines 327;
1953 ContainsClassifier;
1954 Imports 9;
1955 Extends;
1956 Extends;
1957 HasType;
1958 DeclaresField;
1959 HasType;
1960 DeclaresMethod;
1961 HasType;
1962 DeclaresMethod;
1963 HasType;
1964 DeclaresMethod;
1965 HasType;
1966 DeclaresMethod;
1967 HasType;
1968 DeclaresMethod;
1969 HasType;
1970 DeclaresMethod;
1971 HasType;
1972 DeclaresMethod;
1973 HasType;
1974 DeclaresMethod;
1975 HasType;
1976 HasParam;
1977 HasType;
1978 DeclaresMethod;
1979 HasType;
1980 HasParam;
1981 HasUpperBound;
1982 HasGenericType;
1983 HasTypeArg;
1984 HasType;
1985 DeclaresMethod;
1986 HasType;
1987 DeclaresMethod;
1988 HasType;
1989 HasParam;
1990 HasBound;
1991 HasTypeParam;
1992 HasGenericType;
1993 HasTypeArg;
1994 HasType;
1995 DeclaresMethod;
1996 HasBound;
1997 HasTypeParam;
1998 HasGenericType;
1999 HasTypeArg;
2000 HasType;
2001 DeclaresMethod;
2002 HasGenericType;
2003 HasTypeArg;
2004 HasType;
2005 HasParam;
2006 HasType;
2007 DeclaresMethod;
2008 HasType;
2009 HasParam;
2010 HasUpperBound;
2011 HasGenericType;
2012 HasTypeArg;
2013 HasType;
2014 DeclaresMethod;
2015 HasType;
2016 DeclaresMethod;
2017 HasType;
2018 HasParam;
2019 HasBound;
2020 HasTypeParam;
2021 HasGenericType;
2022 HasTypeArg;
2023 HasType;
2024 DeclaresMethod;
2025 HasBound;
2026 HasTypeParam;
2027 HasGenericType;
2028 HasTypeArg;
2029 HasType;
2030 DeclaresMethod;
2031 HasGenericType;
2032 HasTypeArg;
2033 HasType;
2034 HasParam;
2035 HasType;
2036 DeclaresMethod;
2037 HasType;
2038 HasParam;
2039 HasUpperBound;
2040 HasGenericType;
2041 HasTypeArg;
2042 HasType;
2043 DeclaresMethod;
2044 HasType;
2045 DeclaresMethod;
2046 HasType;
2047 HasParam;
2048 HasBound;
2049 HasTypeParam;
2050 HasGenericType;
2051 HasTypeArg;
2052 HasType;
2053 DeclaresMethod;
2054 HasBound;
2055 HasTypeParam;
2056 HasGenericType;
2057 HasTypeArg;
2058 HasType;
2059 DeclaresMethod;
2060 HasGenericType;
2061 HasTypeArg;
2062 HasType;
2063 HasParam;
2064 HasType;
2065 DeclaresMethod;
2066 HasType;
2067 HasParam;
2068 HasUpperBound;
2069 HasGenericType;
2070 HasTypeArg;
2071 HasType;
2072 DeclaresMethod;
2073 HasType;
2074 DeclaresMethod;
2075 HasType;
2076 HasParam;
2077 HasBound;
2078 HasTypeParam;
2079 HasGenericType;
2080 HasTypeArg;
2081 HasType;
2082 DeclaresMethod;
2083 HasBound;
2084 HasTypeParam;
2085 HasGenericType;
2086 HasTypeArg;
2087 HasType;
2088 DeclaresMethod;
2089 HasGenericType;
2090 HasTypeArg;
2091 HasType;
2092 HasParam;
2093 HasType;
2094 DeclaresMethod;
2095 HasType;
2096 HasParam;
2097 HasUpperBound;
2098 HasGenericType;
2099 HasTypeArg;
2100 HasType;
2101 DeclaresMethod;
2102 HasType;
2103 DeclaresMethod;
2104 HasType;
2105 HasParam;
2106 HasType;
2107 DeclaresMethod;
2108 HasGenericType;
2109 HasTypeArg;
2110 HasType;
2111 DeclaresMethod;
2112 HasGenericType;
2113 HasTypeArg;
2114 HasType;
2115 DeclaresMethod;
2116 HasType;
2117 HasParam;
2118 Defines 155;
2119 ContainsClassifier;
2120 Imports 9;
2121 Imports 11;
2122 Imports 12;
2123 Extends;
2124 HasType;
2125 DeclaresField;
2126 HasType;
2127 DeclaresMethod;
2128 HasType;
2129 DeclaresMethod;
2130 HasType;
2131 DeclaresMethod;
2132 HasType;
2133 HasParam;
2134 HasType;
2135 DeclaresMethod;
2136 HasType;
2137 DeclaresMethod;
2138 Defines 97;
2139 ContainsClassifier;
2140 Imports 9;
2141 Imports 12;
2142 Extends;
2143 HasType;
2144 DeclaresField;
2145 HasType;
2146 DeclaresMethod;
2147 HasType;
2148 DeclaresMethod;
2149 HasType;
2150 DeclaresMethod;
2151 HasType;
2152 HasParam;
2153 HasType;
2154 DeclaresMethod;
2155 HasType;
2156 DeclaresMethod;
2157 Defines 19;
2158 ContainsClassifier;
2159 Imports 9;
2160 Imports 11;
2161 Imports 11;
2162 Extends;
2163 HasType;
2164 DeclaresField;
2165 HasType;
2166 DeclaresMethod;
2167 HasType;
2168 DeclaresMethod;
2169 HasType;
2170 DeclaresMethod;
2171 HasType;
2172 HasParam;
2173 HasType;
2174 DeclaresMethod;
2175 HasType;
2176 DeclaresMethod;
2177 Defines 141;
2178 ContainsClassifier;
2179 Imports 9;
2180 Imports 11;
2181 Imports 135;
2182 Extends;
2183 Extends;
2184 HasType;
2185 DeclaresField;
2186 HasType;
2187 DeclaresMethod;
2188 HasType;
2189 DeclaresMethod;
2190 HasType;
2191 DeclaresMethod;
2192 HasType;
2193 DeclaresMethod;
2194 HasType;
2195 HasParam;
2196 HasType;
2197 DeclaresMethod;
2198 HasType;
2199 DeclaresMethod;
2200 HasType;
2201 HasParam;
2202 HasType;
2203 DeclaresMethod;
2204 HasType;
2205 DeclaresMethod;
2206 Defines 63;
2207 ContainsClassifier;
2208 Imports 9;
2209 Imports 11;
2210 Imports 155;
2211 Extends;
2212 Extends;
2213 HasType;
2214 DeclaresField;
2215 HasType;
2216 DeclaresMethod;
2217 HasType;
2218 DeclaresMethod;
2219 HasType;
2220 DeclaresMethod;
2221 HasType;
2222 DeclaresMethod;
2223 HasType;
2224 HasParam;
2225 HasType;
2226 DeclaresMethod;
2227 HasType;
2228 DeclaresMethod;
2229 HasType;
2230 HasParam;
2231 HasType;
2232 DeclaresMethod;
2233 HasType;
2234 DeclaresMethod;
2235 Defines 53;
2236 ContainsClassifier;
2237 Imports 9;
2238 Imports 11;
2239 Imports 12;
2240 Extends;
2241 Extends;
2242 HasType;
2243 DeclaresField;
2244 HasType;
2245 DeclaresMethod;
2246 HasType;
2247 DeclaresMethod;
2248 HasType;
2249 DeclaresMethod;
2250 HasType;
2251 DeclaresMethod;
2252 HasType;
2253 HasParam;
2254 HasType;
2255 DeclaresMethod;
2256 HasType;
2257 DeclaresMethod;
2258 HasType;
2259 HasParam;
2260 HasType;
2261 DeclaresMethod;
2262 HasType;
2263 DeclaresMethod;
2264 Defines 20;
2265 ContainsClassifier;
2266 Imports 9;
2267 Imports 11;
2268 Imports 213;
2269 Extends;
2270 Extends;
2271 HasType;
2272 DeclaresField;
2273 HasType;
2274 DeclaresMethod;
2275 HasType;
2276 DeclaresMethod;
2277 HasType;
2278 DeclaresMethod;
2279 HasType;
2280 DeclaresMethod;
2281 HasType;
2282 HasParam;
2283 HasType;
2284 DeclaresMethod;
2285 HasType;
2286 DeclaresMethod;
2287 HasType;
2288 HasParam;
2289 HasType;
2290 DeclaresMethod;
2291 HasType;
2292 DeclaresMethod;
2293 Defines 119;
2294 ContainsClassifier;
2295 Imports 9;
2296 Imports 11;
2297 Imports 414;
2298 Extends;
2299 Extends;
2300 HasType;
2301 DeclaresField;
2302 HasType;
2303 DeclaresMethod;
2304 HasType;
2305 DeclaresMethod;
2306 HasType;
2307 DeclaresMethod;
2308 HasType;
2309 DeclaresMethod;
2310 HasType;
2311 HasParam;
2312 HasType;
2313 DeclaresMethod;
2314 HasType;
2315 DeclaresMethod;
2316 HasType;
2317 HasParam;
2318 HasType;
2319 DeclaresMethod;
2320 HasType;
2321 DeclaresMethod;
2322 Defines 130;
2323 ContainsClassifier;
2324 Imports 9;
2325 Imports 11;
2326 Extends;
2327 Extends;
2328 HasType;
2329 DeclaresField;
2330 HasType;
2331 DeclaresMethod;
2332 HasType;
2333 DeclaresMethod;
2334 HasType;
2335 DeclaresMethod;
2336 HasType;
2337 DeclaresMethod;
2338 HasType;
2339 HasParam;
2340 HasType;
2341 DeclaresMethod;
2342 HasType;
2343 DeclaresMethod;
2344 HasType;
2345 HasParam;
2346 HasType;
2347 DeclaresMethod;
2348 HasType;
2349 DeclaresMethod;
2350 Defines 108;
2351 ContainsClassifier;
2352 Imports 9;
2353 Imports 11;
2354 Imports 184;
2355 Extends;
2356 HasType;
2357 DeclaresField;
2358 HasType;
2359 DeclaresMethod;
2360 HasType;
2361 DeclaresMethod;
2362 HasType;
2363 HasParam;
2364 HasType;
2365 DeclaresMethod;
2366 HasType;
2367 DeclaresMethod;
2368 HasType;
2369 DeclaresMethod;
2370 HasType;
2371 HasParam;
2372 HasType;
2373 DeclaresMethod;
2374 HasType;
2375 DeclaresMethod;
2376 Defines 75;
2377 ContainsClassifier;
2378 Imports 9;
2379 Extends;
2380 Extends;
2381 HasType;
2382 DeclaresField;
2383 HasType;
2384 DeclaresMethod;
2385 HasType;
2386 DeclaresMethod;
2387 HasType;
2388 DeclaresMethod;
2389 HasType;
2390 DeclaresMethod;
2391 HasType;
2392 DeclaresMethod;
2393 HasType;
2394 DeclaresMethod;
2395 HasType;
2396 DeclaresMethod;
2397 HasType;
2398 DeclaresMethod;
2399 HasType;
2400 DeclaresMethod;
2401 HasType;
2402 DeclaresMethod;
2403 HasType;
2404 DeclaresMethod;
2405 HasType;
2406 HasParam;
2407 HasType;
2408 DeclaresMethod;
2409 HasType;
2410 HasParam;
2411 HasUpperBound;
2412 HasGenericType;
2413 HasTypeArg;
2414 HasType;
2415 DeclaresMethod;
2416 HasType;
2417 DeclaresMethod;
2418 HasType;
2419 HasParam;
2420 HasBound;
2421 HasTypeParam;
2422 HasGenericType;
2423 HasTypeArg;
2424 HasType;
2425 DeclaresMethod;
2426 HasBound;
2427 HasTypeParam;
2428 HasGenericType;
2429 HasTypeArg;
2430 HasType;
2431 DeclaresMethod;
2432 HasGenericType;
2433 HasTypeArg;
2434 HasType;
2435 HasParam;
2436 HasType;
2437 DeclaresMethod;
2438 HasType;
2439 HasParam;
2440 HasUpperBound;
2441 HasGenericType;
2442 HasTypeArg;
2443 HasType;
2444 DeclaresMethod;
2445 HasType;
2446 DeclaresMethod;
2447 HasType;
2448 HasParam;
2449 HasBound;
2450 HasTypeParam;
2451 HasGenericType;
2452 HasTypeArg;
2453 HasType;
2454 DeclaresMethod;
2455 HasBound;
2456 HasTypeParam;
2457 HasGenericType;
2458 HasTypeArg;
2459 HasType;
2460 DeclaresMethod;
2461 HasGenericType;
2462 HasTypeArg;
2463 HasType;
2464 HasParam;
2465 HasType;
2466 DeclaresMethod;
2467 HasType;
2468 HasParam;
2469 HasUpperBound;
2470 HasGenericType;
2471 HasTypeArg;
2472 HasType;
2473 DeclaresMethod;
2474 HasType;
2475 DeclaresMethod;
2476 HasType;
2477 HasParam;
2478 HasBound;
2479 HasTypeParam;
2480 HasGenericType;
2481 HasTypeArg;
2482 HasType;
2483 DeclaresMethod;
2484 HasBound;
2485 HasTypeParam;
2486 HasGenericType;
2487 HasTypeArg;
2488 HasType;
2489 DeclaresMethod;
2490 HasGenericType;
2491 HasTypeArg;
2492 HasType;
2493 HasParam;
2494 HasType;
2495 DeclaresMethod;
2496 HasType;
2497 HasParam;
2498 HasUpperBound;
2499 HasGenericType;
2500 HasTypeArg;
2501 HasType;
2502 DeclaresMethod;
2503 HasType;
2504 DeclaresMethod;
2505 HasType;
2506 HasParam;
2507 HasType;
2508 DeclaresMethod;
2509 HasType;
2510 DeclaresMethod;
2511 HasType;
2512 HasParam;
2513 HasUpperBound;
2514 HasGenericType;
2515 HasTypeArg;
2516 HasType;
2517 DeclaresMethod;
2518 HasType;
2519 DeclaresMethod;
2520 HasType;
2521 HasParam;
2522 HasBound;
2523 HasTypeParam;
2524 HasGenericType;
2525 HasTypeArg;
2526 HasType;
2527 DeclaresMethod;
2528 HasBound;
2529 HasTypeParam;
2530 HasGenericType;
2531 HasTypeArg;
2532 HasType;
2533 DeclaresMethod;
2534 HasGenericType;
2535 HasTypeArg;
2536 HasType;
2537 HasParam;
2538 HasType;
2539 DeclaresMethod;
2540 HasType;
2541 HasParam;
2542 HasUpperBound;
2543 HasGenericType;
2544 HasTypeArg;
2545 HasType;
2546 DeclaresMethod;
2547 HasType;
2548 DeclaresMethod;
2549 HasType;
2550 HasParam;
2551 HasBound;
2552 HasTypeParam;
2553 HasGenericType;
2554 HasTypeArg;
2555 HasType;
2556 DeclaresMethod;
2557 HasBound;
2558 HasTypeParam;
2559 HasGenericType;
2560 HasTypeArg;
2561 HasType;
2562 DeclaresMethod;
2563 HasGenericType;
2564 HasTypeArg;
2565 HasType;
2566 HasParam;
2567 HasType;
2568 DeclaresMethod;
2569 HasType;
2570 HasParam;
2571 HasUpperBound;
2572 HasGenericType;
2573 HasTypeArg;
2574 HasType;
2575 DeclaresMethod;
2576 HasType;
2577 DeclaresMethod;
2578 HasType;
2579 HasParam;
2580 HasBound;
2581 HasTypeParam;
2582 HasGenericType;
2583 HasTypeArg;
2584 HasType;
2585 DeclaresMethod;
2586 HasBound;
2587 HasTypeParam;
2588 HasGenericType;
2589 HasTypeArg;
2590 HasType;
2591 DeclaresMethod;
2592 HasGenericType;
2593 HasTypeArg;
2594 HasType;
2595 HasParam;
2596 HasType;
2597 DeclaresMethod;
2598 HasType;
2599 HasParam;
2600 HasUpperBound;
2601 HasGenericType;
2602 HasTypeArg;
2603 HasType;
2604 DeclaresMethod;
2605 HasType;
2606 DeclaresMethod;
2607 HasType;
2608 HasParam;
2609 HasBound;
2610 HasTypeParam;
2611 HasGenericType;
2612 HasTypeArg;
2613 HasType;
2614 DeclaresMethod;
2615 HasBound;
2616 HasTypeParam;
2617 HasGenericType;
2618 HasTypeArg;
2619 HasType;
2620 DeclaresMethod;
2621 HasGenericType;
2622 HasTypeArg;
2623 HasType;
2624 HasParam;
2625 HasType;
2626 DeclaresMethod;
2627 HasType;
2628 HasParam;
2629 HasUpperBound;
2630 HasGenericType;
2631 HasTypeArg;
2632 HasType;
2633 DeclaresMethod;
2634 HasType;
2635 DeclaresMethod;
2636 HasType;
2637 HasParam;
2638 HasType;
2639 DeclaresMethod;
2640 HasType;
2641 DeclaresMethod;
2642 HasType;
2643 HasParam;
2644 HasUpperBound;
2645 HasGenericType;
2646 HasTypeArg;
2647 HasType;
2648 DeclaresMethod;
2649 HasType;
2650 DeclaresMethod;
2651 HasType;
2652 HasParam;
2653 HasBound;
2654 HasTypeParam;
2655 HasGenericType;
2656 HasTypeArg;
2657 HasType;
2658 DeclaresMethod;
2659 HasBound;
2660 HasTypeParam;
2661 HasGenericType;
2662 HasTypeArg;
2663 HasType;
2664 DeclaresMethod;
2665 HasGenericType;
2666 HasTypeArg;
2667 HasType;
2668 HasParam;
2669 HasType;
2670 DeclaresMethod;
2671 HasType;
2672 HasParam;
2673 HasUpperBound;
2674 HasGenericType;
2675 HasTypeArg;
2676 HasType;
2677 DeclaresMethod;
2678 HasType;
2679 DeclaresMethod;
2680 HasType;
2681 HasParam;
2682 HasBound;
2683 HasTypeParam;
2684 HasGenericType;
2685 HasTypeArg;
2686 HasType;
2687 DeclaresMethod;
2688 HasBound;
2689 HasTypeParam;
2690 HasGenericType;
2691 HasTypeArg;
2692 HasType;
2693 DeclaresMethod;
2694 HasGenericType;
2695 HasTypeArg;
2696 HasType;
2697 HasParam;
2698 HasType;
2699 DeclaresMethod;
2700 HasType;
2701 HasParam;
2702 HasUpperBound;
2703 HasGenericType;
2704 HasTypeArg;
2705 HasType;
2706 DeclaresMethod;
2707 HasType;
2708 DeclaresMethod;
2709 HasType;
2710 HasParam;
2711 HasBound;
2712 HasTypeParam;
2713 HasGenericType;
2714 HasTypeArg;
2715 HasType;
2716 DeclaresMethod;
2717 HasBound;
2718 HasTypeParam;
2719 HasGenericType;
2720 HasTypeArg;
2721 HasType;
2722 DeclaresMethod;
2723 HasGenericType;
2724 HasTypeArg;
2725 HasType;
2726 HasParam;
2727 HasType;
2728 DeclaresMethod;
2729 HasType;
2730 HasParam;
2731 HasUpperBound;
2732 HasGenericType;
2733 HasTypeArg;
2734 HasType;
2735 DeclaresMethod;
2736 HasType;
2737 DeclaresMethod;
2738 HasType;
2739 HasParam;
2740 HasType;
2741 DeclaresMethod;
2742 HasType;
2743 DeclaresMethod;
2744 HasType;
2745 HasParam;
2746 HasUpperBound;
2747 HasGenericType;
2748 HasTypeArg;
2749 HasType;
2750 DeclaresMethod;
2751 HasType;
2752 DeclaresMethod;
2753 HasType;
2754 HasParam;
2755 HasBound;
2756 HasTypeParam;
2757 HasGenericType;
2758 HasTypeArg;
2759 HasType;
2760 DeclaresMethod;
2761 HasBound;
2762 HasTypeParam;
2763 HasGenericType;
2764 HasTypeArg;
2765 HasType;
2766 DeclaresMethod;
2767 HasGenericType;
2768 HasTypeArg;
2769 HasType;
2770 HasParam;
2771 HasType;
2772 DeclaresMethod;
2773 HasType;
2774 HasParam;
2775 HasUpperBound;
2776 HasGenericType;
2777 HasTypeArg;
2778 HasType;
2779 DeclaresMethod;
2780 HasType;
2781 DeclaresMethod;
2782 HasType;
2783 HasParam;
2784 HasBound;
2785 HasTypeParam;
2786 HasGenericType;
2787 HasTypeArg;
2788 HasType;
2789 DeclaresMethod;
2790 HasBound;
2791 HasTypeParam;
2792 HasGenericType;
2793 HasTypeArg;
2794 HasType;
2795 DeclaresMethod;
2796 HasGenericType;
2797 HasTypeArg;
2798 HasType;
2799 HasParam;
2800 HasGenericType;
2801 HasTypeArg;
2802 HasType;
2803 DeclaresMethod;
2804 HasGenericType;
2805 HasTypeArg;
2806 HasType;
2807 DeclaresMethod;
2808 HasType;
2809 HasParam;
2810 Defines 11;
2811 ContainsClassifier;
2812 Imports 9;
2813 Extends;
2814 Extends;
2815 HasType;
2816 DeclaresField;
2817 HasType;
2818 DeclaresMethod;
2819 HasType;
2820 DeclaresMethod;
2821 HasType;
2822 DeclaresMethod;
2823 HasType;
2824 DeclaresMethod;
2825 HasType;
2826 DeclaresMethod;
2827 HasType;
2828 HasParam;
2829 HasType;
2830 DeclaresMethod;
2831 HasType;
2832 HasParam;
2833 HasUpperBound;
2834 HasGenericType;
2835 HasTypeArg;
2836 HasType;
2837 DeclaresMethod;
2838 HasType;
2839 DeclaresMethod;
2840 HasType;
2841 HasParam;
2842 HasBound;
2843 HasTypeParam;
2844 HasGenericType;
2845 HasTypeArg;
2846 HasType;
2847 DeclaresMethod;
2848 HasBound;
2849 HasTypeParam;
2850 HasGenericType;
2851 HasTypeArg;
2852 HasType;
2853 DeclaresMethod;
2854 HasGenericType;
2855 HasTypeArg;
2856 HasType;
2857 HasParam;
2858 HasType;
2859 DeclaresMethod;
2860 HasType;
2861 HasParam;
2862 HasUpperBound;
2863 HasGenericType;
2864 HasTypeArg;
2865 HasType;
2866 DeclaresMethod;
2867 HasType;
2868 DeclaresMethod;
2869 HasType;
2870 HasParam;
2871 HasType;
2872 DeclaresMethod;
2873 HasGenericType;
2874 HasTypeArg;
2875 HasType;
2876 DeclaresMethod;
2877 HasGenericType;
2878 HasTypeArg;
2879 HasType;
2880 DeclaresMethod;
2881 HasType;
2882 HasParam;
2883 Defines 12;
2884 ContainsClassifier;
2885 Imports 9;
2886 Imports 11;
2887 Imports 327;
2888 Extends;
2889 HasType;
2890 DeclaresField;
2891 HasType;
2892 DeclaresMethod;
2893 HasType;
2894 DeclaresMethod;
2895 HasType;
2896 DeclaresMethod;
2897 HasType;
2898 HasParam;
2899 HasType;
2900 DeclaresMethod;
2901 HasType;
2902 DeclaresMethod;
2903 Defines 64;
2904 ContainsClassifier;
2905 Imports 9;
2906 Extends;
2907 Extends;
2908 Extends;
2909 HasType;
2910 DeclaresField;
2911 HasType;
2912 DeclaresMethod;
2913 HasType;
2914 DeclaresMethod;
2915 HasType;
2916 DeclaresMethod;
2917 HasType;
2918 DeclaresMethod;
2919 HasType;
2920 DeclaresMethod;
2921 HasType;
2922 DeclaresMethod;
2923 HasType;
2924 DeclaresMethod;
2925 HasType;
2926 HasParam;
2927 HasType;
2928 DeclaresMethod;
2929 HasType;
2930 HasParam;
2931 HasUpperBound;
2932 HasGenericType;
2933 HasTypeArg;
2934 HasType;
2935 DeclaresMethod;
2936 HasType;
2937 DeclaresMethod;
2938 HasType;
2939 HasParam;
2940 HasBound;
2941 HasTypeParam;
2942 HasGenericType;
2943 HasTypeArg;
2944 HasType;
2945 DeclaresMethod;
2946 HasBound;
2947 HasTypeParam;
2948 HasGenericType;
2949 HasTypeArg;
2950 HasType;
2951 DeclaresMethod;
2952 HasGenericType;
2953 HasTypeArg;
2954 HasType;
2955 HasParam;
2956 HasType;
2957 DeclaresMethod;
2958 HasType;
2959 HasParam;
2960 HasUpperBound;
2961 HasGenericType;
2962 HasTypeArg;
2963 HasType;
2964 DeclaresMethod;
2965 HasType;
2966 DeclaresMethod;
2967 HasType;
2968 HasParam;
2969 HasType;
2970 DeclaresMethod;
2971 HasType;
2972 DeclaresMethod;
2973 HasType;
2974 HasParam;
2975 HasUpperBound;
2976 HasGenericType;
2977 HasTypeArg;
2978 HasType;
2979 DeclaresMethod;
2980 HasType;
2981 DeclaresMethod;
2982 HasType;
2983 HasParam;
2984 HasType;
2985 DeclaresMethod;
2986 HasGenericType;
2987 HasTypeArg;
2988 HasType;
2989 DeclaresMethod;
2990 HasGenericType;
2991 HasTypeArg;
2992 HasType;
2993 DeclaresMethod;
2994 HasType;
2995 HasParam;
2996 Defines 213;
2997 ContainsClassifier;
2998 Imports 9;
2999 Imports 11;
3000 Imports 356;
3001 Extends;
3002 HasType;
3003 DeclaresField;
3004 HasType;
3005 DeclaresMethod;
3006 HasType;
3007 DeclaresMethod;
3008 HasType;
3009 DeclaresMethod;
3010 HasType;
3011 HasParam;
3012 HasType;
3013 DeclaresMethod;
3014 HasType;
3015 DeclaresMethod;
3016 Defines 20;
3017 ContainsClassifier;
3018 Imports 9;
3019 Imports 470;
3020 Imports 11;
3021 Extends;
3022 HasType;
3023 DeclaresField;
3024 HasType;
3025 DeclaresMethod;
3026 HasType;
3027 DeclaresMethod;
3028 HasType;
3029 DeclaresMethod;
3030 HasType;
3031 HasParam;
3032 HasType;
3033 DeclaresMethod;
3034 HasType;
3035 DeclaresMethod;
3036 Defines 470;
3037 ContainsClassifier;
3038 Imports 9;
3039 Imports 327;
3040 Imports 12;
3041 Extends;
3042 HasType;
3043 DeclaresField;
3044 HasType;
3045 DeclaresMethod;
3046 HasType;
3047 DeclaresMethod;
3048 HasType;
3049 DeclaresMethod;
3050 HasType;
3051 HasParam;
3052 HasType;
3053 DeclaresMethod;
3054 HasType;
3055 DeclaresMethod;
3056 Defines 58;
3057 ContainsClassifier;
3058 Imports 9;
3059 Imports 11;
3060 Imports 12;
3061 Extends;
3062 HasType;
3063 DeclaresField;
3064 HasType;
3065 DeclaresMethod;
3066 HasType;
3067 DeclaresMethod;
3068 HasType;
3069 DeclaresMethod;
3070 HasType;
3071 HasParam;
3072 HasType;
3073 DeclaresMethod;
3074 HasType;
3075 DeclaresMethod;
3076 Defines 20;
3077 ContainsClassifier;
3078 Imports 9;
3079 Imports 11;
3080 Imports 120;
3081 Extends;
3082 HasType;
3083 DeclaresField;
3084 HasType;
3085 DeclaresMethod;
3086 HasType;
3087 DeclaresMethod;
3088 HasType;
3089 DeclaresMethod;
3090 HasType;
3091 HasParam;
3092 HasType;
3093 DeclaresMethod;
3094 HasType;
3095 DeclaresMethod;
3096 Defines 120;
3097 ContainsClassifier;
3098 Imports 9;
3099 Imports 11;
3100 Imports 11;
3101 Extends;
3102 HasType;
3103 DeclaresField;
3104 HasType;
3105 DeclaresMethod;
3106 HasType;
3107 DeclaresMethod;
3108 HasType;
3109 DeclaresMethod;
3110 HasType;
3111 HasParam;
3112 HasType;
3113 DeclaresMethod;
3114 HasType;
3115 DeclaresMethod;
3116 Defines 113;
3117 ContainsClassifier;
3118 Imports 9;
3119 Imports 12;
3120 Imports 11;
3121 Extends;
3122 HasType;
3123 DeclaresField;
3124 HasType;
3125 DeclaresMethod;
3126 HasType;
3127 DeclaresMethod;
3128 HasType;
3129 DeclaresMethod;
3130 HasType;
3131 HasParam;
3132 HasType;
3133 DeclaresMethod;
3134 HasType;
3135 DeclaresMethod;
3136 Defines 20;
3137 ContainsClassifier;
3138 Imports 9;
3139 Imports 356;
3140 Imports 11;
3141 Extends;
3142 HasType;
3143 DeclaresField;
3144 HasType;
3145 DeclaresMethod;
3146 HasType;
3147 DeclaresMethod;
3148 HasType;
3149 DeclaresMethod;
3150 HasType;
3151 HasParam;
3152 HasType;
3153 DeclaresMethod;
3154 HasType;
3155 DeclaresMethod;
3156 Defines 356;
3157 ContainsClassifier;
3158 Imports 9;
3159 Imports 11;
3160 Imports 12;
3161 Extends;
3162 HasType;
3163 DeclaresField;
3164 HasType;
3165 DeclaresMethod;
3166 HasType;
3167 DeclaresMethod;
3168 HasType;
3169 DeclaresMethod;
3170 HasType;
3171 HasParam;
3172 HasType;
3173 DeclaresMethod;
3174 HasType;
3175 DeclaresMethod;
3176 Defines 20;
3177 ContainsClassifier;
3178 Imports 9;
3179 Imports 11;
3180 Imports 327;
3181 Extends;
3182 HasType;
3183 DeclaresField;
3184 HasType;
3185 DeclaresMethod;
3186 HasType;
3187 DeclaresMethod;
3188 HasType;
3189 DeclaresMethod;
3190 HasType;
3191 HasParam;
3192 HasType;
3193 DeclaresMethod;
3194 HasType;
3195 DeclaresMethod;
3196 Defines 86;
3197 ContainsClassifier;
3198 Imports 9;
3199 Imports 33;
3200 Imports 184;
3201 Extends;
3202 HasType;
3203 DeclaresField;
3204 HasType;
3205 DeclaresMethod;
3206 HasType;
3207 DeclaresMethod;
3208 HasType;
3209 HasParam;
3210 HasType;
3211 DeclaresMethod;
3212 HasType;
3213 DeclaresMethod;
3214 HasType;
3215 DeclaresMethod;
3216 HasType;
3217 HasParam;
3218 HasType;
3219 DeclaresMethod;
3220 HasType;
3221 DeclaresMethod;
3222 Defines 184;
3223 ContainsClassifier;
3224 Extends;
3225 Extends;
3226 HasType;
3227 DeclaresField;
3228 HasType;
3229 DeclaresMethod;
3230 HasType;
3231 DeclaresMethod;
3232 HasType;
3233 DeclaresMethod;
3234 HasType;
3235 DeclaresMethod;
3236 HasType;
3237 DeclaresMethod;
3238 HasType;
3239 DeclaresMethod;
3240 HasType;
3241 DeclaresMethod;
3242 HasType;
3243 DeclaresMethod;
3244 HasType;
3245 DeclaresMethod;
3246 HasType;
3247 DeclaresMethod;
3248 HasType;
3249 HasParam;
3250 HasUpperBound;
3251 HasGenericType;
3252 HasTypeArg;
3253 HasType;
3254 DeclaresMethod;
3255 HasType;
3256 DeclaresMethod;
3257 HasType;
3258 HasParam;
3259 HasBound;
3260 HasTypeParam;
3261 HasGenericType;
3262 HasTypeArg;
3263 HasType;
3264 DeclaresMethod;
3265 HasBound;
3266 HasTypeParam;
3267 HasGenericType;
3268 HasTypeArg;
3269 HasType;
3270 DeclaresMethod;
3271 HasGenericType;
3272 HasTypeArg;
3273 HasType;
3274 HasParam;
3275 HasType;
3276 DeclaresMethod;
3277 HasType;
3278 HasParam;
3279 HasUpperBound;
3280 HasGenericType;
3281 HasTypeArg;
3282 HasType;
3283 DeclaresMethod;
3284 HasType;
3285 DeclaresMethod;
3286 HasType;
3287 HasParam;
3288 HasBound;
3289 HasTypeParam;
3290 HasGenericType;
3291 HasTypeArg;
3292 HasType;
3293 DeclaresMethod;
3294 HasBound;
3295 HasTypeParam;
3296 HasGenericType;
3297 HasTypeArg;
3298 HasType;
3299 DeclaresMethod;
3300 HasGenericType;
3301 HasTypeArg;
3302 HasType;
3303 HasParam;
3304 HasType;
3305 DeclaresMethod;
3306 HasType;
3307 HasParam;
3308 HasUpperBound;
3309 HasGenericType;
3310 HasTypeArg;
3311 HasType;
3312 DeclaresMethod;
3313 HasType;
3314 DeclaresMethod;
3315 HasType;
3316 HasParam;
3317 HasBound;
3318 HasTypeParam;
3319 HasGenericType;
3320 HasTypeArg;
3321 HasType;
3322 DeclaresMethod;
3323 HasBound;
3324 HasTypeParam;
3325 HasGenericType;
3326 HasTypeArg;
3327 HasType;
3328 DeclaresMethod;
3329 HasGenericType;
3330 HasTypeArg;
3331 HasType;
3332 HasParam;
3333 HasType;
3334 DeclaresMethod;
3335 HasType;
3336 HasParam;
3337 HasUpperBound;
3338 HasGenericType;
3339 HasTypeArg;
3340 HasType;
3341 DeclaresMethod;
3342 HasType;
3343 DeclaresMethod;
3344 HasType;
3345 HasParam;
3346 HasType;
3347 DeclaresMethod;
3348 HasType;
3349 DeclaresMethod;
3350 HasType;
3351 HasParam;
3352 HasUpperBound;
3353 HasGenericType;
3354 HasTypeArg;
3355 HasType;
3356 DeclaresMethod;
3357 HasType;
3358 DeclaresMethod;
3359 HasType;
3360 HasParam;
3361 HasBound;
3362 HasTypeParam;
3363 HasGenericType;
3364 HasTypeArg;
3365 HasType;
3366 DeclaresMethod;
3367 HasBound;
3368 HasTypeParam;
3369 HasGenericType;
3370 HasTypeArg;
3371 HasType;
3372 DeclaresMethod;
3373 HasGenericType;
3374 HasTypeArg;
3375 HasType;
3376 HasParam;
3377 HasType;
3378 DeclaresMethod;
3379 HasType;
3380 HasParam;
3381 HasUpperBound;
3382 HasGenericType;
3383 HasTypeArg;
3384 HasType;
3385 DeclaresMethod;
3386 HasType;
3387 DeclaresMethod;
3388 HasType;
3389 HasParam;
3390 HasBound;
3391 HasTypeParam;
3392 HasGenericType;
3393 HasTypeArg;
3394 HasType;
3395 DeclaresMethod;
3396 HasBound;
3397 HasTypeParam;
3398 HasGenericType;
3399 HasTypeArg;
3400 HasType;
3401 DeclaresMethod;
3402 HasGenericType;
3403 HasTypeArg;
3404 HasType;
3405 HasParam;
3406 HasType;
3407 DeclaresMethod;
3408 HasType;
3409 HasParam;
3410 HasUpperBound;
3411 HasGenericType;
3412 HasTypeArg;
3413 HasType;
3414 DeclaresMethod;
3415 HasType;
3416 DeclaresMethod;
3417 HasType;
3418 HasParam;
3419 HasBound;
3420 HasTypeParam;
3421 HasGenericType;
3422 HasTypeArg;
3423 HasType;
3424 DeclaresMethod;
3425 HasBound;
3426 HasTypeParam;
3427 HasGenericType;
3428 HasTypeArg;
3429 HasType;
3430 DeclaresMethod;
3431 HasGenericType;
3432 HasTypeArg;
3433 HasType;
3434 HasParam;
3435 HasType;
3436 DeclaresMethod;
3437 HasType;
3438 HasParam;
3439 HasUpperBound;
3440 HasGenericType;
3441 HasTypeArg;
3442 HasType;
3443 DeclaresMethod;
3444 HasType;
3445 DeclaresMethod;
3446 HasType;
3447 HasParam;
3448 HasBound;
3449 HasTypeParam;
3450 HasGenericType;
3451 HasTypeArg;
3452 HasType;
3453 DeclaresMethod;
3454 HasBound;
3455 HasTypeParam;
3456 HasGenericType;
3457 HasTypeArg;
3458 HasType;
3459 DeclaresMethod;
3460 HasGenericType;
3461 HasTypeArg;
3462 HasType;
3463 HasParam;
3464 HasType;
3465 DeclaresMethod;
3466 HasType;
3467 HasParam;
3468 HasUpperBound;
3469 HasGenericType;
3470 HasTypeArg;
3471 HasType;
3472 DeclaresMethod;
3473 HasType;
3474 DeclaresMethod;
3475 HasType;
3476 HasParam;
3477 HasType;
3478 DeclaresMethod;
3479 HasType;
3480 DeclaresMethod;
3481 HasType;
3482 HasParam;
3483 HasUpperBound;
3484 HasGenericType;
3485 HasTypeArg;
3486 HasType;
3487 DeclaresMethod;
3488 HasType;
3489 DeclaresMethod;
3490 HasType;
3491 HasParam;
3492 HasBound;
3493 HasTypeParam;
3494 HasGenericType;
3495 HasTypeArg;
3496 HasType;
3497 DeclaresMethod;
3498 HasBound;
3499 HasTypeParam;
3500 HasGenericType;
3501 HasTypeArg;
3502 HasType;
3503 DeclaresMethod;
3504 HasGenericType;
3505 HasTypeArg;
3506 HasType;
3507 HasParam;
3508 HasType;
3509 DeclaresMethod;
3510 HasType;
3511 HasParam;
3512 HasUpperBound;
3513 HasGenericType;
3514 HasTypeArg;
3515 HasType;
3516 DeclaresMethod;
3517 HasType;
3518 DeclaresMethod;
3519 HasType;
3520 HasParam;
3521 HasBound;
3522 HasTypeParam;
3523 HasGenericType;
3524 HasTypeArg;
3525 HasType;
3526 DeclaresMethod;
3527 HasBound;
3528 HasTypeParam;
3529 HasGenericType;
3530 HasTypeArg;
3531 HasType;
3532 DeclaresMethod;
3533 HasGenericType;
3534 HasTypeArg;
3535 HasType;
3536 HasParam;
3537 HasType;
3538 DeclaresMethod;
3539 HasType;
3540 HasParam;
3541 HasUpperBound;
3542 HasGenericType;
3543 HasTypeArg;
3544 HasType;
3545 DeclaresMethod;
3546 HasType;
3547 DeclaresMethod;
3548 HasType;
3549 HasParam;
3550 HasBound;
3551 HasTypeParam;
3552 HasGenericType;
3553 HasTypeArg;
3554 HasType;
3555 DeclaresMethod;
3556 HasBound;
3557 HasTypeParam;
3558 HasGenericType;
3559 HasTypeArg;
3560 HasType;
3561 DeclaresMethod;
3562 HasGenericType;
3563 HasTypeArg;
3564 HasType;
3565 HasParam;
3566 HasType;
3567 DeclaresMethod;
3568 HasType;
3569 HasParam;
3570 HasUpperBound;
3571 HasGenericType;
3572 HasTypeArg;
3573 HasType;
3574 DeclaresMethod;
3575 HasType;
3576 DeclaresMethod;
3577 HasType;
3578 HasParam;
3579 HasType;
3580 DeclaresMethod;
3581 HasType;
3582 DeclaresMethod;
3583 HasType;
3584 HasParam;
3585 HasUpperBound;
3586 HasGenericType;
3587 HasTypeArg;
3588 HasType;
3589 DeclaresMethod;
3590 HasType;
3591 DeclaresMethod;
3592 HasType;
3593 HasParam;
3594 HasBound;
3595 HasTypeParam;
3596 HasGenericType;
3597 HasTypeArg;
3598 HasType;
3599 DeclaresMethod;
3600 HasBound;
3601 HasTypeParam;
3602 HasGenericType;
3603 HasTypeArg;
3604 HasType;
3605 DeclaresMethod;
3606 HasGenericType;
3607 HasTypeArg;
3608 HasType;
3609 HasParam;
3610 Defines 9;
3611 ContainsClassifier;
3612 Extends;
3613 HasType;
3614 DeclaresField;
3615 HasType;
3616 DeclaresMethod;
3617 HasType;
3618 DeclaresMethod;
3619 HasType;
3620 DeclaresMethod;
3621 HasType;
3622 DeclaresMethod;
3623 HasType;
3624 DeclaresMethod;
3625 HasType;
3626 DeclaresMethod;
3627 HasType;
3628 DeclaresMethod;
3629 HasType;
3630 DeclaresMethod;
3631 HasType;
3632 DeclaresMethod;
3633 HasType;
3634 DeclaresMethod;
3635 HasType;
3636 DeclaresMethod;
3637 HasType;
3638 DeclaresMethod;
3639 HasType;
3640 DeclaresMethod;
3641 HasType;
3642 DeclaresMethod;
3643 HasType;
3644 HasParam;
3645 HasType;
3646 HasParam;
3647 HasType;
3648 DeclaresMethod;
3649 HasType;
3650 DeclaresMethod;
3651 HasType;
3652 HasParam;
3653 HasType;
3654 HasParam;
3655 HasType;
3656 DeclaresMethod;
3657 HasType;
3658 DeclaresMethod;
3659 HasType;
3660 DeclaresMethod;
3661 HasType;
3662 HasParam;
3663 HasType;
3664 HasParam;
3665 HasType;
3666 DeclaresMethod;
3667 HasType;
3668 DeclaresMethod;
3669 HasType;
3670 HasParam;
3671 HasType;
3672 HasParam;
3673 HasType;
3674 DeclaresMethod;
3675 HasType;
3676 DeclaresMethod;
3677 HasType;
3678 HasParam;
3679 HasType;
3680 HasParam;
3681 HasType;
3682 DeclaresMethod;
3683 HasType;
3684 DeclaresMethod;
3685 HasType;
3686 HasParam;
3687 HasType;
3688 HasParam;
3689 HasType;
3690 DeclaresMethod;
3691 HasType;
3692 DeclaresMethod;
3693 HasType;
3694 HasParam;
3695 HasType;
3696 HasParam;
3697 HasType;
3698 DeclaresMethod;
3699 HasType;
3700 DeclaresMethod;
3701 HasType;
3702 HasParam;
3703 HasType;
3704 HasParam;
3705 HasType;
3706 DeclaresMethod;
3707 HasType;
3708 DeclaresMethod;
3709 HasType;
3710 HasParam;
3711 HasType;
3712 HasParam;
3713 HasType;
3714 DeclaresMethod;
3715 HasType;
3716 DeclaresMethod;
3717 HasType;
3718 DeclaresMethod;
3719 HasType;
3720 DeclaresMethod;
3721 HasType;
3722 DeclaresMethod;
3723 HasType;
3724 DeclaresMethod;
3725 HasType;
3726 HasParam;
3727 HasType;
3728 HasParam;
3729 HasType;
3730 DeclaresMethod;
3731 HasType;
3732 DeclaresMethod;
3733 HasType;
3734 DeclaresMethod;
3735 HasType;
3736 DeclaresMethod;
3737 HasType;
3738 HasParam;
3739 HasType;
3740 HasParam;
3741 HasType;
3742 DeclaresMethod;
3743 HasType;
3744 DeclaresMethod;
3745 HasType;
3746 HasParam;
3747 HasType;
3748 HasParam;
3749 HasType;
3750 DeclaresMethod;
3751 HasType;
3752 DeclaresMethod;
3753 HasType;
3754 HasParam;
3755 HasType;
3756 HasParam;
3757 HasType;
3758 DeclaresMethod;
3759 HasType;
3760 DeclaresMethod;
3761 HasType;
3762 HasParam;
3763 HasType;
3764 HasParam;
3765 HasType;
3766 DeclaresMethod;
3767 HasType;
3768 DeclaresMethod;
3769 HasType;
3770 HasParam;
3771 HasType;
3772 HasParam;
3773 HasType;
3774 DeclaresMethod;
3775 HasType;
3776 DeclaresMethod;
3777 HasType;
3778 HasParam;
3779 HasType;
3780 HasParam;
3781 HasType;
3782 DeclaresMethod;
3783 HasType;
3784 DeclaresMethod;
3785 HasType;
3786 HasParam;
3787 HasType;
3788 HasParam;
3789 HasType;
3790 DeclaresMethod;
3791 HasType;
3792 DeclaresMethod;
3793 HasType;
3794 HasParam;
3795 HasType;
3796 HasParam;
3797 HasType;
3798 DeclaresMethod;
3799 HasType;
3800 DeclaresMethod;
3801 HasType;
3802 HasParam;
3803 HasType;
3804 HasParam;
3805 HasType;
3806 DeclaresMethod;
3807 HasType;
3808 DeclaresMethod;
3809 HasType;
3810 HasParam;
3811 HasType;
3812 HasParam;
3813 HasType;
3814 DeclaresMethod;
3815 HasType;
3816 DeclaresMethod;
3817 HasType;
3818 HasParam;
3819 HasType;
3820 HasParam;
3821 HasType;
3822 DeclaresMethod;
3823 HasType;
3824 DeclaresMethod;
3825 HasType;
3826 DeclaresMethod;
3827 HasType;
3828 DeclaresMethod;
3829 HasType;
3830 DeclaresMethod;
3831 HasType;
3832 DeclaresMethod;
3833 HasType;
3834 DeclaresMethod;
3835 HasType;
3836 DeclaresMethod;
3837 HasType;
3838 DeclaresMethod;
3839 HasType;
3840 DeclaresMethod;
3841 HasType;
3842 DeclaresMethod;
3843 HasType;
3844 DeclaresMethod;
3845 HasType;
3846 DeclaresMethod;
3847 HasType;
3848 DeclaresMethod;
3849 HasType;
3850 DeclaresMethod;
3851 HasType;
3852 DeclaresMethod;
3853 HasType;
3854 DeclaresMethod;
3855 HasType;
3856 DeclaresMethod;
3857 HasType;
3858 DeclaresMethod;
3859 HasType;
3860 DeclaresMethod;
3861 HasType;
3862 DeclaresMethod;
3863 HasType;
3864 HasParam;
3865 HasType;
3866 HasParam;
3867 HasType;
3868 DeclaresMethod;
3869 HasType;
3870 DeclaresMethod;
3871 HasType;
3872 DeclaresMethod;
3873 HasType;
3874 DeclaresMethod;
3875 HasType;
3876 DeclaresMethod;
3877 HasType;
3878 DeclaresMethod;
3879 HasType;
3880 DeclaresMethod;
3881 HasGenericType;
3882 HasTypeArg;
3883 HasType;
3884 DeclaresMethod;
3885 HasGenericType;
3886 HasTypeArg;
3887 HasType;
3888 DeclaresMethod;
3889 HasGenericType;
3890 HasTypeArg;
3891 HasType;
3892 DeclaresMethod;
3893 HasGenericType;
3894 HasTypeArg;
3895 HasType;
3896 DeclaresMethod;
3897 HasGenericType;
3898 HasTypeArg;
3899 HasType;
3900 DeclaresMethod;
3901 HasGenericType;
3902 HasTypeArg;
3903 HasType;
3904 DeclaresMethod;
3905 HasGenericType;
3906 HasTypeArg;
3907 HasType;
3908 DeclaresMethod;
3909 HasGenericType;
3910 HasTypeArg;
3911 HasType;
3912 DeclaresMethod;
3913 HasGenericType;
3914 HasTypeArg;
3915 HasType;
3916 DeclaresMethod;
3917 HasGenericType;
3918 HasTypeArg;
3919 HasType;
3920 DeclaresMethod;
3921 HasGenericType;
3922 HasTypeArg;
3923 HasType;
3924 DeclaresMethod;
3925 HasGenericType;
3926 HasTypeArg;
3927 HasType;
3928 DeclaresMethod;
3929 HasGenericType;
3930 HasTypeArg;
3931 HasType;
3932 DeclaresMethod;
3933 HasGenericType;
3934 HasTypeArg;
3935 HasType;
3936 DeclaresMethod;
3937 HasGenericType;
3938 HasTypeArg;
3939 HasType;
3940 DeclaresMethod;
3941 HasGenericType;
3942 HasTypeArg;
3943 HasType;
3944 DeclaresMethod;
3945 HasGenericType;
3946 HasTypeArg;
3947 HasType;
3948 DeclaresMethod;
3949 HasGenericType;
3950 HasTypeArg;
3951 HasType;
3952 DeclaresMethod;
3953 HasGenericType;
3954 HasTypeArg;
3955 HasType;
3956 DeclaresMethod;
3957 HasGenericType;
3958 HasTypeArg;
3959 HasType;
3960 DeclaresMethod;
3961 HasGenericType;
3962 HasTypeArg;
3963 HasType;
3964 DeclaresMethod;
3965 HasGenericType;
3966 HasTypeArg;
3967 HasType;
3968 DeclaresMethod;
3969 HasGenericType;
3970 HasTypeArg;
3971 HasType;
3972 DeclaresMethod;
3973 HasGenericType;
3974 HasTypeArg;
3975 HasType;
3976 DeclaresMethod;
3977 HasGenericType;
3978 HasTypeArg;
3979 HasType;
3980 DeclaresMethod;
3981 HasGenericType;
3982 HasTypeArg;
3983 HasType;
3984 HasParam;
3985 HasGenericType;
3986 HasTypeArg;
3987 HasType;
3988 DeclaresMethod;
3989 HasGenericType;
3990 HasTypeArg;
3991 HasType;
3992 DeclaresMethod;
3993 HasGenericType;
3994 HasTypeArg;
3995 HasType;
3996 HasParam;
3997 HasGenericType;
3998 HasTypeArg;
3999 HasType;
4000 DeclaresMethod;
4001 HasGenericType;
4002 HasTypeArg;
4003 HasType;
4004 DeclaresMethod;
4005 HasGenericType;
4006 HasTypeArg;
4007 HasType;
4008 HasParam;
4009 HasGenericType;
4010 HasTypeArg;
4011 HasType;
4012 DeclaresMethod;
4013 HasGenericType;
4014 HasTypeArg;
4015 HasType;
4016 DeclaresMethod;
4017 HasGenericType;
4018 HasTypeArg;
4019 HasType;
4020 HasParam;
4021 HasGenericType;
4022 HasTypeArg;
4023 HasType;
4024 DeclaresMethod;
4025 HasGenericType;
4026 HasTypeArg;
4027 HasType;
4028 DeclaresMethod;
4029 HasGenericType;
4030 HasTypeArg;
4031 HasType;
4032 HasParam;
4033 HasGenericType;
4034 HasTypeArg;
4035 HasType;
4036 DeclaresMethod;
4037 HasGenericType;
4038 HasTypeArg;
4039 HasType;
4040 DeclaresMethod;
4041 HasGenericType;
4042 HasTypeArg;
4043 HasType;
4044 HasParam;
4045 HasGenericType;
4046 HasTypeArg;
4047 HasType;
4048 DeclaresMethod;
4049 HasGenericType;
4050 HasTypeArg;
4051 HasType;
4052 DeclaresMethod;
4053 HasGenericType;
4054 HasTypeArg;
4055 HasType;
4056 HasParam;
4057 HasGenericType;
4058 HasTypeArg;
4059 HasType;
4060 DeclaresMethod;
4061 HasGenericType;
4062 HasTypeArg;
4063 HasType;
4064 DeclaresMethod;
4065 HasGenericType;
4066 HasTypeArg;
4067 HasType;
4068 HasParam;
4069 HasGenericType;
4070 HasTypeArg;
4071 HasType;
4072 DeclaresMethod;
4073 HasGenericType;
4074 HasTypeArg;
4075 HasType;
4076 DeclaresMethod;
4077 HasGenericType;
4078 HasTypeArg;
4079 HasType;
4080 HasParam;
4081 HasGenericType;
4082 HasTypeArg;
4083 HasType;
4084 DeclaresMethod;
4085 HasGenericType;
4086 HasTypeArg;
4087 HasType;
4088 DeclaresMethod;
4089 HasGenericType;
4090 HasTypeArg;
4091 HasType;
4092 HasParam;
4093 HasGenericType;
4094 HasTypeArg;
4095 HasType;
4096 DeclaresMethod;
4097 HasGenericType;
4098 HasTypeArg;
4099 HasType;
4100 DeclaresMethod;
4101 HasGenericType;
4102 HasTypeArg;
4103 HasType;
4104 HasParam;
4105 HasGenericType;
4106 HasTypeArg;
4107 HasType;
4108 DeclaresMethod;
4109 HasGenericType;
4110 HasTypeArg;
4111 HasType;
4112 DeclaresMethod;
4113 HasGenericType;
4114 HasTypeArg;
4115 HasType;
4116 HasParam;
4117 HasGenericType;
4118 HasTypeArg;
4119 HasType;
4120 DeclaresMethod;
4121 HasGenericType;
4122 HasTypeArg;
4123 HasType;
4124 DeclaresMethod;
4125 HasGenericType;
4126 HasTypeArg;
4127 HasType;
4128 HasParam;
4129 HasGenericType;
4130 HasTypeArg;
4131 HasType;
4132 DeclaresMethod;
4133 HasGenericType;
4134 HasTypeArg;
4135 HasType;
4136 DeclaresMethod;
4137 HasGenericType;
4138 HasTypeArg;
4139 HasType;
4140 HasParam;
4141 HasGenericType;
4142 HasTypeArg;
4143 HasType;
4144 DeclaresMethod;
4145 HasGenericType;
4146 HasTypeArg;
4147 HasType;
4148 DeclaresMethod;
4149 HasGenericType;
4150 HasTypeArg;
4151 HasType;
4152 HasParam;
4153 HasGenericType;
4154 HasTypeArg;
4155 HasType;
4156 DeclaresMethod;
4157 HasGenericType;
4158 HasTypeArg;
4159 HasType;
4160 DeclaresMethod;
4161 HasGenericType;
4162 HasTypeArg;
4163 HasType;
4164 HasParam;
4165 HasGenericType;
4166 HasTypeArg;
4167 HasType;
4168 DeclaresMethod;
4169 HasGenericType;
4170 HasTypeArg;
4171 HasType;
4172 DeclaresMethod;
4173 HasGenericType;
4174 HasTypeArg;
4175 HasType;
4176 HasParam;
4177 HasGenericType;
4178 HasTypeArg;
4179 HasType;
4180 DeclaresMethod;
4181 HasGenericType;
4182 HasTypeArg;
4183 HasType;
4184 DeclaresMethod;
4185 HasGenericType;
4186 HasTypeArg;
4187 HasType;
4188 HasParam;
4189 HasGenericType;
4190 HasTypeArg;
4191 HasType;
4192 DeclaresMethod;
4193 HasGenericType;
4194 HasTypeArg;
4195 HasType;
4196 DeclaresMethod;
4197 HasGenericType;
4198 HasTypeArg;
4199 HasType;
4200 HasParam;
4201 HasGenericType;
4202 HasTypeArg;
4203 HasType;
4204 DeclaresMethod;
4205 HasGenericType;
4206 HasTypeArg;
4207 HasType;
4208 DeclaresMethod;
4209 HasGenericType;
4210 HasTypeArg;
4211 HasType;
4212 HasParam;
4213 HasGenericType;
4214 HasTypeArg;
4215 HasType;
4216 DeclaresMethod;
4217 HasGenericType;
4218 HasTypeArg;
4219 HasType;
4220 DeclaresMethod;
4221 HasGenericType;
4222 HasTypeArg;
4223 HasType;
4224 HasParam;
4225 HasGenericType;
4226 HasTypeArg;
4227 HasType;
4228 DeclaresMethod;
4229 HasGenericType;
4230 HasTypeArg;
4231 HasType;
4232 DeclaresMethod;
4233 HasGenericType;
4234 HasTypeArg;
4235 HasType;
4236 HasParam;
4237 HasGenericType;
4238 HasTypeArg;
4239 HasType;
4240 DeclaresMethod;
4241 HasGenericType;
4242 HasTypeArg;
4243 HasType;
4244 DeclaresMethod;
4245 HasGenericType;
4246 HasTypeArg;
4247 HasType;
4248 HasParam;
4249 HasGenericType;
4250 HasTypeArg;
4251 HasType;
4252 DeclaresMethod;
4253 HasGenericType;
4254 HasTypeArg;
4255 HasType;
4256 DeclaresMethod;
4257 HasGenericType;
4258 HasTypeArg;
4259 HasType;
4260 HasParam;
4261 HasGenericType;
4262 HasTypeArg;
4263 HasType;
4264 DeclaresMethod;
4265 HasGenericType;
4266 HasTypeArg;
4267 HasType;
4268 DeclaresMethod;
4269 HasGenericType;
4270 HasTypeArg;
4271 HasType;
4272 HasParam;
4273 HasGenericType;
4274 HasTypeArg;
4275 HasType;
4276 DeclaresMethod;
4277 HasGenericType;
4278 HasTypeArg;
4279 HasType;
4280 DeclaresMethod;
4281 HasGenericType;
4282 HasTypeArg;
4283 HasType;
4284 HasParam;
4285 HasGenericType;
4286 HasTypeArg;
4287 HasType;
4288 DeclaresMethod;
4289 HasGenericType;
4290 HasTypeArg;
4291 HasType;
4292 DeclaresMethod;
4293 HasGenericType;
4294 HasTypeArg;
4295 HasType;
4296 HasParam;
4297 Defines 9;
4298 ContainsClassifier;
4299 Imports 9;
4300 Extends;
4301 Defines 11;
4302 ContainsClassifier;
4303 Imports 9;
4304 Imports 10;
4305 Imports 12;
4306 Imports 22;
4307 Imports 15;
4308 Imports 11;
4309 Imports 13;
4310 Imports 19;
4311 Extends;
4312 HasGenericType;
4313 HasTypeArg;
4314 HasType;
4315 DeclaresField;
4316 HasType;
4317 DeclaresMethod;
4318 DeclaresConstructor;
4319 HasType;
4320 DeclaresMethod;
4321 HasType;
4322 HasParam;
4323 HasType;
4324 DeclaresMethod;
4325 HasType;
4326 HasParam;
4327 HasType;
4328 DeclaresMethod;
4329 HasType;
4330 HasParam;
4331 HasType;
4332 HasParam;
4333 HasType;
4334 HasParam;
4335 HasType;
4336 HasParam;
4337 HasType;
4338 DeclaresMethod;
4339 HasType;
4340 HasParam;
4341 HasType;
4342 DeclaresMethod;
4343 HasType;
4344 HasParam;
4345 HasType;
4346 HasParam;
4347 HasType;
4348 HasParam;
4349 HasType;
4350 HasParam;
4351 HasType;
4352 DeclaresMethod;
4353 HasType;
4354 HasParam;
4355 Throws;
4356 HasType;
4357 DeclaresMethod;
4358 HasType;
4359 HasParam;
4360 HasType;
4361 HasParam;
4362 Throws;
4363 HasType;
4364 DeclaresMethod;
4365 HasType;
4366 HasParam;
4367 HasType;
4368 HasParam;
4369 Throws;
4370 HasType;
4371 DeclaresMethod;
4372 HasType;
4373 HasParam;
4374 HasType;
4375 HasParam;
4376 HasType;
4377 HasParam;
4378 Throws;
4379 HasType;
4380 DeclaresMethod;
4381 HasType;
4382 HasParam;
4383 HasType;
4384 HasParam;
4385 Throws;
4386 HasType;
4387 DeclaresMethod;
4388 HasType;
4389 HasParam;
4390 HasType;
4391 HasParam;
4392 HasType;
4393 HasParam;
4394 Throws;
4395 HasType;
4396 DeclaresMethod;
4397 Defines 25;
4398 ContainsClassifier;
4399 Imports 9;
4400 Extends;
4401 Extends;
4402 HasType;
4403 DeclaresField;
4404 HasType;
4405 DeclaresMethod;
4406 HasType;
4407 DeclaresMethod;
4408 HasType;
4409 DeclaresMethod;
4410 HasType;
4411 DeclaresMethod;
4412 HasType;
4413 HasParam;
4414 HasType;
4415 DeclaresMethod;
4416 HasType;
4417 HasParam;
4418 HasUpperBound;
4419 HasGenericType;
4420 HasTypeArg;
4421 HasType;
4422 DeclaresMethod;
4423 HasType;
4424 DeclaresMethod;
4425 HasType;
4426 HasParam;
4427 HasBound;
4428 HasTypeParam;
4429 HasGenericType;
4430 HasTypeArg;
4431 HasType;
4432 DeclaresMethod;
4433 HasBound;
4434 HasTypeParam;
4435 HasGenericType;
4436 HasTypeArg;
4437 HasType;
4438 DeclaresMethod;
4439 HasGenericType;
4440 HasTypeArg;
4441 HasType;
4442 HasParam;
4443 HasType;
4444 DeclaresMethod;
4445 HasType;
4446 HasParam;
4447 HasUpperBound;
4448 HasGenericType;
4449 HasTypeArg;
4450 HasType;
4451 DeclaresMethod;
4452 HasType;
4453 DeclaresMethod;
4454 HasType;
4455 HasParam;
4456 HasType;
4457 DeclaresMethod;
4458 HasGenericType;
4459 HasTypeArg;
4460 HasType;
4461 DeclaresMethod;
4462 HasGenericType;
4463 HasTypeArg;
4464 HasType;
4465 DeclaresMethod;
4466 HasType;
4467 HasParam;
4468 Defines 11;
4469 ContainsClassifier;
4470 Imports 9;
4471 Extends;
4472 Extends;
4473 Extends;
4474 HasType;
4475 DeclaresField;
4476 HasType;
4477 DeclaresMethod;
4478 HasType;
4479 DeclaresMethod;
4480 HasType;
4481 DeclaresMethod;
4482 HasType;
4483 DeclaresMethod;
4484 HasType;
4485 DeclaresMethod;
4486 HasType;
4487 DeclaresMethod;
4488 HasType;
4489 DeclaresMethod;
4490 HasType;
4491 DeclaresMethod;
4492 HasType;
4493 DeclaresMethod;
4494 HasType;
4495 HasParam;
4496 HasType;
4497 DeclaresMethod;
4498 HasType;
4499 HasParam;
4500 HasUpperBound;
4501 HasGenericType;
4502 HasTypeArg;
4503 HasType;
4504 DeclaresMethod;
4505 HasType;
4506 DeclaresMethod;
4507 HasType;
4508 HasParam;
4509 HasBound;
4510 HasTypeParam;
4511 HasGenericType;
4512 HasTypeArg;
4513 HasType;
4514 DeclaresMethod;
4515 HasBound;
4516 HasTypeParam;
4517 HasGenericType;
4518 HasTypeArg;
4519 HasType;
4520 DeclaresMethod;
4521 HasGenericType;
4522 HasTypeArg;
4523 HasType;
4524 HasParam;
4525 HasType;
4526 DeclaresMethod;
4527 HasType;
4528 HasParam;
4529 HasUpperBound;
4530 HasGenericType;
4531 HasTypeArg;
4532 HasType;
4533 DeclaresMethod;
4534 HasType;
4535 DeclaresMethod;
4536 HasType;
4537 HasParam;
4538 HasBound;
4539 HasTypeParam;
4540 HasGenericType;
4541 HasTypeArg;
4542 HasType;
4543 DeclaresMethod;
4544 HasBound;
4545 HasTypeParam;
4546 HasGenericType;
4547 HasTypeArg;
4548 HasType;
4549 DeclaresMethod;
4550 HasGenericType;
4551 HasTypeArg;
4552 HasType;
4553 HasParam;
4554 HasType;
4555 DeclaresMethod;
4556 HasType;
4557 HasParam;
4558 HasUpperBound;
4559 HasGenericType;
4560 HasTypeArg;
4561 HasType;
4562 DeclaresMethod;
4563 HasType;
4564 DeclaresMethod;
4565 HasType;
4566 HasParam;
4567 HasBound;
4568 HasTypeParam;
4569 HasGenericType;
4570 HasTypeArg;
4571 HasType;
4572 DeclaresMethod;
4573 HasBound;
4574 HasTypeParam;
4575 HasGenericType;
4576 HasTypeArg;
4577 HasType;
4578 DeclaresMethod;
4579 HasGenericType;
4580 HasTypeArg;
4581 HasType;
4582 HasParam;
4583 HasType;
4584 DeclaresMethod;
4585 HasType;
4586 HasParam;
4587 HasUpperBound;
4588 HasGenericType;
4589 HasTypeArg;
4590 HasType;
4591 DeclaresMethod;
4592 HasType;
4593 DeclaresMethod;
4594 HasType;
4595 HasParam;
4596 HasBound;
4597 HasTypeParam;
4598 HasGenericType;
4599 HasTypeArg;
4600 HasType;
4601 DeclaresMethod;
4602 HasBound;
4603 HasTypeParam;
4604 HasGenericType;
4605 HasTypeArg;
4606 HasType;
4607 DeclaresMethod;
4608 HasGenericType;
4609 HasTypeArg;
4610 HasType;
4611 HasParam;
4612 HasType;
4613 DeclaresMethod;
4614 HasType;
4615 HasParam;
4616 HasUpperBound;
4617 HasGenericType;
4618 HasTypeArg;
4619 HasType;
4620 DeclaresMethod;
4621 HasType;
4622 DeclaresMethod;
4623 HasType;
4624 HasParam;
4625 HasType;
4626 DeclaresMethod;
4627 HasType;
4628 DeclaresMethod;
4629 HasType;
4630 HasParam;
4631 HasUpperBound;
4632 HasGenericType;
4633 HasTypeArg;
4634 HasType;
4635 DeclaresMethod;
4636 HasType;
4637 DeclaresMethod;
4638 HasType;
4639 HasParam;
4640 HasType;
4641 DeclaresMethod;
4642 HasGenericType;
4643 HasTypeArg;
4644 HasType;
4645 DeclaresMethod;
4646 HasGenericType;
4647 HasTypeArg;
4648 HasType;
4649 DeclaresMethod;
4650 HasType;
4651 HasParam;
4652 Defines 414;
4653 ContainsClassifier;
4654 Imports 9;
4655 Extends;
4656 Extends;
4657 Extends;
4658 Extends;
4659 HasType;
4660 DeclaresField;
4661 HasType;
4662 DeclaresMethod;
4663 HasType;
4664 DeclaresMethod;
4665 HasType;
4666 DeclaresMethod;
4667 HasType;
4668 DeclaresMethod;
4669 HasType;
4670 DeclaresMethod;
4671 HasType;
4672 DeclaresMethod;
4673 HasType;
4674 DeclaresMethod;
4675 HasType;
4676 HasParam;
4677 HasType;
4678 DeclaresMethod;
4679 HasType;
4680 DeclaresMethod;
4681 HasType;
4682 HasParam;
4683 HasType;
4684 DeclaresMethod;
4685 HasType;
4686 HasParam;
4687 HasUpperBound;
4688 HasGenericType;
4689 HasTypeArg;
4690 HasType;
4691 DeclaresMethod;
4692 HasType;
4693 DeclaresMethod;
4694 HasType;
4695 HasParam;
4696 HasBound;
4697 HasTypeParam;
4698 HasGenericType;
4699 HasTypeArg;
4700 HasType;
4701 DeclaresMethod;
4702 HasBound;
4703 HasTypeParam;
4704 HasGenericType;
4705 HasTypeArg;
4706 HasType;
4707 DeclaresMethod;
4708 HasGenericType;
4709 HasTypeArg;
4710 HasType;
4711 HasParam;
4712 HasType;
4713 DeclaresMethod;
4714 HasType;
4715 HasParam;
4716 HasUpperBound;
4717 HasGenericType;
4718 HasTypeArg;
4719 HasType;
4720 DeclaresMethod;
4721 HasType;
4722 DeclaresMethod;
4723 HasType;
4724 HasParam;
4725 HasBound;
4726 HasTypeParam;
4727 HasGenericType;
4728 HasTypeArg;
4729 HasType;
4730 DeclaresMethod;
4731 HasBound;
4732 HasTypeParam;
4733 HasGenericType;
4734 HasTypeArg;
4735 HasType;
4736 DeclaresMethod;
4737 HasGenericType;
4738 HasTypeArg;
4739 HasType;
4740 HasParam;
4741 HasType;
4742 DeclaresMethod;
4743 HasType;
4744 HasParam;
4745 HasUpperBound;
4746 HasGenericType;
4747 HasTypeArg;
4748 HasType;
4749 DeclaresMethod;
4750 HasType;
4751 DeclaresMethod;
4752 HasType;
4753 HasParam;
4754 HasBound;
4755 HasTypeParam;
4756 HasGenericType;
4757 HasTypeArg;
4758 HasType;
4759 DeclaresMethod;
4760 HasBound;
4761 HasTypeParam;
4762 HasGenericType;
4763 HasTypeArg;
4764 HasType;
4765 DeclaresMethod;
4766 HasGenericType;
4767 HasTypeArg;
4768 HasType;
4769 HasParam;
4770 HasType;
4771 DeclaresMethod;
4772 HasType;
4773 HasParam;
4774 HasUpperBound;
4775 HasGenericType;
4776 HasTypeArg;
4777 HasType;
4778 DeclaresMethod;
4779 HasType;
4780 DeclaresMethod;
4781 HasType;
4782 HasParam;
4783 HasBound;
4784 HasTypeParam;
4785 HasGenericType;
4786 HasTypeArg;
4787 HasType;
4788 DeclaresMethod;
4789 HasBound;
4790 HasTypeParam;
4791 HasGenericType;
4792 HasTypeArg;
4793 HasType;
4794 DeclaresMethod;
4795 HasGenericType;
4796 HasTypeArg;
4797 HasType;
4798 HasParam;
4799 HasType;
4800 DeclaresMethod;
4801 HasType;
4802 HasParam;
4803 HasUpperBound;
4804 HasGenericType;
4805 HasTypeArg;
4806 HasType;
4807 DeclaresMethod;
4808 HasType;
4809 DeclaresMethod;
4810 HasType;
4811 HasParam;
4812 HasType;
4813 DeclaresMethod;
4814 HasGenericType;
4815 HasTypeArg;
4816 HasType;
4817 DeclaresMethod;
4818 HasGenericType;
4819 HasTypeArg;
4820 HasType;
4821 DeclaresMethod;
4822 HasType;
4823 HasParam;
4824 HasGenericType;
4825 HasTypeArg;
4826 HasType;
4827 DeclaresMethod;
4828 HasGenericType;
4829 HasTypeArg;
4830 HasType;
4831 DeclaresMethod;
4832 HasType;
4833 HasParam;
4834 Defines 11;
4835 ContainsClassifier;
4836 Extends;
4837 HasType;
4838 DeclaresField;
4839 HasGenericType;
4840 HasTypeArg;
4841 HasType;
4842 DeclaresMethod;
4843 HasType;
4844 DeclaresMethod;
4845 HasGenericType;
4846 HasTypeArg;
4847 HasType;
4848 HasParam;
4849 HasType;
4850 DeclaresMethod;
4851 Defines 11;
4852 ContainsClassifier;
4853 DeclaresEnumConst;
4854 DeclaresEnumConst;
4855 DeclaresEnumConst;
4856 DeclaresEnumConst;
4857 DeclaresEnumConst;
4858 DeclaresEnumConst;
4859 DeclaresEnumConst;
4860 DeclaresEnumConst;
4861 DeclaresEnumConst;
4862 DeclaresEnumConst;
4863 DeclaresEnumConst;
4864 HasType;
4865 DeclaresMethod;
4866 HasType;
4867 HasParam;
4868 Defines 13;
4869 ContainsClassifier;
4870 Imports 9;
4871 Extends;
4872 HasType;
4873 DeclaresField;
4874 HasType;
4875 DeclaresMethod;
4876 HasType;
4877 DeclaresMethod;
4878 HasType;
4879 HasParam;
4880 HasType;
4881 DeclaresMethod;
4882 HasType;
4883 DeclaresMethod;
4884 HasType;
4885 DeclaresMethod;
4886 HasType;
4887 HasParam;
4888 HasType;
4889 DeclaresMethod;
4890 HasType;
4891 HasParam;
4892 HasUpperBound;
4893 HasGenericType;
4894 HasTypeArg;
4895 HasType;
4896 DeclaresMethod;
4897 HasType;
4898 DeclaresMethod;
4899 HasType;
4900 HasParam;
4901 HasBound;
4902 HasTypeParam;
4903 HasGenericType;
4904 HasTypeArg;
4905 HasType;
4906 DeclaresMethod;
4907 HasBound;
4908 HasTypeParam;
4909 HasGenericType;
4910 HasTypeArg;
4911 HasType;
4912 DeclaresMethod;
4913 HasGenericType;
4914 HasTypeArg;
4915 HasType;
4916 HasParam;
4917 HasGenericType;
4918 HasTypeArg;
4919 HasType;
4920 DeclaresMethod;
4921 HasGenericType;
4922 HasTypeArg;
4923 HasType;
4924 DeclaresMethod;
4925 HasType;
4926 HasParam;
4927 Defines 33;
4928 ContainsClassifier;
4929 Imports 9;
4930 Extends;
4931 Extends;
4932 HasType;
4933 DeclaresField;
4934 HasType;
4935 DeclaresMethod;
4936 HasType;
4937 DeclaresMethod;
4938 HasType;
4939 DeclaresMethod;
4940 HasType;
4941 DeclaresMethod;
4942 HasType;
4943 DeclaresMethod;
4944 HasType;
4945 HasParam;
4946 HasType;
4947 DeclaresMethod;
4948 HasType;
4949 DeclaresMethod;
4950 HasType;
4951 HasParam;
4952 HasType;
4953 DeclaresMethod;
4954 HasType;
4955 HasParam;
4956 HasUpperBound;
4957 HasGenericType;
4958 HasTypeArg;
4959 HasType;
4960 DeclaresMethod;
4961 HasType;
4962 DeclaresMethod;
4963 HasType;
4964 HasParam;
4965 HasBound;
4966 HasTypeParam;
4967 HasGenericType;
4968 HasTypeArg;
4969 HasType;
4970 DeclaresMethod;
4971 HasBound;
4972 HasTypeParam;
4973 HasGenericType;
4974 HasTypeArg;
4975 HasType;
4976 DeclaresMethod;
4977 HasGenericType;
4978 HasTypeArg;
4979 HasType;
4980 HasParam;
4981 HasType;
4982 DeclaresMethod;
4983 HasType;
4984 HasParam;
4985 HasUpperBound;
4986 HasGenericType;
4987 HasTypeArg;
4988 HasType;
4989 DeclaresMethod;
4990 HasType;
4991 DeclaresMethod;
4992 HasType;
4993 HasParam;
4994 HasBound;
4995 HasTypeParam;
4996 HasGenericType;
4997 HasTypeArg;
4998 HasType;
4999 DeclaresMethod;
5000 HasBound;
5001 HasTypeParam;
5002 HasGenericType;
5003 HasTypeArg;
5004 HasType;
5005 DeclaresMethod;
5006 HasGenericType;
5007 HasTypeArg;
5008 HasType;
5009 HasParam;
5010 HasType;
5011 DeclaresMethod;
5012 HasType;
5013 HasParam;
5014 HasUpperBound;
5015 HasGenericType;
5016 HasTypeArg;
5017 HasType;
5018 DeclaresMethod;
5019 HasType;
5020 DeclaresMethod;
5021 HasType;
5022 HasParam;
5023 HasBound;
5024 HasTypeParam;
5025 HasGenericType;
5026 HasTypeArg;
5027 HasType;
5028 DeclaresMethod;
5029 HasBound;
5030 HasTypeParam;
5031 HasGenericType;
5032 HasTypeArg;
5033 HasType;
5034 DeclaresMethod;
5035 HasGenericType;
5036 HasTypeArg;
5037 HasType;
5038 HasParam;
5039 HasGenericType;
5040 HasTypeArg;
5041 HasType;
5042 DeclaresMethod;
5043 HasGenericType;
5044 HasTypeArg;
5045 HasType;
5046 DeclaresMethod;
5047 HasType;
5048 HasParam;
5049 HasGenericType;
5050 HasTypeArg;
5051 HasType;
5052 DeclaresMethod;
5053 HasGenericType;
5054 HasTypeArg;
5055 HasType;
5056 DeclaresMethod;
5057 HasType;
5058 HasParam;
5059 Defines 12;
5060 ContainsClassifier;
5061 Imports 9;
5062 Extends;
5063 Extends;
5064 Extends;
5065 HasType;
5066 DeclaresField;
5067 HasType;
5068 DeclaresMethod;
5069 HasType;
5070 DeclaresMethod;
5071 HasType;
5072 DeclaresMethod;
5073 HasType;
5074 DeclaresMethod;
5075 HasType;
5076 DeclaresMethod;
5077 HasType;
5078 DeclaresMethod;
5079 HasType;
5080 HasParam;
5081 HasType;
5082 DeclaresMethod;
5083 HasType;
5084 HasParam;
5085 HasUpperBound;
5086 HasGenericType;
5087 HasTypeArg;
5088 HasType;
5089 DeclaresMethod;
5090 HasType;
5091 DeclaresMethod;
5092 HasType;
5093 HasParam;
5094 HasType;
5095 DeclaresMethod;
5096 HasType;
5097 DeclaresMethod;
5098 HasType;
5099 HasParam;
5100 HasUpperBound;
5101 HasGenericType;
5102 HasTypeArg;
5103 HasType;
5104 DeclaresMethod;
5105 HasType;
5106 DeclaresMethod;
5107 HasType;
5108 HasParam;
5109 HasBound;
5110 HasTypeParam;
5111 HasGenericType;
5112 HasTypeArg;
5113 HasType;
5114 DeclaresMethod;
5115 HasBound;
5116 HasTypeParam;
5117 HasGenericType;
5118 HasTypeArg;
5119 HasType;
5120 DeclaresMethod;
5121 HasGenericType;
5122 HasTypeArg;
5123 HasType;
5124 HasParam;
5125 HasType;
5126 DeclaresMethod;
5127 HasType;
5128 HasParam;
5129 HasUpperBound;
5130 HasGenericType;
5131 HasTypeArg;
5132 HasType;
5133 DeclaresMethod;
5134 HasType;
5135 DeclaresMethod;
5136 HasType;
5137 HasParam;
5138 HasType;
5139 DeclaresMethod;
5140 HasGenericType;
5141 HasTypeArg;
5142 HasType;
5143 DeclaresMethod;
5144 HasGenericType;
5145 HasTypeArg;
5146 HasType;
5147 DeclaresMethod;
5148 HasType;
5149 HasParam;
5150 Defines 120;
5151 ContainsClassifier;
5152 Imports 9;
5153 Extends;
5154 Extends;
5155 HasType;
5156 DeclaresField;
5157 HasType;
5158 DeclaresMethod;
5159 HasType;
5160 DeclaresMethod;
5161 HasType;
5162 DeclaresMethod;
5163 HasType;
5164 DeclaresMethod;
5165 HasType;
5166 DeclaresMethod;
5167 HasType;
5168 DeclaresMethod;
5169 HasType;
5170 DeclaresMethod;
5171 HasType;
5172 DeclaresMethod;
5173 HasType;
5174 DeclaresMethod;
5175 HasType;
5176 DeclaresMethod;
5177 HasType;
5178 HasParam;
5179 HasType;
5180 DeclaresMethod;
5181 HasType;
5182 DeclaresMethod;
5183 HasType;
5184 HasParam;
5185 HasType;
5186 DeclaresMethod;
5187 HasType;
5188 HasParam;
5189 HasUpperBound;
5190 HasGenericType;
5191 HasTypeArg;
5192 HasType;
5193 DeclaresMethod;
5194 HasType;
5195 DeclaresMethod;
5196 HasType;
5197 HasParam;
5198 HasBound;
5199 HasTypeParam;
5200 HasGenericType;
5201 HasTypeArg;
5202 HasType;
5203 DeclaresMethod;
5204 HasBound;
5205 HasTypeParam;
5206 HasGenericType;
5207 HasTypeArg;
5208 HasType;
5209 DeclaresMethod;
5210 HasGenericType;
5211 HasTypeArg;
5212 HasType;
5213 HasParam;
5214 HasType;
5215 DeclaresMethod;
5216 HasType;
5217 HasParam;
5218 HasUpperBound;
5219 HasGenericType;
5220 HasTypeArg;
5221 HasType;
5222 DeclaresMethod;
5223 HasType;
5224 DeclaresMethod;
5225 HasType;
5226 HasParam;
5227 HasBound;
5228 HasTypeParam;
5229 HasGenericType;
5230 HasTypeArg;
5231 HasType;
5232 DeclaresMethod;
5233 HasBound;
5234 HasTypeParam;
5235 HasGenericType;
5236 HasTypeArg;
5237 HasType;
5238 DeclaresMethod;
5239 HasGenericType;
5240 HasTypeArg;
5241 HasType;
5242 HasParam;
5243 HasType;
5244 DeclaresMethod;
5245 HasType;
5246 HasParam;
5247 HasUpperBound;
5248 HasGenericType;
5249 HasTypeArg;
5250 HasType;
5251 DeclaresMethod;
5252 HasType;
5253 DeclaresMethod;
5254 HasType;
5255 HasParam;
5256 HasBound;
5257 HasTypeParam;
5258 HasGenericType;
5259 HasTypeArg;
5260 HasType;
5261 DeclaresMethod;
5262 HasBound;
5263 HasTypeParam;
5264 HasGenericType;
5265 HasTypeArg;
5266 HasType;
5267 DeclaresMethod;
5268 HasGenericType;
5269 HasTypeArg;
5270 HasType;
5271 HasParam;
5272 HasType;
5273 DeclaresMethod;
5274 HasType;
5275 HasParam;
5276 HasUpperBound;
5277 HasGenericType;
5278 HasTypeArg;
5279 HasType;
5280 DeclaresMethod;
5281 HasType;
5282 DeclaresMethod;
5283 HasType;
5284 HasParam;
5285 HasType;
5286 DeclaresMethod;
5287 HasType;
5288 DeclaresMethod;
5289 HasType;
5290 HasParam;
5291 HasUpperBound;
5292 HasGenericType;
5293 HasTypeArg;
5294 HasType;
5295 DeclaresMethod;
5296 HasType;
5297 DeclaresMethod;
5298 HasType;
5299 HasParam;
5300 HasBound;
5301 HasTypeParam;
5302 HasGenericType;
5303 HasTypeArg;
5304 HasType;
5305 DeclaresMethod;
5306 HasBound;
5307 HasTypeParam;
5308 HasGenericType;
5309 HasTypeArg;
5310 HasType;
5311 DeclaresMethod;
5312 HasGenericType;
5313 HasTypeArg;
5314 HasType;
5315 HasParam;
5316 HasType;
5317 DeclaresMethod;
5318 HasType;
5319 HasParam;
5320 HasUpperBound;
5321 HasGenericType;
5322 HasTypeArg;
5323 HasType;
5324 DeclaresMethod;
5325 HasType;
5326 DeclaresMethod;
5327 HasType;
5328 HasParam;
5329 HasBound;
5330 HasTypeParam;
5331 HasGenericType;
5332 HasTypeArg;
5333 HasType;
5334 DeclaresMethod;
5335 HasBound;
5336 HasTypeParam;
5337 HasGenericType;
5338 HasTypeArg;
5339 HasType;
5340 DeclaresMethod;
5341 HasGenericType;
5342 HasTypeArg;
5343 HasType;
5344 HasParam;
5345 HasType;
5346 DeclaresMethod;
5347 HasType;
5348 HasParam;
5349 HasUpperBound;
5350 HasGenericType;
5351 HasTypeArg;
5352 HasType;
5353 DeclaresMethod;
5354 HasType;
5355 DeclaresMethod;
5356 HasType;
5357 HasParam;
5358 HasBound;
5359 HasTypeParam;
5360 HasGenericType;
5361 HasTypeArg;
5362 HasType;
5363 DeclaresMethod;
5364 HasBound;
5365 HasTypeParam;
5366 HasGenericType;
5367 HasTypeArg;
5368 HasType;
5369 DeclaresMethod;
5370 HasGenericType;
5371 HasTypeArg;
5372 HasType;
5373 HasParam;
5374 HasType;
5375 DeclaresMethod;
5376 HasType;
5377 HasParam;
5378 HasUpperBound;
5379 HasGenericType;
5380 HasTypeArg;
5381 HasType;
5382 DeclaresMethod;
5383 HasType;
5384 DeclaresMethod;
5385 HasType;
5386 HasParam;
5387 HasBound;
5388 HasTypeParam;
5389 HasGenericType;
5390 HasTypeArg;
5391 HasType;
5392 DeclaresMethod;
5393 HasBound;
5394 HasTypeParam;
5395 HasGenericType;
5396 HasTypeArg;
5397 HasType;
5398 DeclaresMethod;
5399 HasGenericType;
5400 HasTypeArg;
5401 HasType;
5402 HasParam;
5403 HasType;
5404 DeclaresMethod;
5405 HasType;
5406 HasParam;
5407 HasUpperBound;
5408 HasGenericType;
5409 HasTypeArg;
5410 HasType;
5411 DeclaresMethod;
5412 HasType;
5413 DeclaresMethod;
5414 HasType;
5415 HasParam;
5416 HasBound;
5417 HasTypeParam;
5418 HasGenericType;
5419 HasTypeArg;
5420 HasType;
5421 DeclaresMethod;
5422 HasBound;
5423 HasTypeParam;
5424 HasGenericType;
5425 HasTypeArg;
5426 HasType;
5427 DeclaresMethod;
5428 HasGenericType;
5429 HasTypeArg;
5430 HasType;
5431 HasParam;
5432 HasType;
5433 DeclaresMethod;
5434 HasType;
5435 HasParam;
5436 HasUpperBound;
5437 HasGenericType;
5438 HasTypeArg;
5439 HasType;
5440 DeclaresMethod;
5441 HasType;
5442 DeclaresMethod;
5443 HasType;
5444 HasParam;
5445 HasType;
5446 DeclaresMethod;
5447 HasType;
5448 DeclaresMethod;
5449 HasType;
5450 HasParam;
5451 HasUpperBound;
5452 HasGenericType;
5453 HasTypeArg;
5454 HasType;
5455 DeclaresMethod;
5456 HasType;
5457 DeclaresMethod;
5458 HasType;
5459 HasParam;
5460 HasBound;
5461 HasTypeParam;
5462 HasGenericType;
5463 HasTypeArg;
5464 HasType;
5465 DeclaresMethod;
5466 HasBound;
5467 HasTypeParam;
5468 HasGenericType;
5469 HasTypeArg;
5470 HasType;
5471 DeclaresMethod;
5472 HasGenericType;
5473 HasTypeArg;
5474 HasType;
5475 HasParam;
5476 HasType;
5477 DeclaresMethod;
5478 HasType;
5479 HasParam;
5480 HasUpperBound;
5481 HasGenericType;
5482 HasTypeArg;
5483 HasType;
5484 DeclaresMethod;
5485 HasType;
5486 DeclaresMethod;
5487 HasType;
5488 HasParam;
5489 HasBound;
5490 HasTypeParam;
5491 HasGenericType;
5492 HasTypeArg;
5493 HasType;
5494 DeclaresMethod;
5495 HasBound;
5496 HasTypeParam;
5497 HasGenericType;
5498 HasTypeArg;
5499 HasType;
5500 DeclaresMethod;
5501 HasGenericType;
5502 HasTypeArg;
5503 HasType;
5504 HasParam;
5505 HasType;
5506 DeclaresMethod;
5507 HasType;
5508 HasParam;
5509 HasUpperBound;
5510 HasGenericType;
5511 HasTypeArg;
5512 HasType;
5513 DeclaresMethod;
5514 HasType;
5515 DeclaresMethod;
5516 HasType;
5517 HasParam;
5518 HasType;
5519 DeclaresMethod;
5520 HasType;
5521 DeclaresMethod;
5522 HasType;
5523 HasParam;
5524 HasUpperBound;
5525 HasGenericType;
5526 HasTypeArg;
5527 HasType;
5528 DeclaresMethod;
5529 HasType;
5530 DeclaresMethod;
5531 HasType;
5532 HasParam;
5533 HasBound;
5534 HasTypeParam;
5535 HasGenericType;
5536 HasTypeArg;
5537 HasType;
5538 DeclaresMethod;
5539 HasBound;
5540 HasTypeParam;
5541 HasGenericType;
5542 HasTypeArg;
5543 HasType;
5544 DeclaresMethod;
5545 HasGenericType;
5546 HasTypeArg;
5547 HasType;
5548 HasParam;
5549 HasGenericType;
5550 HasTypeArg;
5551 HasType;
5552 DeclaresMethod;
5553 HasGenericType;
5554 HasTypeArg;
5555 HasType;
5556 DeclaresMethod;
5557 HasType;
5558 HasParam;
5559 HasGenericType;
5560 HasTypeArg;
5561 HasType;
5562 DeclaresMethod;
5563 HasGenericType;
5564 HasTypeArg;
5565 HasType;
5566 DeclaresMethod;
5567 HasType;
5568 HasParam;
5569 Defines 12;
5570 ContainsClassifier;
5571 Extends;
5572 Extends;
5573 HasType;
5574 DeclaresField;
5575 HasType;
5576 DeclaresMethod;
5577 HasType;
5578 DeclaresMethod;
5579 HasType;
5580 HasParam;
5581 HasType;
5582 DeclaresMethod;
5583 HasType;
5584 DeclaresMethod;
5585 HasType;
5586 DeclaresMethod;
5587 HasType;
5588 DeclaresMethod;
5589 HasType;
5590 DeclaresMethod;
5591 HasType;
5592 HasParam;
5593 HasUpperBound;
5594 HasGenericType;
5595 HasTypeArg;
5596 HasType;
5597 DeclaresMethod;
5598 HasType;
5599 DeclaresMethod;
5600 HasType;
5601 HasParam;
5602 HasBound;
5603 HasTypeParam;
5604 HasGenericType;
5605 HasTypeArg;
5606 HasType;
5607 DeclaresMethod;
5608 HasBound;
5609 HasTypeParam;
5610 HasGenericType;
5611 HasTypeArg;
5612 HasType;
5613 DeclaresMethod;
5614 HasGenericType;
5615 HasTypeArg;
5616 HasType;
5617 HasParam;
5618 HasType;
5619 DeclaresMethod;
5620 HasType;
5621 HasParam;
5622 HasUpperBound;
5623 HasGenericType;
5624 HasTypeArg;
5625 HasType;
5626 DeclaresMethod;
5627 HasType;
5628 DeclaresMethod;
5629 HasType;
5630 HasParam;
5631 HasBound;
5632 HasTypeParam;
5633 HasGenericType;
5634 HasTypeArg;
5635 HasType;
5636 DeclaresMethod;
5637 HasBound;
5638 HasTypeParam;
5639 HasGenericType;
5640 HasTypeArg;
5641 HasType;
5642 DeclaresMethod;
5643 HasGenericType;
5644 HasTypeArg;
5645 HasType;
5646 HasParam;
5647 Defines 551;
5648 ContainsClassifier;
5649 DeclaresEnumConst;
5650 DeclaresEnumConst;
5651 DeclaresEnumConst;
5652 DeclaresEnumConst;
5653 DeclaresEnumConst;
5654 DeclaresEnumConst;
5655 DeclaresEnumConst;
5656 DeclaresEnumConst;
5657 DeclaresEnumConst;
5658 HasType;
5659 DeclaresMethod;
5660 HasType;
5661 HasParam;
5662 Defines 13;
5663 ContainsClassifier;
5664 Extends;
5665 Extends;
5666 HasType;
5667 DeclaresField;
5668 HasType;
5669 DeclaresMethod;
5670 HasType;
5671 DeclaresMethod;
5672 HasType;
5673 HasParam;
5674 HasType;
5675 DeclaresMethod;
5676 HasType;
5677 DeclaresMethod;
5678 HasType;
5679 DeclaresMethod;
5680 HasType;
5681 HasParam;
5682 HasUpperBound;
5683 HasGenericType;
5684 HasTypeArg;
5685 HasType;
5686 DeclaresMethod;
5687 HasType;
5688 DeclaresMethod;
5689 HasType;
5690 HasParam;
5691 HasBound;
5692 HasTypeParam;
5693 HasGenericType;
5694 HasTypeArg;
5695 HasType;
5696 DeclaresMethod;
5697 HasBound;
5698 HasTypeParam;
5699 HasGenericType;
5700 HasTypeArg;
5701 HasType;
5702 DeclaresMethod;
5703 HasGenericType;
5704 HasTypeArg;
5705 HasType;
5706 HasParam;
5707 Defines 38;
5708 ContainsClassifier;
5709 Imports 9;
5710 Extends;
5711 HasType;
5712 DeclaresField;
5713 HasType;
5714 DeclaresMethod;
5715 HasType;
5716 DeclaresMethod;
5717 HasType;
5718 HasParam;
5719 HasType;
5720 DeclaresMethod;
5721 HasType;
5722 DeclaresMethod;
5723 HasType;
5724 HasParam;
5725 HasType;
5726 DeclaresMethod;
5727 HasType;
5728 DeclaresMethod;
5729 HasType;
5730 DeclaresMethod;
5731 HasType;
5732 HasParam;
5733 HasType;
5734 DeclaresMethod;
5735 HasType;
5736 DeclaresMethod;
5737 HasType;
5738 HasParam;
5739 HasType;
5740 DeclaresMethod;
5741 HasType;
5742 HasParam;
5743 HasUpperBound;
5744 HasGenericType;
5745 HasTypeArg;
5746 HasType;
5747 DeclaresMethod;
5748 HasType;
5749 DeclaresMethod;
5750 HasType;
5751 HasParam;
5752 HasBound;
5753 HasTypeParam;
5754 HasGenericType;
5755 HasTypeArg;
5756 HasType;
5757 DeclaresMethod;
5758 HasBound;
5759 HasTypeParam;
5760 HasGenericType;
5761 HasTypeArg;
5762 HasType;
5763 DeclaresMethod;
5764 HasGenericType;
5765 HasTypeArg;
5766 HasType;
5767 HasParam;
5768 HasType;
5769 DeclaresMethod;
5770 HasType;
5771 HasParam;
5772 HasUpperBound;
5773 HasGenericType;
5774 HasTypeArg;
5775 HasType;
5776 DeclaresMethod;
5777 HasType;
5778 DeclaresMethod;
5779 HasType;
5780 HasParam;
5781 HasBound;
5782 HasTypeParam;
5783 HasGenericType;
5784 HasTypeArg;
5785 HasType;
5786 DeclaresMethod;
5787 HasBound;
5788 HasTypeParam;
5789 HasGenericType;
5790 HasTypeArg;
5791 HasType;
5792 DeclaresMethod;
5793 HasGenericType;
5794 HasTypeArg;
5795 HasType;
5796 HasParam;
5797 HasGenericType;
5798 HasTypeArg;
5799 HasType;
5800 DeclaresMethod;
5801 HasGenericType;
5802 HasTypeArg;
5803 HasType;
5804 DeclaresMethod;
5805 HasType;
5806 HasParam;
5807 HasGenericType;
5808 HasTypeArg;
5809 HasType;
5810 DeclaresMethod;
5811 HasGenericType;
5812 HasTypeArg;
5813 HasType;
5814 DeclaresMethod;
5815 HasType;
5816 HasParam;
5817 Defines 184;
5818 ContainsClassifier;
5819 Imports 9;
5820 Imports 11;
5821 Imports 11;
5822 Extends;
5823 HasType;
5824 DeclaresField;
5825 HasType;
5826 DeclaresMethod;
5827 HasType;
5828 DeclaresMethod;
5829 HasType;
5830 DeclaresMethod;
5831 HasType;
5832 HasParam;
5833 HasType;
5834 DeclaresMethod;
5835 HasType;
5836 DeclaresMethod;
5837 Defines 91;
5838 ContainsClassifier;
5839 Imports 9;
5840 Extends;
5841 Extends;
5842 HasType;
5843 DeclaresField;
5844 HasType;
5845 DeclaresMethod;
5846 HasType;
5847 DeclaresMethod;
5848 HasType;
5849 DeclaresMethod;
5850 HasType;
5851 DeclaresMethod;
5852 HasType;
5853 DeclaresMethod;
5854 HasType;
5855 HasParam;
5856 HasType;
5857 DeclaresMethod;
5858 HasType;
5859 DeclaresMethod;
5860 HasType;
5861 HasParam;
5862 HasType;
5863 DeclaresMethod;
5864 HasType;
5865 DeclaresMethod;
5866 HasType;
5867 HasParam;
5868 HasType;
5869 DeclaresMethod;
5870 HasType;
5871 DeclaresMethod;
5872 HasType;
5873 HasParam;
5874 HasType;
5875 DeclaresMethod;
5876 HasType;
5877 DeclaresMethod;
5878 HasType;
5879 HasParam;
5880 HasType;
5881 DeclaresMethod;
5882 HasType;
5883 DeclaresMethod;
5884 HasType;
5885 HasParam;
5886 HasType;
5887 DeclaresMethod;
5888 HasType;
5889 DeclaresMethod;
5890 HasType;
5891 HasParam;
5892 HasType;
5893 DeclaresMethod;
5894 HasType;
5895 HasParam;
5896 HasUpperBound;
5897 HasGenericType;
5898 HasTypeArg;
5899 HasType;
5900 DeclaresMethod;
5901 HasType;
5902 DeclaresMethod;
5903 HasType;
5904 HasParam;
5905 HasBound;
5906 HasTypeParam;
5907 HasGenericType;
5908 HasTypeArg;
5909 HasType;
5910 DeclaresMethod;
5911 HasBound;
5912 HasTypeParam;
5913 HasGenericType;
5914 HasTypeArg;
5915 HasType;
5916 DeclaresMethod;
5917 HasGenericType;
5918 HasTypeArg;
5919 HasType;
5920 HasParam;
5921 HasType;
5922 DeclaresMethod;
5923 HasType;
5924 HasParam;
5925 HasUpperBound;
5926 HasGenericType;
5927 HasTypeArg;
5928 HasType;
5929 DeclaresMethod;
5930 HasType;
5931 DeclaresMethod;
5932 HasType;
5933 HasParam;
5934 HasBound;
5935 HasTypeParam;
5936 HasGenericType;
5937 HasTypeArg;
5938 HasType;
5939 DeclaresMethod;
5940 HasBound;
5941 HasTypeParam;
5942 HasGenericType;
5943 HasTypeArg;
5944 HasType;
5945 DeclaresMethod;
5946 HasGenericType;
5947 HasTypeArg;
5948 HasType;
5949 HasParam;
5950 HasGenericType;
5951 HasTypeArg;
5952 HasType;
5953 DeclaresMethod;
5954 HasGenericType;
5955 HasTypeArg;
5956 HasType;
5957 DeclaresMethod;
5958 HasType;
5959 HasParam;
5960 HasGenericType;
5961 HasTypeArg;
5962 HasType;
5963 DeclaresMethod;
5964 HasGenericType;
5965 HasTypeArg;
5966 HasType;
5967 DeclaresMethod;
5968 HasType;
5969 HasParam;
5970 HasGenericType;
5971 HasTypeArg;
5972 HasType;
5973 DeclaresMethod;
5974 HasGenericType;
5975 HasTypeArg;
5976 HasType;
5977 DeclaresMethod;
5978 HasType;
5979 HasParam;
5980 HasGenericType;
5981 HasTypeArg;
5982 HasType;
5983 DeclaresMethod;
5984 HasGenericType;
5985 HasTypeArg;
5986 HasType;
5987 DeclaresMethod;
5988 HasType;
5989 HasParam;
5990 HasGenericType;
5991 HasTypeArg;
5992 HasType;
5993 DeclaresMethod;
5994 HasGenericType;
5995 HasTypeArg;
5996 HasType;
5997 DeclaresMethod;
5998 HasType;
5999 HasParam;
6000 HasGenericType;
6001 HasTypeArg;
6002 HasType;
6003 DeclaresMethod;
6004 HasGenericType;
6005 HasTypeArg;
6006 HasType;
6007 DeclaresMethod;
6008 HasType;
6009 HasParam;
6010 HasGenericType;
6011 HasTypeArg;
6012 HasType;
6013 DeclaresMethod;
6014 HasGenericType;
6015 HasTypeArg;
6016 HasType;
6017 DeclaresMethod;
6018 HasType;
6019 HasParam;
6020 Defines 11;
6021 ContainsClassifier;
6022 Imports 9;
6023 Extends;
6024 Extends;
6025 HasType;
6026 DeclaresField;
6027 HasType;
6028 DeclaresMethod;
6029 HasType;
6030 DeclaresMethod;
6031 HasType;
6032 DeclaresMethod;
6033 HasType;
6034 DeclaresMethod;
6035 HasType;
6036 DeclaresMethod;
6037 HasType;
6038 DeclaresMethod;
6039 HasType;
6040 DeclaresMethod;
6041 HasType;
6042 DeclaresMethod;
6043 HasType;
6044 DeclaresMethod;
6045 HasType;
6046 DeclaresMethod;
6047 HasType;
6048 HasParam;
6049 HasType;
6050 DeclaresMethod;
6051 HasType;
6052 DeclaresMethod;
6053 HasType;
6054 HasParam;
6055 HasType;
6056 DeclaresMethod;
6057 HasType;
6058 HasParam;
6059 HasUpperBound;
6060 HasGenericType;
6061 HasTypeArg;
6062 HasType;
6063 DeclaresMethod;
6064 HasType;
6065 DeclaresMethod;
6066 HasType;
6067 HasParam;
6068 HasBound;
6069 HasTypeParam;
6070 HasGenericType;
6071 HasTypeArg;
6072 HasType;
6073 DeclaresMethod;
6074 HasBound;
6075 HasTypeParam;
6076 HasGenericType;
6077 HasTypeArg;
6078 HasType;
6079 DeclaresMethod;
6080 HasGenericType;
6081 HasTypeArg;
6082 HasType;
6083 HasParam;
6084 HasType;
6085 DeclaresMethod;
6086 HasType;
6087 HasParam;
6088 HasUpperBound;
6089 HasGenericType;
6090 HasTypeArg;
6091 HasType;
6092 DeclaresMethod;
6093 HasType;
6094 DeclaresMethod;
6095 HasType;
6096 HasParam;
6097 HasBound;
6098 HasTypeParam;
6099 HasGenericType;
6100 HasTypeArg;
6101 HasType;
6102 DeclaresMethod;
6103 HasBound;
6104 HasTypeParam;
6105 HasGenericType;
6106 HasTypeArg;
6107 HasType;
6108 DeclaresMethod;
6109 HasGenericType;
6110 HasTypeArg;
6111 HasType;
6112 HasParam;
6113 HasType;
6114 DeclaresMethod;
6115 HasType;
6116 HasParam;
6117 HasUpperBound;
6118 HasGenericType;
6119 HasTypeArg;
6120 HasType;
6121 DeclaresMethod;
6122 HasType;
6123 DeclaresMethod;
6124 HasType;
6125 HasParam;
6126 HasBound;
6127 HasTypeParam;
6128 HasGenericType;
6129 HasTypeArg;
6130 HasType;
6131 DeclaresMethod;
6132 HasBound;
6133 HasTypeParam;
6134 HasGenericType;
6135 HasTypeArg;
6136 HasType;
6137 DeclaresMethod;
6138 HasGenericType;
6139 HasTypeArg;
6140 HasType;
6141 HasParam;
6142 HasType;
6143 DeclaresMethod;
6144 HasType;
6145 HasParam;
6146 HasUpperBound;
6147 HasGenericType;
6148 HasTypeArg;
6149 HasType;
6150 DeclaresMethod;
6151 HasType;
6152 DeclaresMethod;
6153 HasType;
6154 HasParam;
6155 HasType;
6156 DeclaresMethod;
6157 HasType;
6158 DeclaresMethod;
6159 HasType;
6160 HasParam;
6161 HasUpperBound;
6162 HasGenericType;
6163 HasTypeArg;
6164 HasType;
6165 DeclaresMethod;
6166 HasType;
6167 DeclaresMethod;
6168 HasType;
6169 HasParam;
6170 HasBound;
6171 HasTypeParam;
6172 HasGenericType;
6173 HasTypeArg;
6174 HasType;
6175 DeclaresMethod;
6176 HasBound;
6177 HasTypeParam;
6178 HasGenericType;
6179 HasTypeArg;
6180 HasType;
6181 DeclaresMethod;
6182 HasGenericType;
6183 HasTypeArg;
6184 HasType;
6185 HasParam;
6186 HasType;
6187 DeclaresMethod;
6188 HasType;
6189 HasParam;
6190 HasUpperBound;
6191 HasGenericType;
6192 HasTypeArg;
6193 HasType;
6194 DeclaresMethod;
6195 HasType;
6196 DeclaresMethod;
6197 HasType;
6198 HasParam;
6199 HasBound;
6200 HasTypeParam;
6201 HasGenericType;
6202 HasTypeArg;
6203 HasType;
6204 DeclaresMethod;
6205 HasBound;
6206 HasTypeParam;
6207 HasGenericType;
6208 HasTypeArg;
6209 HasType;
6210 DeclaresMethod;
6211 HasGenericType;
6212 HasTypeArg;
6213 HasType;
6214 HasParam;
6215 HasType;
6216 DeclaresMethod;
6217 HasType;
6218 HasParam;
6219 HasUpperBound;
6220 HasGenericType;
6221 HasTypeArg;
6222 HasType;
6223 DeclaresMethod;
6224 HasType;
6225 DeclaresMethod;
6226 HasType;
6227 HasParam;
6228 HasBound;
6229 HasTypeParam;
6230 HasGenericType;
6231 HasTypeArg;
6232 HasType;
6233 DeclaresMethod;
6234 HasBound;
6235 HasTypeParam;
6236 HasGenericType;
6237 HasTypeArg;
6238 HasType;
6239 DeclaresMethod;
6240 HasGenericType;
6241 HasTypeArg;
6242 HasType;
6243 HasParam;
6244 HasType;
6245 DeclaresMethod;
6246 HasType;
6247 HasParam;
6248 HasUpperBound;
6249 HasGenericType;
6250 HasTypeArg;
6251 HasType;
6252 DeclaresMethod;
6253 HasType;
6254 DeclaresMethod;
6255 HasType;
6256 HasParam;
6257 HasBound;
6258 HasTypeParam;
6259 HasGenericType;
6260 HasTypeArg;
6261 HasType;
6262 DeclaresMethod;
6263 HasBound;
6264 HasTypeParam;
6265 HasGenericType;
6266 HasTypeArg;
6267 HasType;
6268 DeclaresMethod;
6269 HasGenericType;
6270 HasTypeArg;
6271 HasType;
6272 HasParam;
6273 HasType;
6274 DeclaresMethod;
6275 HasType;
6276 HasParam;
6277 HasUpperBound;
6278 HasGenericType;
6279 HasTypeArg;
6280 HasType;
6281 DeclaresMethod;
6282 HasType;
6283 DeclaresMethod;
6284 HasType;
6285 HasParam;
6286 HasBound;
6287 HasTypeParam;
6288 HasGenericType;
6289 HasTypeArg;
6290 HasType;
6291 DeclaresMethod;
6292 HasBound;
6293 HasTypeParam;
6294 HasGenericType;
6295 HasTypeArg;
6296 HasType;
6297 DeclaresMethod;
6298 HasGenericType;
6299 HasTypeArg;
6300 HasType;
6301 HasParam;
6302 HasType;
6303 DeclaresMethod;
6304 HasType;
6305 HasParam;
6306 HasUpperBound;
6307 HasGenericType;
6308 HasTypeArg;
6309 HasType;
6310 DeclaresMethod;
6311 HasType;
6312 DeclaresMethod;
6313 HasType;
6314 HasParam;
6315 HasBound;
6316 HasTypeParam;
6317 HasGenericType;
6318 HasTypeArg;
6319 HasType;
6320 DeclaresMethod;
6321 HasBound;
6322 HasTypeParam;
6323 HasGenericType;
6324 HasTypeArg;
6325 HasType;
6326 DeclaresMethod;
6327 HasGenericType;
6328 HasTypeArg;
6329 HasType;
6330 HasParam;
6331 HasType;
6332 DeclaresMethod;
6333 HasType;
6334 HasParam;
6335 HasUpperBound;
6336 HasGenericType;
6337 HasTypeArg;
6338 HasType;
6339 DeclaresMethod;
6340 HasType;
6341 DeclaresMethod;
6342 HasType;
6343 HasParam;
6344 HasBound;
6345 HasTypeParam;
6346 HasGenericType;
6347 HasTypeArg;
6348 HasType;
6349 DeclaresMethod;
6350 HasBound;
6351 HasTypeParam;
6352 HasGenericType;
6353 HasTypeArg;
6354 HasType;
6355 DeclaresMethod;
6356 HasGenericType;
6357 HasTypeArg;
6358 HasType;
6359 HasParam;
6360 HasType;
6361 DeclaresMethod;
6362 HasType;
6363 HasParam;
6364 HasUpperBound;
6365 HasGenericType;
6366 HasTypeArg;
6367 HasType;
6368 DeclaresMethod;
6369 HasType;
6370 DeclaresMethod;
6371 HasType;
6372 HasParam;
6373 HasType;
6374 DeclaresMethod;
6375 HasType;
6376 DeclaresMethod;
6377 HasType;
6378 HasParam;
6379 HasUpperBound;
6380 HasGenericType;
6381 HasTypeArg;
6382 HasType;
6383 DeclaresMethod;
6384 HasType;
6385 DeclaresMethod;
6386 HasType;
6387 HasParam;
6388 HasBound;
6389 HasTypeParam;
6390 HasGenericType;
6391 HasTypeArg;
6392 HasType;
6393 DeclaresMethod;
6394 HasBound;
6395 HasTypeParam;
6396 HasGenericType;
6397 HasTypeArg;
6398 HasType;
6399 DeclaresMethod;
6400 HasGenericType;
6401 HasTypeArg;
6402 HasType;
6403 HasParam;
6404 HasGenericType;
6405 HasTypeArg;
6406 HasType;
6407 DeclaresMethod;
6408 HasGenericType;
6409 HasTypeArg;
6410 HasType;
6411 DeclaresMethod;
6412 HasType;
6413 HasParam;
6414 HasGenericType;
6415 HasTypeArg;
6416 HasType;
6417 DeclaresMethod;
6418 HasGenericType;
6419 HasTypeArg;
6420 HasType;
6421 DeclaresMethod;
6422 HasType;
6423 HasParam;
6424 Defines 356;
6425 ContainsClassifier;
6426 Imports 9;
6427 Extends;
6428 HasType;
6429 DeclaresField;
6430 HasType;
6431 DeclaresMethod;
6432 HasType;
6433 DeclaresMethod;
6434 HasType;
6435 DeclaresMethod;
6436 HasType;
6437 HasParam;
6438 HasType;
6439 DeclaresMethod;
6440 HasType;
6441 HasParam;
6442 HasUpperBound;
6443 HasGenericType;
6444 HasTypeArg;
6445 HasType;
6446 DeclaresMethod;
6447 HasType;
6448 DeclaresMethod;
6449 HasType;
6450 HasParam;
6451 HasBound;
6452 HasTypeParam;
6453 HasGenericType;
6454 HasTypeArg;
6455 HasType;
6456 DeclaresMethod;
6457 HasBound;
6458 HasTypeParam;
6459 HasGenericType;
6460 HasTypeArg;
6461 HasType;
6462 DeclaresMethod;
6463 HasGenericType;
6464 HasTypeArg;
6465 HasType;
6466 HasParam;
6467 HasGenericType;
6468 HasTypeArg;
6469 HasType;
6470 DeclaresMethod;
6471 HasGenericType;
6472 HasTypeArg;
6473 HasType;
6474 DeclaresMethod;
6475 HasType;
6476 HasParam;
6477 Defines 11;
6478 ContainsClassifier;
6479 Imports 9;
6480 Extends;
6481 Extends;
6482 HasType;
6483 DeclaresField;
6484 HasType;
6485 DeclaresMethod;
6486 HasType;
6487 DeclaresMethod;
6488 HasType;
6489 DeclaresMethod;
6490 HasType;
6491 DeclaresMethod;
6492 HasType;
6493 HasParam;
6494 HasType;
6495 DeclaresMethod;
6496 HasType;
6497 HasParam;
6498 HasUpperBound;
6499 HasGenericType;
6500 HasTypeArg;
6501 HasType;
6502 DeclaresMethod;
6503 HasType;
6504 DeclaresMethod;
6505 HasType;
6506 HasParam;
6507 HasType;
6508 DeclaresMethod;
6509 HasGenericType;
6510 HasTypeArg;
6511 HasType;
6512 DeclaresMethod;
6513 HasGenericType;
6514 HasTypeArg;
6515 HasType;
6516 DeclaresMethod;
6517 HasType;
6518 HasParam;
6519 Defines 11;
6520 ContainsClassifier;
6521 Imports 9;
6522 Extends;
6523 Extends;
6524 HasType;
6525 DeclaresField;
6526 HasType;
6527 DeclaresMethod;
6528 HasType;
6529 DeclaresMethod;
6530 HasType;
6531 DeclaresMethod;
6532 HasType;
6533 DeclaresMethod;
6534 HasType;
6535 DeclaresMethod;
6536 HasType;
6537 DeclaresMethod;
6538 HasType;
6539 HasParam;
6540 HasType;
6541 DeclaresMethod;
6542 HasType;
6543 DeclaresMethod;
6544 HasType;
6545 HasParam;
6546 HasType;
6547 DeclaresMethod;
6548 HasType;
6549 HasParam;
6550 HasUpperBound;
6551 HasGenericType;
6552 HasTypeArg;
6553 HasType;
6554 DeclaresMethod;
6555 HasType;
6556 DeclaresMethod;
6557 HasType;
6558 HasParam;
6559 HasBound;
6560 HasTypeParam;
6561 HasGenericType;
6562 HasTypeArg;
6563 HasType;
6564 DeclaresMethod;
6565 HasBound;
6566 HasTypeParam;
6567 HasGenericType;
6568 HasTypeArg;
6569 HasType;
6570 DeclaresMethod;
6571 HasGenericType;
6572 HasTypeArg;
6573 HasType;
6574 HasParam;
6575 HasType;
6576 DeclaresMethod;
6577 HasType;
6578 HasParam;
6579 HasUpperBound;
6580 HasGenericType;
6581 HasTypeArg;
6582 HasType;
6583 DeclaresMethod;
6584 HasType;
6585 DeclaresMethod;
6586 HasType;
6587 HasParam;
6588 HasType;
6589 DeclaresMethod;
6590 HasType;
6591 DeclaresMethod;
6592 HasType;
6593 HasParam;
6594 HasUpperBound;
6595 HasGenericType;
6596 HasTypeArg;
6597 HasType;
6598 DeclaresMethod;
6599 HasType;
6600 DeclaresMethod;
6601 HasType;
6602 HasParam;
6603 HasBound;
6604 HasTypeParam;
6605 HasGenericType;
6606 HasTypeArg;
6607 HasType;
6608 DeclaresMethod;
6609 HasBound;
6610 HasTypeParam;
6611 HasGenericType;
6612 HasTypeArg;
6613 HasType;
6614 DeclaresMethod;
6615 HasGenericType;
6616 HasTypeArg;
6617 HasType;
6618 HasParam;
6619 HasType;
6620 DeclaresMethod;
6621 HasType;
6622 HasParam;
6623 HasUpperBound;
6624 HasGenericType;
6625 HasTypeArg;
6626 HasType;
6627 DeclaresMethod;
6628 HasType;
6629 DeclaresMethod;
6630 HasType;
6631 HasParam;
6632 HasType;
6633 DeclaresMethod;
6634 HasGenericType;
6635 HasTypeArg;
6636 HasType;
6637 DeclaresMethod;
6638 HasGenericType;
6639 HasTypeArg;
6640 HasType;
6641 DeclaresMethod;
6642 HasType;
6643 HasParam;
6644 HasGenericType;
6645 HasTypeArg;
6646 HasType;
6647 DeclaresMethod;
6648 HasGenericType;
6649 HasTypeArg;
6650 HasType;
6651 DeclaresMethod;
6652 HasType;
6653 HasParam;
6654 Defines 12;
6655 ContainsClassifier;
6656 ContainsPackage;
6657 ContainsPackage;
6658 Imports 9;
6659 Imports 11;
6660 Imports 9;
6661 Imports 9;
6662 Imports 10;
6663 Imports 16;
6664 Imports 18;
6665 Extends;
6666 Implements;
6667 Implements;
6668 Implements;
6669 Implements;
6670 HasGenericType;
6671 HasTypeArg;
6672 HasType;
6673 DeclaresField;
6674 HasType;
6675 DeclaresField;
6676 DeclaresConstructor;
6677 HasType;
6678 HasParam;
6679 HasType;
6680 HasParam;
6681 HasType;
6682 DeclaresMethod;
6683 HasUpperBound;
6684 HasGenericType;
6685 HasTypeArg;
6686 HasType;
6687 DeclaresMethod;
6688 HasTypeParam;
6689 HasType;
6690 DeclaresMethod;
6691 HasType;
6692 HasParam;
6693 HasTypeParam;
6694 HasType;
6695 DeclaresMethod;
6696 HasType;
6697 HasParam;
6698 HasType;
6699 HasParam;
6700 HasGenericType;
6701 HasTypeArg;
6702 HasType;
6703 DeclaresMethod;
6704 HasType;
6705 DeclaresMethod;
6706 HasGenericType;
6707 HasTypeArg;
6708 HasType;
6709 HasParam;
6710 HasType;
6711 DeclaresMethod;
6712 HasType;
6713 DeclaresMethod;
6714 HasType;
6715 HasParam;
6716 HasType;
6717 DeclaresMethod;
6718 HasType;
6719 HasParam;
6720 Throws;
6721 HasType;
6722 DeclaresMethod;
6723 HasType;
6724 HasParam;
6725 HasType;
6726 HasParam;
6727 Throws;
6728 HasType;
6729 DeclaresMethod;
6730 HasType;
6731 HasParam;
6732 Throws;
6733 Throws;
6734 HasType;
6735 DeclaresMethod;
6736 HasType;
6737 HasParam;
6738 Throws;
6739 Throws;
6740 HasType;
6741 DeclaresMethod;
6742 HasType;
6743 DeclaresMethod;
6744 HasType;
6745 DeclaresMethod;
6746 HasType;
6747 DeclaresMethod;
6748 HasType;
6749 DeclaresMethod;
6750 HasType;
6751 DeclaresMethod;
6752 HasType;
6753 DeclaresMethod;
6754 HasType;
6755 HasParam;
6756 HasType;
6757 DeclaresMethod;
6758 HasType;
6759 DeclaresMethod;
6760 HasType;
6761 HasParam;
6762 HasType;
6763 DeclaresMethod;
6764 HasType;
6765 DeclaresMethod;
6766 HasType;
6767 HasParam;
6768 HasType;
6769 DeclaresMethod;
6770 HasType;
6771 DeclaresMethod;
6772 HasType;
6773 HasParam;
6774 HasType;
6775 DeclaresMethod;
6776 HasType;
6777 HasParam;
6778 HasUpperBound;
6779 HasGenericType;
6780 HasTypeArg;
6781 HasType;
6782 DeclaresMethod;
6783 HasType;
6784 DeclaresMethod;
6785 HasType;
6786 HasParam;
6787 HasBound;
6788 HasTypeParam;
6789 HasGenericType;
6790 HasTypeArg;
6791 HasType;
6792 DeclaresMethod;
6793 HasBound;
6794 HasTypeParam;
6795 HasGenericType;
6796 HasTypeArg;
6797 HasType;
6798 DeclaresMethod;
6799 HasGenericType;
6800 HasTypeArg;
6801 HasType;
6802 HasParam;
6803 HasType;
6804 DeclaresMethod;
6805 HasType;
6806 HasParam;
6807 HasUpperBound;
6808 HasGenericType;
6809 HasTypeArg;
6810 HasType;
6811 DeclaresMethod;
6812 HasType;
6813 DeclaresMethod;
6814 HasType;
6815 HasParam;
6816 HasType;
6817 DeclaresMethod;
6818 HasType;
6819 DeclaresMethod;
6820 HasType;
6821 HasParam;
6822 HasUpperBound;
6823 HasGenericType;
6824 HasTypeArg;
6825 HasType;
6826 DeclaresMethod;
6827 HasType;
6828 DeclaresMethod;
6829 HasType;
6830 HasParam;
6831 HasType;
6832 DeclaresMethod;
6833 HasGenericType;
6834 HasTypeArg;
6835 HasType;
6836 DeclaresMethod;
6837 HasGenericType;
6838 HasTypeArg;
6839 HasType;
6840 DeclaresMethod;
6841 HasType;
6842 HasParam;
6843 HasGenericType;
6844 HasTypeArg;
6845 HasType;
6846 DeclaresMethod;
6847 HasGenericType;
6848 HasTypeArg;
6849 HasType;
6850 DeclaresMethod;
6851 HasType;
6852 HasParam;
6853 HasGenericType;
6854 HasTypeArg;
6855 HasType;
6856 DeclaresMethod;
6857 HasGenericType;
6858 HasTypeArg;
6859 HasType;
6860 DeclaresMethod;
6861 HasType;
6862 HasParam;
6863 HasGenericType;
6864 HasTypeArg;
6865 HasType;
6866 DeclaresMethod;
6867 HasGenericType;
6868 HasTypeArg;
6869 HasType;
6870 DeclaresMethod;
6871 HasType;
6872 HasParam;
6873 Defines 20;
6874 ContainsClassifier;
6875 Imports 9;
6876 Imports 11;
6877 Imports 9;
6878 Imports 9;
6879 Imports 10;
6880 Imports 16;
6881 Imports 18;
6882 Extends;
6883 Implements;
6884 Implements;
6885 Implements;
6886 HasGenericType;
6887 HasTypeArg;
6888 HasType;
6889 DeclaresField;
6890 HasType;
6891 DeclaresField;
6892 HasType;
6893 DeclaresField;
6894 DeclaresConstructor;
6895 HasType;
6896 HasParam;
6897 HasType;
6898 HasParam;
6899 HasType;
6900 DeclaresMethod;
6901 HasUpperBound;
6902 HasGenericType;
6903 HasTypeArg;
6904 HasType;
6905 DeclaresMethod;
6906 HasTypeParam;
6907 HasType;
6908 DeclaresMethod;
6909 HasType;
6910 HasParam;
6911 HasTypeParam;
6912 HasType;
6913 DeclaresMethod;
6914 HasType;
6915 HasParam;
6916 HasType;
6917 HasParam;
6918 HasGenericType;
6919 HasTypeArg;
6920 HasType;
6921 DeclaresMethod;
6922 HasType;
6923 DeclaresMethod;
6924 HasGenericType;
6925 HasTypeArg;
6926 HasType;
6927 HasParam;
6928 HasType;
6929 DeclaresMethod;
6930 HasType;
6931 DeclaresMethod;
6932 HasType;
6933 HasParam;
6934 HasType;
6935 DeclaresMethod;
6936 HasType;
6937 DeclaresMethod;
6938 HasType;
6939 HasParam;
6940 HasType;
6941 DeclaresMethod;
6942 HasType;
6943 HasParam;
6944 Throws;
6945 HasType;
6946 DeclaresMethod;
6947 HasType;
6948 HasParam;
6949 HasType;
6950 HasParam;
6951 Throws;
6952 HasType;
6953 DeclaresMethod;
6954 HasType;
6955 HasParam;
6956 Throws;
6957 Throws;
6958 HasType;
6959 DeclaresMethod;
6960 HasType;
6961 HasParam;
6962 Throws;
6963 Throws;
6964 HasType;
6965 DeclaresMethod;
6966 HasType;
6967 DeclaresMethod;
6968 HasType;
6969 DeclaresMethod;
6970 HasType;
6971 DeclaresMethod;
6972 HasType;
6973 DeclaresMethod;
6974 HasType;
6975 DeclaresMethod;
6976 HasType;
6977 DeclaresMethod;
6978 HasType;
6979 DeclaresMethod;
6980 HasType;
6981 DeclaresMethod;
6982 HasType;
6983 DeclaresMethod;
6984 HasType;
6985 DeclaresMethod;
6986 HasType;
6987 HasParam;
6988 HasType;
6989 DeclaresMethod;
6990 HasType;
6991 DeclaresMethod;
6992 HasType;
6993 HasParam;
6994 HasType;
6995 DeclaresMethod;
6996 HasType;
6997 DeclaresMethod;
6998 HasType;
6999 HasParam;
7000 HasType;
7001 DeclaresMethod;
7002 HasType;
7003 DeclaresMethod;
7004 HasType;
7005 HasParam;
7006 HasType;
7007 DeclaresMethod;
7008 HasType;
7009 DeclaresMethod;
7010 HasType;
7011 HasParam;
7012 HasType;
7013 DeclaresMethod;
7014 HasType;
7015 DeclaresMethod;
7016 HasType;
7017 HasParam;
7018 HasType;
7019 DeclaresMethod;
7020 HasType;
7021 DeclaresMethod;
7022 HasType;
7023 HasParam;
7024 HasType;
7025 DeclaresMethod;
7026 HasType;
7027 DeclaresMethod;
7028 HasType;
7029 HasParam;
7030 HasType;
7031 DeclaresMethod;
7032 HasType;
7033 DeclaresMethod;
7034 HasType;
7035 HasParam;
7036 HasType;
7037 DeclaresMethod;
7038 HasType;
7039 DeclaresMethod;
7040 HasType;
7041 HasParam;
7042 HasType;
7043 DeclaresMethod;
7044 HasType;
7045 DeclaresMethod;
7046 HasType;
7047 HasParam;
7048 HasType;
7049 DeclaresMethod;
7050 HasType;
7051 DeclaresMethod;
7052 HasType;
7053 HasParam;
7054 HasType;
7055 DeclaresMethod;
7056 HasType;
7057 DeclaresMethod;
7058 HasType;
7059 HasParam;
7060 HasType;
7061 DeclaresMethod;
7062 HasType;
7063 DeclaresMethod;
7064 HasType;
7065 HasParam;
7066 HasType;
7067 DeclaresMethod;
7068 HasType;
7069 DeclaresMethod;
7070 HasType;
7071 HasParam;
7072 HasType;
7073 DeclaresMethod;
7074 HasType;
7075 DeclaresMethod;
7076 HasType;
7077 HasParam;
7078 HasType;
7079 DeclaresMethod;
7080 HasType;
7081 DeclaresMethod;
7082 HasType;
7083 HasParam;
7084 HasType;
7085 DeclaresMethod;
7086 HasType;
7087 DeclaresMethod;
7088 HasType;
7089 HasParam;
7090 HasType;
7091 DeclaresMethod;
7092 HasType;
7093 DeclaresMethod;
7094 HasType;
7095 HasParam;
7096 HasType;
7097 DeclaresMethod;
7098 HasType;
7099 DeclaresMethod;
7100 HasType;
7101 HasParam;
7102 HasType;
7103 DeclaresMethod;
7104 HasType;
7105 HasParam;
7106 HasUpperBound;
7107 HasGenericType;
7108 HasTypeArg;
7109 HasType;
7110 DeclaresMethod;
7111 HasType;
7112 DeclaresMethod;
7113 HasType;
7114 HasParam;
7115 HasBound;
7116 HasTypeParam;
7117 HasGenericType;
7118 HasTypeArg;
7119 HasType;
7120 DeclaresMethod;
7121 HasBound;
7122 HasTypeParam;
7123 HasGenericType;
7124 HasTypeArg;
7125 HasType;
7126 DeclaresMethod;
7127 HasGenericType;
7128 HasTypeArg;
7129 HasType;
7130 HasParam;
7131 HasType;
7132 DeclaresMethod;
7133 HasType;
7134 HasParam;
7135 HasUpperBound;
7136 HasGenericType;
7137 HasTypeArg;
7138 HasType;
7139 DeclaresMethod;
7140 HasType;
7141 DeclaresMethod;
7142 HasType;
7143 HasParam;
7144 HasBound;
7145 HasTypeParam;
7146 HasGenericType;
7147 HasTypeArg;
7148 HasType;
7149 DeclaresMethod;
7150 HasBound;
7151 HasTypeParam;
7152 HasGenericType;
7153 HasTypeArg;
7154 HasType;
7155 DeclaresMethod;
7156 HasGenericType;
7157 HasTypeArg;
7158 HasType;
7159 HasParam;
7160 HasType;
7161 DeclaresMethod;
7162 HasType;
7163 HasParam;
7164 HasUpperBound;
7165 HasGenericType;
7166 HasTypeArg;
7167 HasType;
7168 DeclaresMethod;
7169 HasType;
7170 DeclaresMethod;
7171 HasType;
7172 HasParam;
7173 HasBound;
7174 HasTypeParam;
7175 HasGenericType;
7176 HasTypeArg;
7177 HasType;
7178 DeclaresMethod;
7179 HasBound;
7180 HasTypeParam;
7181 HasGenericType;
7182 HasTypeArg;
7183 HasType;
7184 DeclaresMethod;
7185 HasGenericType;
7186 HasTypeArg;
7187 HasType;
7188 HasParam;
7189 HasType;
7190 DeclaresMethod;
7191 HasType;
7192 HasParam;
7193 HasUpperBound;
7194 HasGenericType;
7195 HasTypeArg;
7196 HasType;
7197 DeclaresMethod;
7198 HasType;
7199 DeclaresMethod;
7200 HasType;
7201 HasParam;
7202 HasBound;
7203 HasTypeParam;
7204 HasGenericType;
7205 HasTypeArg;
7206 HasType;
7207 DeclaresMethod;
7208 HasBound;
7209 HasTypeParam;
7210 HasGenericType;
7211 HasTypeArg;
7212 HasType;
7213 DeclaresMethod;
7214 HasGenericType;
7215 HasTypeArg;
7216 HasType;
7217 HasParam;
7218 HasType;
7219 DeclaresMethod;
7220 HasType;
7221 HasParam;
7222 HasUpperBound;
7223 HasGenericType;
7224 HasTypeArg;
7225 HasType;
7226 DeclaresMethod;
7227 HasType;
7228 DeclaresMethod;
7229 HasType;
7230 HasParam;
7231 HasType;
7232 DeclaresMethod;
7233 HasType;
7234 DeclaresMethod;
7235 HasType;
7236 HasParam;
7237 HasUpperBound;
7238 HasGenericType;
7239 HasTypeArg;
7240 HasType;
7241 DeclaresMethod;
7242 HasType;
7243 DeclaresMethod;
7244 HasType;
7245 HasParam;
7246 HasBound;
7247 HasTypeParam;
7248 HasGenericType;
7249 HasTypeArg;
7250 HasType;
7251 DeclaresMethod;
7252 HasBound;
7253 HasTypeParam;
7254 HasGenericType;
7255 HasTypeArg;
7256 HasType;
7257 DeclaresMethod;
7258 HasGenericType;
7259 HasTypeArg;
7260 HasType;
7261 HasParam;
7262 HasType;
7263 DeclaresMethod;
7264 HasType;
7265 HasParam;
7266 HasUpperBound;
7267 HasGenericType;
7268 HasTypeArg;
7269 HasType;
7270 DeclaresMethod;
7271 HasType;
7272 DeclaresMethod;
7273 HasType;
7274 HasParam;
7275 HasBound;
7276 HasTypeParam;
7277 HasGenericType;
7278 HasTypeArg;
7279 HasType;
7280 DeclaresMethod;
7281 HasBound;
7282 HasTypeParam;
7283 HasGenericType;
7284 HasTypeArg;
7285 HasType;
7286 DeclaresMethod;
7287 HasGenericType;
7288 HasTypeArg;
7289 HasType;
7290 HasParam;
7291 HasType;
7292 DeclaresMethod;
7293 HasType;
7294 HasParam;
7295 HasUpperBound;
7296 HasGenericType;
7297 HasTypeArg;
7298 HasType;
7299 DeclaresMethod;
7300 HasType;
7301 DeclaresMethod;
7302 HasType;
7303 HasParam;
7304 HasBound;
7305 HasTypeParam;
7306 HasGenericType;
7307 HasTypeArg;
7308 HasType;
7309 DeclaresMethod;
7310 HasBound;
7311 HasTypeParam;
7312 HasGenericType;
7313 HasTypeArg;
7314 HasType;
7315 DeclaresMethod;
7316 HasGenericType;
7317 HasTypeArg;
7318 HasType;
7319 HasParam;
7320 HasType;
7321 DeclaresMethod;
7322 HasType;
7323 HasParam;
7324 HasUpperBound;
7325 HasGenericType;
7326 HasTypeArg;
7327 HasType;
7328 DeclaresMethod;
7329 HasType;
7330 DeclaresMethod;
7331 HasType;
7332 HasParam;
7333 HasBound;
7334 HasTypeParam;
7335 HasGenericType;
7336 HasTypeArg;
7337 HasType;
7338 DeclaresMethod;
7339 HasBound;
7340 HasTypeParam;
7341 HasGenericType;
7342 HasTypeArg;
7343 HasType;
7344 DeclaresMethod;
7345 HasGenericType;
7346 HasTypeArg;
7347 HasType;
7348 HasParam;
7349 HasType;
7350 DeclaresMethod;
7351 HasType;
7352 HasParam;
7353 HasUpperBound;
7354 HasGenericType;
7355 HasTypeArg;
7356 HasType;
7357 DeclaresMethod;
7358 HasType;
7359 DeclaresMethod;
7360 HasType;
7361 HasParam;
7362 HasType;
7363 DeclaresMethod;
7364 HasType;
7365 DeclaresMethod;
7366 HasType;
7367 HasParam;
7368 HasUpperBound;
7369 HasGenericType;
7370 HasTypeArg;
7371 HasType;
7372 DeclaresMethod;
7373 HasType;
7374 DeclaresMethod;
7375 HasType;
7376 HasParam;
7377 HasBound;
7378 HasTypeParam;
7379 HasGenericType;
7380 HasTypeArg;
7381 HasType;
7382 DeclaresMethod;
7383 HasBound;
7384 HasTypeParam;
7385 HasGenericType;
7386 HasTypeArg;
7387 HasType;
7388 DeclaresMethod;
7389 HasGenericType;
7390 HasTypeArg;
7391 HasType;
7392 HasParam;
7393 HasType;
7394 DeclaresMethod;
7395 HasType;
7396 HasParam;
7397 HasUpperBound;
7398 HasGenericType;
7399 HasTypeArg;
7400 HasType;
7401 DeclaresMethod;
7402 HasType;
7403 DeclaresMethod;
7404 HasType;
7405 HasParam;
7406 HasBound;
7407 HasTypeParam;
7408 HasGenericType;
7409 HasTypeArg;
7410 HasType;
7411 DeclaresMethod;
7412 HasBound;
7413 HasTypeParam;
7414 HasGenericType;
7415 HasTypeArg;
7416 HasType;
7417 DeclaresMethod;
7418 HasGenericType;
7419 HasTypeArg;
7420 HasType;
7421 HasParam;
7422 HasType;
7423 DeclaresMethod;
7424 HasType;
7425 HasParam;
7426 HasUpperBound;
7427 HasGenericType;
7428 HasTypeArg;
7429 HasType;
7430 DeclaresMethod;
7431 HasType;
7432 DeclaresMethod;
7433 HasType;
7434 HasParam;
7435 HasBound;
7436 HasTypeParam;
7437 HasGenericType;
7438 HasTypeArg;
7439 HasType;
7440 DeclaresMethod;
7441 HasBound;
7442 HasTypeParam;
7443 HasGenericType;
7444 HasTypeArg;
7445 HasType;
7446 DeclaresMethod;
7447 HasGenericType;
7448 HasTypeArg;
7449 HasType;
7450 HasParam;
7451 HasType;
7452 DeclaresMethod;
7453 HasType;
7454 HasParam;
7455 HasUpperBound;
7456 HasGenericType;
7457 HasTypeArg;
7458 HasType;
7459 DeclaresMethod;
7460 HasType;
7461 DeclaresMethod;
7462 HasType;
7463 HasParam;
7464 HasType;
7465 DeclaresMethod;
7466 HasType;
7467 DeclaresMethod;
7468 HasType;
7469 HasParam;
7470 HasUpperBound;
7471 HasGenericType;
7472 HasTypeArg;
7473 HasType;
7474 DeclaresMethod;
7475 HasType;
7476 DeclaresMethod;
7477 HasType;
7478 HasParam;
7479 HasBound;
7480 HasTypeParam;
7481 HasGenericType;
7482 HasTypeArg;
7483 HasType;
7484 DeclaresMethod;
7485 HasBound;
7486 HasTypeParam;
7487 HasGenericType;
7488 HasTypeArg;
7489 HasType;
7490 DeclaresMethod;
7491 HasGenericType;
7492 HasTypeArg;
7493 HasType;
7494 HasParam;
7495 HasGenericType;
7496 HasTypeArg;
7497 HasType;
7498 DeclaresMethod;
7499 HasGenericType;
7500 HasTypeArg;
7501 HasType;
7502 DeclaresMethod;
7503 HasType;
7504 HasParam;
7505 HasGenericType;
7506 HasTypeArg;
7507 HasType;
7508 DeclaresMethod;
7509 HasGenericType;
7510 HasTypeArg;
7511 HasType;
7512 DeclaresMethod;
7513 HasType;
7514 HasParam;
7515 HasGenericType;
7516 HasTypeArg;
7517 HasType;
7518 DeclaresMethod;
7519 HasGenericType;
7520 HasTypeArg;
7521 HasType;
7522 DeclaresMethod;
7523 HasType;
7524 HasParam;
7525 HasGenericType;
7526 HasTypeArg;
7527 HasType;
7528 DeclaresMethod;
7529 HasGenericType;
7530 HasTypeArg;
7531 HasType;
7532 DeclaresMethod;
7533 HasType;
7534 HasParam;
7535 HasGenericType;
7536 HasTypeArg;
7537 HasType;
7538 DeclaresMethod;
7539 HasGenericType;
7540 HasTypeArg;
7541 HasType;
7542 DeclaresMethod;
7543 HasType;
7544 HasParam;
7545 HasGenericType;
7546 HasTypeArg;
7547 HasType;
7548 DeclaresMethod;
7549 HasGenericType;
7550 HasTypeArg;
7551 HasType;
7552 DeclaresMethod;
7553 HasType;
7554 HasParam;
7555 HasGenericType;
7556 HasTypeArg;
7557 HasType;
7558 DeclaresMethod;
7559 HasGenericType;
7560 HasTypeArg;
7561 HasType;
7562 DeclaresMethod;
7563 HasType;
7564 HasParam;
7565 HasGenericType;
7566 HasTypeArg;
7567 HasType;
7568 DeclaresMethod;
7569 HasGenericType;
7570 HasTypeArg;
7571 HasType;
7572 DeclaresMethod;
7573 HasType;
7574 HasParam;
7575 HasGenericType;
7576 HasTypeArg;
7577 HasType;
7578 DeclaresMethod;
7579 HasGenericType;
7580 HasTypeArg;
7581 HasType;
7582 DeclaresMethod;
7583 HasType;
7584 HasParam;
7585 HasGenericType;
7586 HasTypeArg;
7587 HasType;
7588 DeclaresMethod;
7589 HasGenericType;
7590 HasTypeArg;
7591 HasType;
7592 DeclaresMethod;
7593 HasType;
7594 HasParam;
7595 HasGenericType;
7596 HasTypeArg;
7597 HasType;
7598 DeclaresMethod;
7599 HasGenericType;
7600 HasTypeArg;
7601 HasType;
7602 DeclaresMethod;
7603 HasType;
7604 HasParam;
7605 HasGenericType;
7606 HasTypeArg;
7607 HasType;
7608 DeclaresMethod;
7609 HasGenericType;
7610 HasTypeArg;
7611 HasType;
7612 DeclaresMethod;
7613 HasType;
7614 HasParam;
7615 HasGenericType;
7616 HasTypeArg;
7617 HasType;
7618 DeclaresMethod;
7619 HasGenericType;
7620 HasTypeArg;
7621 HasType;
7622 DeclaresMethod;
7623 HasType;
7624 HasParam;
7625 HasGenericType;
7626 HasTypeArg;
7627 HasType;
7628 DeclaresMethod;
7629 HasGenericType;
7630 HasTypeArg;
7631 HasType;
7632 DeclaresMethod;
7633 HasType;
7634 HasParam;
7635 HasGenericType;
7636 HasTypeArg;
7637 HasType;
7638 DeclaresMethod;
7639 HasGenericType;
7640 HasTypeArg;
7641 HasType;
7642 DeclaresMethod;
7643 HasType;
7644 HasParam;
7645 HasGenericType;
7646 HasTypeArg;
7647 HasType;
7648 DeclaresMethod;
7649 HasGenericType;
7650 HasTypeArg;
7651 HasType;
7652 DeclaresMethod;
7653 HasType;
7654 HasParam;
7655 HasGenericType;
7656 HasTypeArg;
7657 HasType;
7658 DeclaresMethod;
7659 HasGenericType;
7660 HasTypeArg;
7661 HasType;
7662 DeclaresMethod;
7663 HasType;
7664 HasParam;
7665 HasGenericType;
7666 HasTypeArg;
7667 HasType;
7668 DeclaresMethod;
7669 HasGenericType;
7670 HasTypeArg;
7671 HasType;
7672 DeclaresMethod;
7673 HasType;
7674 HasParam;
7675 HasGenericType;
7676 HasTypeArg;
7677 HasType;
7678 DeclaresMethod;
7679 HasGenericType;
7680 HasTypeArg;
7681 HasType;
7682 DeclaresMethod;
7683 HasType;
7684 HasParam;
7685 HasGenericType;
7686 HasTypeArg;
7687 HasType;
7688 DeclaresMethod;
7689 HasGenericType;
7690 HasTypeArg;
7691 HasType;
7692 DeclaresMethod;
7693 HasType;
7694 HasParam;
7695 Defines 20;
7696 ContainsClassifier;
7697 Imports 9;
7698 Imports 11;
7699 Imports 9;
7700 Imports 9;
7701 Imports 10;
7702 Imports 16;
7703 Imports 18;
7704 Extends;
7705 Implements;
7706 Implements;
7707 Implements;
7708 HasType;
7709 DeclaresField;
7710 HasType;
7711 DeclaresField;
7712 HasType;
7713 DeclaresField;
7714 DeclaresConstructor;
7715 HasType;
7716 HasParam;
7717 HasType;
7718 HasParam;
7719 HasType;
7720 DeclaresMethod;
7721 HasUpperBound;
7722 HasGenericType;
7723 HasTypeArg;
7724 HasType;
7725 DeclaresMethod;
7726 HasTypeParam;
7727 HasType;
7728 DeclaresMethod;
7729 HasType;
7730 HasParam;
7731 HasTypeParam;
7732 HasType;
7733 DeclaresMethod;
7734 HasType;
7735 HasParam;
7736 HasType;
7737 HasParam;
7738 HasType;
7739 DeclaresMethod;
7740 HasType;
7741 DeclaresMethod;
7742 HasType;
7743 HasParam;
7744 HasType;
7745 DeclaresMethod;
7746 HasType;
7747 DeclaresMethod;
7748 HasType;
7749 HasParam;
7750 HasType;
7751 DeclaresMethod;
7752 HasType;
7753 DeclaresMethod;
7754 HasType;
7755 HasParam;
7756 HasType;
7757 DeclaresMethod;
7758 HasType;
7759 HasParam;
7760 Throws;
7761 HasType;
7762 DeclaresMethod;
7763 HasType;
7764 HasParam;
7765 HasType;
7766 HasParam;
7767 Throws;
7768 HasType;
7769 DeclaresMethod;
7770 HasType;
7771 HasParam;
7772 Throws;
7773 Throws;
7774 HasType;
7775 DeclaresMethod;
7776 HasType;
7777 HasParam;
7778 Throws;
7779 Throws;
7780 HasType;
7781 DeclaresMethod;
7782 HasType;
7783 DeclaresMethod;
7784 HasType;
7785 DeclaresMethod;
7786 HasType;
7787 DeclaresMethod;
7788 HasType;
7789 DeclaresMethod;
7790 HasType;
7791 DeclaresMethod;
7792 HasType;
7793 HasParam;
7794 HasType;
7795 DeclaresMethod;
7796 HasType;
7797 DeclaresMethod;
7798 HasType;
7799 HasParam;
7800 HasType;
7801 DeclaresMethod;
7802 HasType;
7803 DeclaresMethod;
7804 HasType;
7805 HasParam;
7806 HasType;
7807 DeclaresMethod;
7808 HasType;
7809 DeclaresMethod;
7810 HasType;
7811 HasParam;
7812 HasType;
7813 DeclaresMethod;
7814 HasType;
7815 DeclaresMethod;
7816 HasType;
7817 HasParam;
7818 HasType;
7819 DeclaresMethod;
7820 HasType;
7821 DeclaresMethod;
7822 HasType;
7823 HasParam;
7824 HasType;
7825 DeclaresMethod;
7826 HasType;
7827 DeclaresMethod;
7828 HasType;
7829 HasParam;
7830 HasType;
7831 DeclaresMethod;
7832 HasType;
7833 DeclaresMethod;
7834 HasType;
7835 HasParam;
7836 HasType;
7837 DeclaresMethod;
7838 HasType;
7839 HasParam;
7840 HasUpperBound;
7841 HasGenericType;
7842 HasTypeArg;
7843 HasType;
7844 DeclaresMethod;
7845 HasType;
7846 DeclaresMethod;
7847 HasType;
7848 HasParam;
7849 HasBound;
7850 HasTypeParam;
7851 HasGenericType;
7852 HasTypeArg;
7853 HasType;
7854 DeclaresMethod;
7855 HasBound;
7856 HasTypeParam;
7857 HasGenericType;
7858 HasTypeArg;
7859 HasType;
7860 DeclaresMethod;
7861 HasGenericType;
7862 HasTypeArg;
7863 HasType;
7864 HasParam;
7865 HasType;
7866 DeclaresMethod;
7867 HasType;
7868 HasParam;
7869 HasUpperBound;
7870 HasGenericType;
7871 HasTypeArg;
7872 HasType;
7873 DeclaresMethod;
7874 HasType;
7875 DeclaresMethod;
7876 HasType;
7877 HasParam;
7878 HasType;
7879 DeclaresMethod;
7880 HasType;
7881 DeclaresMethod;
7882 HasType;
7883 HasParam;
7884 HasUpperBound;
7885 HasGenericType;
7886 HasTypeArg;
7887 HasType;
7888 DeclaresMethod;
7889 HasType;
7890 DeclaresMethod;
7891 HasType;
7892 HasParam;
7893 HasBound;
7894 HasTypeParam;
7895 HasGenericType;
7896 HasTypeArg;
7897 HasType;
7898 DeclaresMethod;
7899 HasBound;
7900 HasTypeParam;
7901 HasGenericType;
7902 HasTypeArg;
7903 HasType;
7904 DeclaresMethod;
7905 HasGenericType;
7906 HasTypeArg;
7907 HasType;
7908 HasParam;
7909 HasGenericType;
7910 HasTypeArg;
7911 HasType;
7912 DeclaresMethod;
7913 HasGenericType;
7914 HasTypeArg;
7915 HasType;
7916 DeclaresMethod;
7917 HasType;
7918 HasParam;
7919 HasGenericType;
7920 HasTypeArg;
7921 HasType;
7922 DeclaresMethod;
7923 HasGenericType;
7924 HasTypeArg;
7925 HasType;
7926 DeclaresMethod;
7927 HasType;
7928 HasParam;
7929 HasGenericType;
7930 HasTypeArg;
7931 HasType;
7932 DeclaresMethod;
7933 HasGenericType;
7934 HasTypeArg;
7935 HasType;
7936 DeclaresMethod;
7937 HasType;
7938 HasParam;
7939 HasGenericType;
7940 HasTypeArg;
7941 HasType;
7942 DeclaresMethod;
7943 HasGenericType;
7944 HasTypeArg;
7945 HasType;
7946 DeclaresMethod;
7947 HasType;
7948 HasParam;
7949 HasGenericType;
7950 HasTypeArg;
7951 HasType;
7952 DeclaresMethod;
7953 HasGenericType;
7954 HasTypeArg;
7955 HasType;
7956 DeclaresMethod;
7957 HasType;
7958 HasParam;
7959 HasGenericType;
7960 HasTypeArg;
7961 HasType;
7962 DeclaresMethod;
7963 HasGenericType;
7964 HasTypeArg;
7965 HasType;
7966 DeclaresMethod;
7967 HasType;
7968 HasParam;
7969 HasGenericType;
7970 HasTypeArg;
7971 HasType;
7972 DeclaresMethod;
7973 HasGenericType;
7974 HasTypeArg;
7975 HasType;
7976 DeclaresMethod;
7977 HasType;
7978 HasParam;
7979 HasGenericType;
7980 HasTypeArg;
7981 HasType;
7982 DeclaresMethod;
7983 HasGenericType;
7984 HasTypeArg;
7985 HasType;
7986 DeclaresMethod;
7987 HasType;
7988 HasParam;
7989 Defines 20;
7990 ContainsClassifier;
7991 Imports 9;
7992 Imports 11;
7993 Imports 9;
7994 Imports 9;
7995 Imports 10;
7996 Imports 16;
7997 Imports 18;
7998 Extends;
7999 Implements;
8000 Implements;
8001 Implements;
8002 HasGenericType;
8003 HasTypeArg;
8004 HasType;
8005 DeclaresField;
8006 HasType;
8007 DeclaresField;
8008 HasType;
8009 DeclaresField;
8010 DeclaresConstructor;
8011 HasType;
8012 HasParam;
8013 HasType;
8014 HasParam;
8015 HasType;
8016 DeclaresMethod;
8017 HasUpperBound;
8018 HasGenericType;
8019 HasTypeArg;
8020 HasType;
8021 DeclaresMethod;
8022 HasTypeParam;
8023 HasType;
8024 DeclaresMethod;
8025 HasType;
8026 HasParam;
8027 HasTypeParam;
8028 HasType;
8029 DeclaresMethod;
8030 HasType;
8031 HasParam;
8032 HasType;
8033 HasParam;
8034 HasGenericType;
8035 HasTypeArg;
8036 HasType;
8037 DeclaresMethod;
8038 HasType;
8039 DeclaresMethod;
8040 HasGenericType;
8041 HasTypeArg;
8042 HasType;
8043 HasParam;
8044 HasType;
8045 DeclaresMethod;
8046 HasType;
8047 DeclaresMethod;
8048 HasType;
8049 HasParam;
8050 HasType;
8051 DeclaresMethod;
8052 HasType;
8053 DeclaresMethod;
8054 HasType;
8055 HasParam;
8056 HasType;
8057 DeclaresMethod;
8058 HasType;
8059 HasParam;
8060 Throws;
8061 HasType;
8062 DeclaresMethod;
8063 HasType;
8064 HasParam;
8065 HasType;
8066 HasParam;
8067 Throws;
8068 HasType;
8069 DeclaresMethod;
8070 HasType;
8071 HasParam;
8072 Throws;
8073 Throws;
8074 HasType;
8075 DeclaresMethod;
8076 HasType;
8077 HasParam;
8078 Throws;
8079 Throws;
8080 HasType;
8081 DeclaresMethod;
8082 HasType;
8083 DeclaresMethod;
8084 HasType;
8085 DeclaresMethod;
8086 HasType;
8087 DeclaresMethod;
8088 HasType;
8089 DeclaresMethod;
8090 HasType;
8091 DeclaresMethod;
8092 HasType;
8093 DeclaresMethod;
8094 HasType;
8095 DeclaresMethod;
8096 HasType;
8097 DeclaresMethod;
8098 HasType;
8099 DeclaresMethod;
8100 HasType;
8101 DeclaresMethod;
8102 HasType;
8103 HasParam;
8104 HasType;
8105 DeclaresMethod;
8106 HasType;
8107 DeclaresMethod;
8108 HasType;
8109 HasParam;
8110 HasType;
8111 DeclaresMethod;
8112 HasType;
8113 DeclaresMethod;
8114 HasType;
8115 HasParam;
8116 HasType;
8117 DeclaresMethod;
8118 HasType;
8119 DeclaresMethod;
8120 HasType;
8121 HasParam;
8122 HasType;
8123 DeclaresMethod;
8124 HasType;
8125 DeclaresMethod;
8126 HasType;
8127 HasParam;
8128 HasType;
8129 DeclaresMethod;
8130 HasType;
8131 DeclaresMethod;
8132 HasType;
8133 HasParam;
8134 HasType;
8135 DeclaresMethod;
8136 HasType;
8137 DeclaresMethod;
8138 HasType;
8139 HasParam;
8140 HasType;
8141 DeclaresMethod;
8142 HasType;
8143 DeclaresMethod;
8144 HasType;
8145 HasParam;
8146 HasType;
8147 DeclaresMethod;
8148 HasType;
8149 DeclaresMethod;
8150 HasType;
8151 HasParam;
8152 HasType;
8153 DeclaresMethod;
8154 HasType;
8155 DeclaresMethod;
8156 HasType;
8157 HasParam;
8158 HasType;
8159 DeclaresMethod;
8160 HasType;
8161 DeclaresMethod;
8162 HasType;
8163 HasParam;
8164 HasType;
8165 DeclaresMethod;
8166 HasType;
8167 DeclaresMethod;
8168 HasType;
8169 HasParam;
8170 HasType;
8171 DeclaresMethod;
8172 HasType;
8173 DeclaresMethod;
8174 HasType;
8175 HasParam;
8176 HasType;
8177 DeclaresMethod;
8178 HasType;
8179 DeclaresMethod;
8180 HasType;
8181 HasParam;
8182 HasType;
8183 DeclaresMethod;
8184 HasType;
8185 DeclaresMethod;
8186 HasType;
8187 HasParam;
8188 HasType;
8189 DeclaresMethod;
8190 HasType;
8191 DeclaresMethod;
8192 HasType;
8193 HasParam;
8194 HasType;
8195 DeclaresMethod;
8196 HasType;
8197 DeclaresMethod;
8198 HasType;
8199 HasParam;
8200 HasType;
8201 DeclaresMethod;
8202 HasType;
8203 DeclaresMethod;
8204 HasType;
8205 HasParam;
8206 HasType;
8207 DeclaresMethod;
8208 HasType;
8209 DeclaresMethod;
8210 HasType;
8211 HasParam;
8212 HasType;
8213 DeclaresMethod;
8214 HasType;
8215 HasParam;
8216 HasUpperBound;
8217 HasGenericType;
8218 HasTypeArg;
8219 HasType;
8220 DeclaresMethod;
8221 HasType;
8222 DeclaresMethod;
8223 HasType;
8224 HasParam;
8225 HasBound;
8226 HasTypeParam;
8227 HasGenericType;
8228 HasTypeArg;
8229 HasType;
8230 DeclaresMethod;
8231 HasBound;
8232 HasTypeParam;
8233 HasGenericType;
8234 HasTypeArg;
8235 HasType;
8236 DeclaresMethod;
8237 HasGenericType;
8238 HasTypeArg;
8239 HasType;
8240 HasParam;
8241 HasType;
8242 DeclaresMethod;
8243 HasType;
8244 HasParam;
8245 HasUpperBound;
8246 HasGenericType;
8247 HasTypeArg;
8248 HasType;
8249 DeclaresMethod;
8250 HasType;
8251 DeclaresMethod;
8252 HasType;
8253 HasParam;
8254 HasBound;
8255 HasTypeParam;
8256 HasGenericType;
8257 HasTypeArg;
8258 HasType;
8259 DeclaresMethod;
8260 HasBound;
8261 HasTypeParam;
8262 HasGenericType;
8263 HasTypeArg;
8264 HasType;
8265 DeclaresMethod;
8266 HasGenericType;
8267 HasTypeArg;
8268 HasType;
8269 HasParam;
8270 HasType;
8271 DeclaresMethod;
8272 HasType;
8273 HasParam;
8274 HasUpperBound;
8275 HasGenericType;
8276 HasTypeArg;
8277 HasType;
8278 DeclaresMethod;
8279 HasType;
8280 DeclaresMethod;
8281 HasType;
8282 HasParam;
8283 HasBound;
8284 HasTypeParam;
8285 HasGenericType;
8286 HasTypeArg;
8287 HasType;
8288 DeclaresMethod;
8289 HasBound;
8290 HasTypeParam;
8291 HasGenericType;
8292 HasTypeArg;
8293 HasType;
8294 DeclaresMethod;
8295 HasGenericType;
8296 HasTypeArg;
8297 HasType;
8298 HasParam;
8299 HasType;
8300 DeclaresMethod;
8301 HasType;
8302 HasParam;
8303 HasUpperBound;
8304 HasGenericType;
8305 HasTypeArg;
8306 HasType;
8307 DeclaresMethod;
8308 HasType;
8309 DeclaresMethod;
8310 HasType;
8311 HasParam;
8312 HasType;
8313 DeclaresMethod;
8314 HasType;
8315 DeclaresMethod;
8316 HasType;
8317 HasParam;
8318 HasUpperBound;
8319 HasGenericType;
8320 HasTypeArg;
8321 HasType;
8322 DeclaresMethod;
8323 HasType;
8324 DeclaresMethod;
8325 HasType;
8326 HasParam;
8327 HasBound;
8328 HasTypeParam;
8329 HasGenericType;
8330 HasTypeArg;
8331 HasType;
8332 DeclaresMethod;
8333 HasBound;
8334 HasTypeParam;
8335 HasGenericType;
8336 HasTypeArg;
8337 HasType;
8338 DeclaresMethod;
8339 HasGenericType;
8340 HasTypeArg;
8341 HasType;
8342 HasParam;
8343 HasType;
8344 DeclaresMethod;
8345 HasType;
8346 HasParam;
8347 HasUpperBound;
8348 HasGenericType;
8349 HasTypeArg;
8350 HasType;
8351 DeclaresMethod;
8352 HasType;
8353 DeclaresMethod;
8354 HasType;
8355 HasParam;
8356 HasBound;
8357 HasTypeParam;
8358 HasGenericType;
8359 HasTypeArg;
8360 HasType;
8361 DeclaresMethod;
8362 HasBound;
8363 HasTypeParam;
8364 HasGenericType;
8365 HasTypeArg;
8366 HasType;
8367 DeclaresMethod;
8368 HasGenericType;
8369 HasTypeArg;
8370 HasType;
8371 HasParam;
8372 HasType;
8373 DeclaresMethod;
8374 HasType;
8375 HasParam;
8376 HasUpperBound;
8377 HasGenericType;
8378 HasTypeArg;
8379 HasType;
8380 DeclaresMethod;
8381 HasType;
8382 DeclaresMethod;
8383 HasType;
8384 HasParam;
8385 HasBound;
8386 HasTypeParam;
8387 HasGenericType;
8388 HasTypeArg;
8389 HasType;
8390 DeclaresMethod;
8391 HasBound;
8392 HasTypeParam;
8393 HasGenericType;
8394 HasTypeArg;
8395 HasType;
8396 DeclaresMethod;
8397 HasGenericType;
8398 HasTypeArg;
8399 HasType;
8400 HasParam;
8401 HasType;
8402 DeclaresMethod;
8403 HasType;
8404 HasParam;
8405 HasUpperBound;
8406 HasGenericType;
8407 HasTypeArg;
8408 HasType;
8409 DeclaresMethod;
8410 HasType;
8411 DeclaresMethod;
8412 HasType;
8413 HasParam;
8414 HasBound;
8415 HasTypeParam;
8416 HasGenericType;
8417 HasTypeArg;
8418 HasType;
8419 DeclaresMethod;
8420 HasBound;
8421 HasTypeParam;
8422 HasGenericType;
8423 HasTypeArg;
8424 HasType;
8425 DeclaresMethod;
8426 HasGenericType;
8427 HasTypeArg;
8428 HasType;
8429 HasParam;
8430 HasType;
8431 DeclaresMethod;
8432 HasType;
8433 HasParam;
8434 HasUpperBound;
8435 HasGenericType;
8436 HasTypeArg;
8437 HasType;
8438 DeclaresMethod;
8439 HasType;
8440 DeclaresMethod;
8441 HasType;
8442 HasParam;
8443 HasType;
8444 DeclaresMethod;
8445 HasType;
8446 DeclaresMethod;
8447 HasType;
8448 HasParam;
8449 HasUpperBound;
8450 HasGenericType;
8451 HasTypeArg;
8452 HasType;
8453 DeclaresMethod;
8454 HasType;
8455 DeclaresMethod;
8456 HasType;
8457 HasParam;
8458 HasBound;
8459 HasTypeParam;
8460 HasGenericType;
8461 HasTypeArg;
8462 HasType;
8463 DeclaresMethod;
8464 HasBound;
8465 HasTypeParam;
8466 HasGenericType;
8467 HasTypeArg;
8468 HasType;
8469 DeclaresMethod;
8470 HasGenericType;
8471 HasTypeArg;
8472 HasType;
8473 HasParam;
8474 HasType;
8475 DeclaresMethod;
8476 HasType;
8477 HasParam;
8478 HasUpperBound;
8479 HasGenericType;
8480 HasTypeArg;
8481 HasType;
8482 DeclaresMethod;
8483 HasType;
8484 DeclaresMethod;
8485 HasType;
8486 HasParam;
8487 HasBound;
8488 HasTypeParam;
8489 HasGenericType;
8490 HasTypeArg;
8491 HasType;
8492 DeclaresMethod;
8493 HasBound;
8494 HasTypeParam;
8495 HasGenericType;
8496 HasTypeArg;
8497 HasType;
8498 DeclaresMethod;
8499 HasGenericType;
8500 HasTypeArg;
8501 HasType;
8502 HasParam;
8503 HasType;
8504 DeclaresMethod;
8505 HasType;
8506 HasParam;
8507 HasUpperBound;
8508 HasGenericType;
8509 HasTypeArg;
8510 HasType;
8511 DeclaresMethod;
8512 HasType;
8513 DeclaresMethod;
8514 HasType;
8515 HasParam;
8516 HasBound;
8517 HasTypeParam;
8518 HasGenericType;
8519 HasTypeArg;
8520 HasType;
8521 DeclaresMethod;
8522 HasBound;
8523 HasTypeParam;
8524 HasGenericType;
8525 HasTypeArg;
8526 HasType;
8527 DeclaresMethod;
8528 HasGenericType;
8529 HasTypeArg;
8530 HasType;
8531 HasParam;
8532 HasType;
8533 DeclaresMethod;
8534 HasType;
8535 HasParam;
8536 HasUpperBound;
8537 HasGenericType;
8538 HasTypeArg;
8539 HasType;
8540 DeclaresMethod;
8541 HasType;
8542 DeclaresMethod;
8543 HasType;
8544 HasParam;
8545 HasType;
8546 DeclaresMethod;
8547 HasType;
8548 DeclaresMethod;
8549 HasType;
8550 HasParam;
8551 HasUpperBound;
8552 HasGenericType;
8553 HasTypeArg;
8554 HasType;
8555 DeclaresMethod;
8556 HasType;
8557 DeclaresMethod;
8558 HasType;
8559 HasParam;
8560 HasBound;
8561 HasTypeParam;
8562 HasGenericType;
8563 HasTypeArg;
8564 HasType;
8565 DeclaresMethod;
8566 HasBound;
8567 HasTypeParam;
8568 HasGenericType;
8569 HasTypeArg;
8570 HasType;
8571 DeclaresMethod;
8572 HasGenericType;
8573 HasTypeArg;
8574 HasType;
8575 HasParam;
8576 HasGenericType;
8577 HasTypeArg;
8578 HasType;
8579 DeclaresMethod;
8580 HasGenericType;
8581 HasTypeArg;
8582 HasType;
8583 DeclaresMethod;
8584 HasType;
8585 HasParam;
8586 HasGenericType;
8587 HasTypeArg;
8588 HasType;
8589 DeclaresMethod;
8590 HasGenericType;
8591 HasTypeArg;
8592 HasType;
8593 DeclaresMethod;
8594 HasType;
8595 HasParam;
8596 HasGenericType;
8597 HasTypeArg;
8598 HasType;
8599 DeclaresMethod;
8600 HasGenericType;
8601 HasTypeArg;
8602 HasType;
8603 DeclaresMethod;
8604 HasType;
8605 HasParam;
8606 HasGenericType;
8607 HasTypeArg;
8608 HasType;
8609 DeclaresMethod;
8610 HasGenericType;
8611 HasTypeArg;
8612 HasType;
8613 DeclaresMethod;
8614 HasType;
8615 HasParam;
8616 HasGenericType;
8617 HasTypeArg;
8618 HasType;
8619 DeclaresMethod;
8620 HasGenericType;
8621 HasTypeArg;
8622 HasType;
8623 DeclaresMethod;
8624 HasType;
8625 HasParam;
8626 HasGenericType;
8627 HasTypeArg;
8628 HasType;
8629 DeclaresMethod;
8630 HasGenericType;
8631 HasTypeArg;
8632 HasType;
8633 DeclaresMethod;
8634 HasType;
8635 HasParam;
8636 HasGenericType;
8637 HasTypeArg;
8638 HasType;
8639 DeclaresMethod;
8640 HasGenericType;
8641 HasTypeArg;
8642 HasType;
8643 DeclaresMethod;
8644 HasType;
8645 HasParam;
8646 HasGenericType;
8647 HasTypeArg;
8648 HasType;
8649 DeclaresMethod;
8650 HasGenericType;
8651 HasTypeArg;
8652 HasType;
8653 DeclaresMethod;
8654 HasType;
8655 HasParam;
8656 HasGenericType;
8657 HasTypeArg;
8658 HasType;
8659 DeclaresMethod;
8660 HasGenericType;
8661 HasTypeArg;
8662 HasType;
8663 DeclaresMethod;
8664 HasType;
8665 HasParam;
8666 HasGenericType;
8667 HasTypeArg;
8668 HasType;
8669 DeclaresMethod;
8670 HasGenericType;
8671 HasTypeArg;
8672 HasType;
8673 DeclaresMethod;
8674 HasType;
8675 HasParam;
8676 HasGenericType;
8677 HasTypeArg;
8678 HasType;
8679 DeclaresMethod;
8680 HasGenericType;
8681 HasTypeArg;
8682 HasType;
8683 DeclaresMethod;
8684 HasType;
8685 HasParam;
8686 HasGenericType;
8687 HasTypeArg;
8688 HasType;
8689 DeclaresMethod;
8690 HasGenericType;
8691 HasTypeArg;
8692 HasType;
8693 DeclaresMethod;
8694 HasType;
8695 HasParam;
8696 HasGenericType;
8697 HasTypeArg;
8698 HasType;
8699 DeclaresMethod;
8700 HasGenericType;
8701 HasTypeArg;
8702 HasType;
8703 DeclaresMethod;
8704 HasType;
8705 HasParam;
8706 HasGenericType;
8707 HasTypeArg;
8708 HasType;
8709 DeclaresMethod;
8710 HasGenericType;
8711 HasTypeArg;
8712 HasType;
8713 DeclaresMethod;
8714 HasType;
8715 HasParam;
8716 HasGenericType;
8717 HasTypeArg;
8718 HasType;
8719 DeclaresMethod;
8720 HasGenericType;
8721 HasTypeArg;
8722 HasType;
8723 DeclaresMethod;
8724 HasType;
8725 HasParam;
8726 HasGenericType;
8727 HasTypeArg;
8728 HasType;
8729 DeclaresMethod;
8730 HasGenericType;
8731 HasTypeArg;
8732 HasType;
8733 DeclaresMethod;
8734 HasType;
8735 HasParam;
8736 HasGenericType;
8737 HasTypeArg;
8738 HasType;
8739 DeclaresMethod;
8740 HasGenericType;
8741 HasTypeArg;
8742 HasType;
8743 DeclaresMethod;
8744 HasType;
8745 HasParam;
8746 HasGenericType;
8747 HasTypeArg;
8748 HasType;
8749 DeclaresMethod;
8750 HasGenericType;
8751 HasTypeArg;
8752 HasType;
8753 DeclaresMethod;
8754 HasType;
8755 HasParam;
8756 HasGenericType;
8757 HasTypeArg;
8758 HasType;
8759 DeclaresMethod;
8760 HasGenericType;
8761 HasTypeArg;
8762 HasType;
8763 DeclaresMethod;
8764 HasType;
8765 HasParam;
8766 Defines 20;
8767 ContainsClassifier;
8768 Imports 9;
8769 Imports 11;
8770 Imports 9;
8771 Imports 9;
8772 Imports 10;
8773 Imports 16;
8774 Imports 18;
8775 Extends;
8776 Implements;
8777 Implements;
8778 Implements;
8779 HasGenericType;
8780 HasTypeArg;
8781 HasType;
8782 DeclaresField;
8783 HasType;
8784 DeclaresField;
8785 DeclaresConstructor;
8786 HasType;
8787 HasParam;
8788 HasType;
8789 HasParam;
8790 HasType;
8791 DeclaresMethod;
8792 HasUpperBound;
8793 HasGenericType;
8794 HasTypeArg;
8795 HasType;
8796 DeclaresMethod;
8797 HasTypeParam;
8798 HasType;
8799 DeclaresMethod;
8800 HasType;
8801 HasParam;
8802 HasTypeParam;
8803 HasType;
8804 DeclaresMethod;
8805 HasType;
8806 HasParam;
8807 HasType;
8808 HasParam;
8809 HasGenericType;
8810 HasTypeArg;
8811 HasType;
8812 DeclaresMethod;
8813 HasType;
8814 DeclaresMethod;
8815 HasGenericType;
8816 HasTypeArg;
8817 HasType;
8818 HasParam;
8819 HasType;
8820 DeclaresMethod;
8821 HasType;
8822 DeclaresMethod;
8823 HasType;
8824 HasParam;
8825 HasType;
8826 DeclaresMethod;
8827 HasType;
8828 HasParam;
8829 Throws;
8830 HasType;
8831 DeclaresMethod;
8832 HasType;
8833 HasParam;
8834 HasType;
8835 HasParam;
8836 Throws;
8837 HasType;
8838 DeclaresMethod;
8839 HasType;
8840 HasParam;
8841 Throws;
8842 Throws;
8843 HasType;
8844 DeclaresMethod;
8845 HasType;
8846 HasParam;
8847 Throws;
8848 Throws;
8849 HasType;
8850 DeclaresMethod;
8851 HasType;
8852 DeclaresMethod;
8853 HasType;
8854 DeclaresMethod;
8855 HasType;
8856 DeclaresMethod;
8857 HasType;
8858 DeclaresMethod;
8859 HasType;
8860 DeclaresMethod;
8861 HasType;
8862 DeclaresMethod;
8863 HasType;
8864 DeclaresMethod;
8865 HasType;
8866 HasParam;
8867 HasType;
8868 DeclaresMethod;
8869 HasType;
8870 DeclaresMethod;
8871 HasType;
8872 HasParam;
8873 HasType;
8874 DeclaresMethod;
8875 HasType;
8876 DeclaresMethod;
8877 HasType;
8878 HasParam;
8879 HasType;
8880 DeclaresMethod;
8881 HasType;
8882 DeclaresMethod;
8883 HasType;
8884 HasParam;
8885 HasType;
8886 DeclaresMethod;
8887 HasType;
8888 DeclaresMethod;
8889 HasType;
8890 HasParam;
8891 HasType;
8892 DeclaresMethod;
8893 HasType;
8894 DeclaresMethod;
8895 HasType;
8896 HasParam;
8897 HasType;
8898 DeclaresMethod;
8899 HasType;
8900 HasParam;
8901 HasUpperBound;
8902 HasGenericType;
8903 HasTypeArg;
8904 HasType;
8905 DeclaresMethod;
8906 HasType;
8907 DeclaresMethod;
8908 HasType;
8909 HasParam;
8910 HasBound;
8911 HasTypeParam;
8912 HasGenericType;
8913 HasTypeArg;
8914 HasType;
8915 DeclaresMethod;
8916 HasBound;
8917 HasTypeParam;
8918 HasGenericType;
8919 HasTypeArg;
8920 HasType;
8921 DeclaresMethod;
8922 HasGenericType;
8923 HasTypeArg;
8924 HasType;
8925 HasParam;
8926 HasType;
8927 DeclaresMethod;
8928 HasType;
8929 HasParam;
8930 HasUpperBound;
8931 HasGenericType;
8932 HasTypeArg;
8933 HasType;
8934 DeclaresMethod;
8935 HasType;
8936 DeclaresMethod;
8937 HasType;
8938 HasParam;
8939 HasBound;
8940 HasTypeParam;
8941 HasGenericType;
8942 HasTypeArg;
8943 HasType;
8944 DeclaresMethod;
8945 HasBound;
8946 HasTypeParam;
8947 HasGenericType;
8948 HasTypeArg;
8949 HasType;
8950 DeclaresMethod;
8951 HasGenericType;
8952 HasTypeArg;
8953 HasType;
8954 HasParam;
8955 HasType;
8956 DeclaresMethod;
8957 HasType;
8958 HasParam;
8959 HasUpperBound;
8960 HasGenericType;
8961 HasTypeArg;
8962 HasType;
8963 DeclaresMethod;
8964 HasType;
8965 DeclaresMethod;
8966 HasType;
8967 HasParam;
8968 HasBound;
8969 HasTypeParam;
8970 HasGenericType;
8971 HasTypeArg;
8972 HasType;
8973 DeclaresMethod;
8974 HasBound;
8975 HasTypeParam;
8976 HasGenericType;
8977 HasTypeArg;
8978 HasType;
8979 DeclaresMethod;
8980 HasGenericType;
8981 HasTypeArg;
8982 HasType;
8983 HasParam;
8984 HasType;
8985 DeclaresMethod;
8986 HasType;
8987 HasParam;
8988 HasUpperBound;
8989 HasGenericType;
8990 HasTypeArg;
8991 HasType;
8992 DeclaresMethod;
8993 HasType;
8994 DeclaresMethod;
8995 HasType;
8996 HasParam;
8997 HasBound;
8998 HasTypeParam;
8999 HasGenericType;
9000 HasTypeArg;
9001 HasType;
9002 DeclaresMethod;
9003 HasBound;
9004 HasTypeParam;
9005 HasGenericType;
9006 HasTypeArg;
9007 HasType;
9008 DeclaresMethod;
9009 HasGenericType;
9010 HasTypeArg;
9011 HasType;
9012 HasParam;
9013 HasType;
9014 DeclaresMethod;
9015 HasType;
9016 HasParam;
9017 HasUpperBound;
9018 HasGenericType;
9019 HasTypeArg;
9020 HasType;
9021 DeclaresMethod;
9022 HasType;
9023 DeclaresMethod;
9024 HasType;
9025 HasParam;
9026 HasType;
9027 DeclaresMethod;
9028 HasGenericType;
9029 HasTypeArg;
9030 HasType;
9031 DeclaresMethod;
9032 HasGenericType;
9033 HasTypeArg;
9034 HasType;
9035 DeclaresMethod;
9036 HasType;
9037 HasParam;
9038 HasGenericType;
9039 HasTypeArg;
9040 HasType;
9041 DeclaresMethod;
9042 HasGenericType;
9043 HasTypeArg;
9044 HasType;
9045 DeclaresMethod;
9046 HasType;
9047 HasParam;
9048 HasGenericType;
9049 HasTypeArg;
9050 HasType;
9051 DeclaresMethod;
9052 HasGenericType;
9053 HasTypeArg;
9054 HasType;
9055 DeclaresMethod;
9056 HasType;
9057 HasParam;
9058 HasGenericType;
9059 HasTypeArg;
9060 HasType;
9061 DeclaresMethod;
9062 HasGenericType;
9063 HasTypeArg;
9064 HasType;
9065 DeclaresMethod;
9066 HasType;
9067 HasParam;
9068 HasGenericType;
9069 HasTypeArg;
9070 HasType;
9071 DeclaresMethod;
9072 HasGenericType;
9073 HasTypeArg;
9074 HasType;
9075 DeclaresMethod;
9076 HasType;
9077 HasParam;
9078 HasGenericType;
9079 HasTypeArg;
9080 HasType;
9081 DeclaresMethod;
9082 HasGenericType;
9083 HasTypeArg;
9084 HasType;
9085 DeclaresMethod;
9086 HasType;
9087 HasParam;
9088 Defines 20;
9089 ContainsClassifier;
9090 Imports 9;
9091 Imports 9;
9092 Imports 9;
9093 Imports 11;
9094 Imports 10;
9095 Imports 16;
9096 Imports 17;
9097 Imports 11;
9098 Imports 12;
9099 Imports 18;
9100 Extends;
9101 Implements;
9102 Implements;
9103 DeclaresConstructor;
9104 HasType;
9105 HasParam;
9106 HasType;
9107 HasParam;
9108 HasType;
9109 HasParam;
9110 HasType;
9111 HasParam;
9112 HasType;
9113 DeclaresMethod;
9114 HasUpperBound;
9115 HasGenericType;
9116 HasTypeArg;
9117 HasType;
9118 DeclaresMethod;
9119 HasTypeParam;
9120 HasType;
9121 DeclaresMethod;
9122 HasType;
9123 HasParam;
9124 HasTypeParam;
9125 HasType;
9126 DeclaresMethod;
9127 HasType;
9128 HasParam;
9129 HasType;
9130 HasParam;
9131 HasType;
9132 DeclaresMethod;
9133 HasType;
9134 HasParam;
9135 Throws;
9136 HasType;
9137 DeclaresMethod;
9138 HasType;
9139 HasParam;
9140 HasType;
9141 HasParam;
9142 Throws;
9143 HasType;
9144 DeclaresMethod;
9145 HasType;
9146 HasParam;
9147 Throws;
9148 Throws;
9149 HasType;
9150 DeclaresMethod;
9151 HasType;
9152 HasParam;
9153 Throws;
9154 Throws;
9155 HasType;
9156 DeclaresMethod;
9157 HasType;
9158 DeclaresMethod;
9159 HasType;
9160 DeclaresMethod;
9161 HasType;
9162 HasParam;
9163 HasType;
9164 DeclaresMethod;
9165 HasType;
9166 DeclaresMethod;
9167 HasType;
9168 DeclaresMethod;
9169 HasType;
9170 DeclaresMethod;
9171 HasType;
9172 DeclaresMethod;
9173 HasType;
9174 DeclaresMethod;
9175 Defines 30;
9176 ContainsClassifier;
9177 Imports 9;
9178 Imports 9;
9179 Imports 9;
9180 Imports 11;
9181 Imports 10;
9182 Imports 16;
9183 Imports 17;
9184 Imports 12;
9185 Imports 18;
9186 Extends;
9187 Implements;
9188 Implements;
9189 DeclaresConstructor;
9190 HasType;
9191 HasParam;
9192 HasType;
9193 HasParam;
9194 HasType;
9195 HasParam;
9196 HasType;
9197 HasParam;
9198 HasType;
9199 DeclaresMethod;
9200 HasUpperBound;
9201 HasGenericType;
9202 HasTypeArg;
9203 HasType;
9204 DeclaresMethod;
9205 HasTypeParam;
9206 HasType;
9207 DeclaresMethod;
9208 HasType;
9209 HasParam;
9210 HasTypeParam;
9211 HasType;
9212 DeclaresMethod;
9213 HasType;
9214 HasParam;
9215 HasType;
9216 HasParam;
9217 HasType;
9218 DeclaresMethod;
9219 HasType;
9220 HasParam;
9221 Throws;
9222 HasType;
9223 DeclaresMethod;
9224 HasType;
9225 HasParam;
9226 HasType;
9227 HasParam;
9228 Throws;
9229 HasType;
9230 DeclaresMethod;
9231 HasType;
9232 HasParam;
9233 Throws;
9234 Throws;
9235 HasType;
9236 DeclaresMethod;
9237 HasType;
9238 HasParam;
9239 Throws;
9240 Throws;
9241 HasType;
9242 DeclaresMethod;
9243 HasType;
9244 DeclaresMethod;
9245 HasType;
9246 DeclaresMethod;
9247 HasType;
9248 HasParam;
9249 HasType;
9250 DeclaresMethod;
9251 HasType;
9252 DeclaresMethod;
9253 HasType;
9254 DeclaresMethod;
9255 HasType;
9256 DeclaresMethod;
9257 HasType;
9258 DeclaresMethod;
9259 HasType;
9260 DeclaresMethod;
9261 Defines 29;
9262 ContainsClassifier;
9263 Imports 9;
9264 Imports 9;
9265 Imports 9;
9266 Imports 11;
9267 Imports 10;
9268 Imports 16;
9269 Imports 17;
9270 Imports 11;
9271 Imports 135;
9272 Imports 18;
9273 Extends;
9274 Implements;
9275 Implements;
9276 Implements;
9277 DeclaresConstructor;
9278 HasType;
9279 HasParam;
9280 HasType;
9281 HasParam;
9282 HasType;
9283 HasParam;
9284 HasType;
9285 HasParam;
9286 HasType;
9287 DeclaresMethod;
9288 HasUpperBound;
9289 HasGenericType;
9290 HasTypeArg;
9291 HasType;
9292 DeclaresMethod;
9293 HasTypeParam;
9294 HasType;
9295 DeclaresMethod;
9296 HasType;
9297 HasParam;
9298 HasTypeParam;
9299 HasType;
9300 DeclaresMethod;
9301 HasType;
9302 HasParam;
9303 HasType;
9304 HasParam;
9305 HasType;
9306 DeclaresMethod;
9307 HasType;
9308 HasParam;
9309 Throws;
9310 HasType;
9311 DeclaresMethod;
9312 HasType;
9313 HasParam;
9314 HasType;
9315 HasParam;
9316 Throws;
9317 HasType;
9318 DeclaresMethod;
9319 HasType;
9320 HasParam;
9321 Throws;
9322 Throws;
9323 HasType;
9324 DeclaresMethod;
9325 HasType;
9326 HasParam;
9327 Throws;
9328 Throws;
9329 HasType;
9330 DeclaresMethod;
9331 HasType;
9332 DeclaresMethod;
9333 HasType;
9334 DeclaresMethod;
9335 HasType;
9336 DeclaresMethod;
9337 HasType;
9338 HasParam;
9339 HasType;
9340 DeclaresMethod;
9341 HasType;
9342 DeclaresMethod;
9343 HasType;
9344 HasParam;
9345 HasType;
9346 DeclaresMethod;
9347 HasType;
9348 DeclaresMethod;
9349 HasType;
9350 DeclaresMethod;
9351 HasType;
9352 DeclaresMethod;
9353 HasType;
9354 DeclaresMethod;
9355 HasType;
9356 DeclaresMethod;
9357 Defines 30;
9358 ContainsClassifier;
9359 Imports 9;
9360 Imports 9;
9361 Imports 9;
9362 Imports 11;
9363 Imports 10;
9364 Imports 16;
9365 Imports 17;
9366 Imports 11;
9367 Imports 155;
9368 Imports 18;
9369 Extends;
9370 Implements;
9371 Implements;
9372 Implements;
9373 DeclaresConstructor;
9374 HasType;
9375 HasParam;
9376 HasType;
9377 HasParam;
9378 HasType;
9379 HasParam;
9380 HasType;
9381 HasParam;
9382 HasType;
9383 DeclaresMethod;
9384 HasUpperBound;
9385 HasGenericType;
9386 HasTypeArg;
9387 HasType;
9388 DeclaresMethod;
9389 HasTypeParam;
9390 HasType;
9391 DeclaresMethod;
9392 HasType;
9393 HasParam;
9394 HasTypeParam;
9395 HasType;
9396 DeclaresMethod;
9397 HasType;
9398 HasParam;
9399 HasType;
9400 HasParam;
9401 HasType;
9402 DeclaresMethod;
9403 HasType;
9404 HasParam;
9405 Throws;
9406 HasType;
9407 DeclaresMethod;
9408 HasType;
9409 HasParam;
9410 HasType;
9411 HasParam;
9412 Throws;
9413 HasType;
9414 DeclaresMethod;
9415 HasType;
9416 HasParam;
9417 Throws;
9418 Throws;
9419 HasType;
9420 DeclaresMethod;
9421 HasType;
9422 HasParam;
9423 Throws;
9424 Throws;
9425 HasType;
9426 DeclaresMethod;
9427 HasType;
9428 DeclaresMethod;
9429 HasType;
9430 DeclaresMethod;
9431 HasType;
9432 DeclaresMethod;
9433 HasType;
9434 HasParam;
9435 HasType;
9436 DeclaresMethod;
9437 HasType;
9438 DeclaresMethod;
9439 HasType;
9440 HasParam;
9441 HasType;
9442 DeclaresMethod;
9443 HasType;
9444 DeclaresMethod;
9445 HasType;
9446 DeclaresMethod;
9447 HasType;
9448 DeclaresMethod;
9449 HasType;
9450 DeclaresMethod;
9451 HasType;
9452 DeclaresMethod;
9453 Defines 30;
9454 ContainsClassifier;
9455 Imports 9;
9456 Imports 9;
9457 Imports 9;
9458 Imports 11;
9459 Imports 10;
9460 Imports 16;
9461 Imports 17;
9462 Imports 11;
9463 Imports 12;
9464 Imports 18;
9465 Extends;
9466 Implements;
9467 Implements;
9468 Implements;
9469 DeclaresConstructor;
9470 HasType;
9471 HasParam;
9472 HasType;
9473 HasParam;
9474 HasType;
9475 HasParam;
9476 HasType;
9477 HasParam;
9478 HasType;
9479 DeclaresMethod;
9480 HasUpperBound;
9481 HasGenericType;
9482 HasTypeArg;
9483 HasType;
9484 DeclaresMethod;
9485 HasTypeParam;
9486 HasType;
9487 DeclaresMethod;
9488 HasType;
9489 HasParam;
9490 HasTypeParam;
9491 HasType;
9492 DeclaresMethod;
9493 HasType;
9494 HasParam;
9495 HasType;
9496 HasParam;
9497 HasType;
9498 DeclaresMethod;
9499 HasType;
9500 HasParam;
9501 Throws;
9502 HasType;
9503 DeclaresMethod;
9504 HasType;
9505 HasParam;
9506 HasType;
9507 HasParam;
9508 Throws;
9509 HasType;
9510 DeclaresMethod;
9511 HasType;
9512 HasParam;
9513 Throws;
9514 Throws;
9515 HasType;
9516 DeclaresMethod;
9517 HasType;
9518 HasParam;
9519 Throws;
9520 Throws;
9521 HasType;
9522 DeclaresMethod;
9523 HasType;
9524 DeclaresMethod;
9525 HasType;
9526 DeclaresMethod;
9527 HasType;
9528 DeclaresMethod;
9529 HasType;
9530 HasParam;
9531 HasType;
9532 DeclaresMethod;
9533 HasType;
9534 DeclaresMethod;
9535 HasType;
9536 HasParam;
9537 HasType;
9538 DeclaresMethod;
9539 HasType;
9540 DeclaresMethod;
9541 HasType;
9542 DeclaresMethod;
9543 HasType;
9544 DeclaresMethod;
9545 HasType;
9546 DeclaresMethod;
9547 HasType;
9548 DeclaresMethod;
9549 Defines 30;
9550 ContainsClassifier;
9551 Imports 9;
9552 Imports 9;
9553 Imports 9;
9554 Imports 11;
9555 Imports 10;
9556 Imports 16;
9557 Imports 17;
9558 Imports 11;
9559 Imports 213;
9560 Imports 18;
9561 Extends;
9562 Implements;
9563 Implements;
9564 Implements;
9565 DeclaresConstructor;
9566 HasType;
9567 HasParam;
9568 HasType;
9569 HasParam;
9570 HasType;
9571 HasParam;
9572 HasType;
9573 HasParam;
9574 HasType;
9575 DeclaresMethod;
9576 HasUpperBound;
9577 HasGenericType;
9578 HasTypeArg;
9579 HasType;
9580 DeclaresMethod;
9581 HasTypeParam;
9582 HasType;
9583 DeclaresMethod;
9584 HasType;
9585 HasParam;
9586 HasTypeParam;
9587 HasType;
9588 DeclaresMethod;
9589 HasType;
9590 HasParam;
9591 HasType;
9592 HasParam;
9593 HasType;
9594 DeclaresMethod;
9595 HasType;
9596 HasParam;
9597 Throws;
9598 HasType;
9599 DeclaresMethod;
9600 HasType;
9601 HasParam;
9602 HasType;
9603 HasParam;
9604 Throws;
9605 HasType;
9606 DeclaresMethod;
9607 HasType;
9608 HasParam;
9609 Throws;
9610 Throws;
9611 HasType;
9612 DeclaresMethod;
9613 HasType;
9614 HasParam;
9615 Throws;
9616 Throws;
9617 HasType;
9618 DeclaresMethod;
9619 HasType;
9620 DeclaresMethod;
9621 HasType;
9622 DeclaresMethod;
9623 HasType;
9624 DeclaresMethod;
9625 HasType;
9626 HasParam;
9627 HasType;
9628 DeclaresMethod;
9629 HasType;
9630 DeclaresMethod;
9631 HasType;
9632 HasParam;
9633 HasType;
9634 DeclaresMethod;
9635 HasType;
9636 DeclaresMethod;
9637 HasType;
9638 DeclaresMethod;
9639 HasType;
9640 DeclaresMethod;
9641 HasType;
9642 DeclaresMethod;
9643 HasType;
9644 DeclaresMethod;
9645 Defines 30;
9646 ContainsClassifier;
9647 Imports 9;
9648 Imports 9;
9649 Imports 9;
9650 Imports 11;
9651 Imports 10;
9652 Imports 16;
9653 Imports 17;
9654 Imports 11;
9655 Imports 414;
9656 Imports 18;
9657 Extends;
9658 Implements;
9659 Implements;
9660 Implements;
9661 DeclaresConstructor;
9662 HasType;
9663 HasParam;
9664 HasType;
9665 HasParam;
9666 HasType;
9667 HasParam;
9668 HasType;
9669 HasParam;
9670 HasType;
9671 DeclaresMethod;
9672 HasUpperBound;
9673 HasGenericType;
9674 HasTypeArg;
9675 HasType;
9676 DeclaresMethod;
9677 HasTypeParam;
9678 HasType;
9679 DeclaresMethod;
9680 HasType;
9681 HasParam;
9682 HasTypeParam;
9683 HasType;
9684 DeclaresMethod;
9685 HasType;
9686 HasParam;
9687 HasType;
9688 HasParam;
9689 HasType;
9690 DeclaresMethod;
9691 HasType;
9692 HasParam;
9693 Throws;
9694 HasType;
9695 DeclaresMethod;
9696 HasType;
9697 HasParam;
9698 HasType;
9699 HasParam;
9700 Throws;
9701 HasType;
9702 DeclaresMethod;
9703 HasType;
9704 HasParam;
9705 Throws;
9706 Throws;
9707 HasType;
9708 DeclaresMethod;
9709 HasType;
9710 HasParam;
9711 Throws;
9712 Throws;
9713 HasType;
9714 DeclaresMethod;
9715 HasType;
9716 DeclaresMethod;
9717 HasType;
9718 DeclaresMethod;
9719 HasType;
9720 DeclaresMethod;
9721 HasType;
9722 HasParam;
9723 HasType;
9724 DeclaresMethod;
9725 HasType;
9726 DeclaresMethod;
9727 HasType;
9728 HasParam;
9729 HasType;
9730 DeclaresMethod;
9731 HasType;
9732 DeclaresMethod;
9733 HasType;
9734 DeclaresMethod;
9735 HasType;
9736 DeclaresMethod;
9737 HasType;
9738 DeclaresMethod;
9739 HasType;
9740 DeclaresMethod;
9741 Defines 30;
9742 ContainsClassifier;
9743 Imports 9;
9744 Imports 9;
9745 Imports 9;
9746 Imports 11;
9747 Imports 10;
9748 Imports 16;
9749 Imports 17;
9750 Imports 11;
9751 Imports 18;
9752 Extends;
9753 Implements;
9754 Implements;
9755 Implements;
9756 DeclaresConstructor;
9757 HasType;
9758 HasParam;
9759 HasType;
9760 HasParam;
9761 HasType;
9762 HasParam;
9763 HasType;
9764 HasParam;
9765 HasType;
9766 DeclaresMethod;
9767 HasUpperBound;
9768 HasGenericType;
9769 HasTypeArg;
9770 HasType;
9771 DeclaresMethod;
9772 HasTypeParam;
9773 HasType;
9774 DeclaresMethod;
9775 HasType;
9776 HasParam;
9777 HasTypeParam;
9778 HasType;
9779 DeclaresMethod;
9780 HasType;
9781 HasParam;
9782 HasType;
9783 HasParam;
9784 HasType;
9785 DeclaresMethod;
9786 HasType;
9787 HasParam;
9788 Throws;
9789 HasType;
9790 DeclaresMethod;
9791 HasType;
9792 HasParam;
9793 HasType;
9794 HasParam;
9795 Throws;
9796 HasType;
9797 DeclaresMethod;
9798 HasType;
9799 HasParam;
9800 Throws;
9801 Throws;
9802 HasType;
9803 DeclaresMethod;
9804 HasType;
9805 HasParam;
9806 Throws;
9807 Throws;
9808 HasType;
9809 DeclaresMethod;
9810 HasType;
9811 DeclaresMethod;
9812 HasType;
9813 DeclaresMethod;
9814 HasType;
9815 DeclaresMethod;
9816 HasType;
9817 HasParam;
9818 HasType;
9819 DeclaresMethod;
9820 HasType;
9821 DeclaresMethod;
9822 HasType;
9823 HasParam;
9824 HasType;
9825 DeclaresMethod;
9826 HasType;
9827 DeclaresMethod;
9828 HasType;
9829 DeclaresMethod;
9830 HasType;
9831 DeclaresMethod;
9832 HasType;
9833 DeclaresMethod;
9834 HasType;
9835 DeclaresMethod;
9836 Defines 29;
9837 ContainsClassifier;
9838 Imports 9;
9839 Imports 9;
9840 Imports 9;
9841 Imports 11;
9842 Imports 10;
9843 Imports 16;
9844 Imports 17;
9845 Imports 11;
9846 Imports 184;
9847 Imports 18;
9848 Extends;
9849 Implements;
9850 Implements;
9851 HasType;
9852 DeclaresField;
9853 DeclaresConstructor;
9854 HasType;
9855 HasParam;
9856 HasType;
9857 HasParam;
9858 HasType;
9859 HasParam;
9860 HasType;
9861 HasParam;
9862 HasType;
9863 DeclaresMethod;
9864 HasUpperBound;
9865 HasGenericType;
9866 HasTypeArg;
9867 HasType;
9868 DeclaresMethod;
9869 HasTypeParam;
9870 HasType;
9871 DeclaresMethod;
9872 HasType;
9873 HasParam;
9874 HasTypeParam;
9875 HasType;
9876 DeclaresMethod;
9877 HasType;
9878 HasParam;
9879 HasType;
9880 HasParam;
9881 HasType;
9882 DeclaresMethod;
9883 HasType;
9884 DeclaresMethod;
9885 HasType;
9886 HasParam;
9887 HasType;
9888 DeclaresMethod;
9889 HasType;
9890 HasParam;
9891 Throws;
9892 HasType;
9893 DeclaresMethod;
9894 HasType;
9895 HasParam;
9896 HasType;
9897 HasParam;
9898 Throws;
9899 HasType;
9900 DeclaresMethod;
9901 HasType;
9902 HasParam;
9903 Throws;
9904 Throws;
9905 HasType;
9906 DeclaresMethod;
9907 HasType;
9908 HasParam;
9909 Throws;
9910 Throws;
9911 HasType;
9912 DeclaresMethod;
9913 HasType;
9914 DeclaresMethod;
9915 HasType;
9916 DeclaresMethod;
9917 HasType;
9918 HasParam;
9919 HasType;
9920 DeclaresMethod;
9921 HasType;
9922 DeclaresMethod;
9923 HasType;
9924 DeclaresMethod;
9925 HasType;
9926 DeclaresMethod;
9927 HasType;
9928 DeclaresMethod;
9929 HasType;
9930 DeclaresMethod;
9931 Defines 30;
9932 ContainsClassifier;
9933 Imports 9;
9934 Imports 11;
9935 Imports 9;
9936 Imports 9;
9937 Imports 10;
9938 Imports 16;
9939 Imports 18;
9940 Extends;
9941 Implements;
9942 Implements;
9943 Implements;
9944 HasType;
9945 DeclaresField;
9946 DeclaresConstructor;
9947 HasType;
9948 HasParam;
9949 HasType;
9950 HasParam;
9951 HasType;
9952 DeclaresMethod;
9953 HasUpperBound;
9954 HasGenericType;
9955 HasTypeArg;
9956 HasType;
9957 DeclaresMethod;
9958 HasTypeParam;
9959 HasType;
9960 DeclaresMethod;
9961 HasType;
9962 HasParam;
9963 HasTypeParam;
9964 HasType;
9965 DeclaresMethod;
9966 HasType;
9967 HasParam;
9968 HasType;
9969 HasParam;
9970 HasType;
9971 DeclaresMethod;
9972 HasType;
9973 DeclaresMethod;
9974 HasType;
9975 HasParam;
9976 HasType;
9977 DeclaresMethod;
9978 HasType;
9979 HasParam;
9980 Throws;
9981 HasType;
9982 DeclaresMethod;
9983 HasType;
9984 HasParam;
9985 HasType;
9986 HasParam;
9987 Throws;
9988 HasType;
9989 DeclaresMethod;
9990 HasType;
9991 HasParam;
9992 Throws;
9993 Throws;
9994 HasType;
9995 DeclaresMethod;
9996 HasType;
9997 HasParam;
9998 Throws;
9999 Throws;
10000 HasType;
10001 DeclaresMethod;
10002 HasType;
10003 DeclaresMethod;
10004 HasType;
10005 DeclaresMethod;
10006 HasType;
10007 DeclaresMethod;
10008 HasType;
10009 DeclaresMethod;
10010 HasType;
10011 HasParam;
10012 HasType;
10013 DeclaresMethod;
10014 HasType;
10015 DeclaresMethod;
10016 HasType;
10017 HasParam;
10018 HasType;
10019 DeclaresMethod;
10020 HasType;
10021 DeclaresMethod;
10022 HasType;
10023 HasParam;
10024 HasType;
10025 DeclaresMethod;
10026 HasType;
10027 HasParam;
10028 HasUpperBound;
10029 HasGenericType;
10030 HasTypeArg;
10031 HasType;
10032 DeclaresMethod;
10033 HasType;
10034 DeclaresMethod;
10035 HasType;
10036 HasParam;
10037 HasBound;
10038 HasTypeParam;
10039 HasGenericType;
10040 HasTypeArg;
10041 HasType;
10042 DeclaresMethod;
10043 HasBound;
10044 HasTypeParam;
10045 HasGenericType;
10046 HasTypeArg;
10047 HasType;
10048 DeclaresMethod;
10049 HasGenericType;
10050 HasTypeArg;
10051 HasType;
10052 HasParam;
10053 HasType;
10054 DeclaresMethod;
10055 HasType;
10056 HasParam;
10057 HasUpperBound;
10058 HasGenericType;
10059 HasTypeArg;
10060 HasType;
10061 DeclaresMethod;
10062 HasType;
10063 DeclaresMethod;
10064 HasType;
10065 HasParam;
10066 HasType;
10067 DeclaresMethod;
10068 HasGenericType;
10069 HasTypeArg;
10070 HasType;
10071 DeclaresMethod;
10072 HasGenericType;
10073 HasTypeArg;
10074 HasType;
10075 DeclaresMethod;
10076 HasType;
10077 HasParam;
10078 HasGenericType;
10079 HasTypeArg;
10080 HasType;
10081 DeclaresMethod;
10082 HasGenericType;
10083 HasTypeArg;
10084 HasType;
10085 DeclaresMethod;
10086 HasType;
10087 HasParam;
10088 HasGenericType;
10089 HasTypeArg;
10090 HasType;
10091 DeclaresMethod;
10092 HasGenericType;
10093 HasTypeArg;
10094 HasType;
10095 DeclaresMethod;
10096 HasType;
10097 HasParam;
10098 Defines 20;
10099 ContainsClassifier;
10100 Imports 9;
10101 Imports 11;
10102 Imports 9;
10103 Imports 9;
10104 Imports 10;
10105 Imports 16;
10106 Imports 18;
10107 Extends;
10108 Implements;
10109 Implements;
10110 Implements;
10111 HasGenericType;
10112 HasTypeArg;
10113 HasType;
10114 DeclaresField;
10115 HasType;
10116 DeclaresField;
10117 HasType;
10118 DeclaresField;
10119 DeclaresConstructor;
10120 HasType;
10121 HasParam;
10122 HasType;
10123 HasParam;
10124 HasType;
10125 DeclaresMethod;
10126 HasUpperBound;
10127 HasGenericType;
10128 HasTypeArg;
10129 HasType;
10130 DeclaresMethod;
10131 HasTypeParam;
10132 HasType;
10133 DeclaresMethod;
10134 HasType;
10135 HasParam;
10136 HasTypeParam;
10137 HasType;
10138 DeclaresMethod;
10139 HasType;
10140 HasParam;
10141 HasType;
10142 HasParam;
10143 HasGenericType;
10144 HasTypeArg;
10145 HasType;
10146 DeclaresMethod;
10147 HasType;
10148 DeclaresMethod;
10149 HasGenericType;
10150 HasTypeArg;
10151 HasType;
10152 HasParam;
10153 HasType;
10154 DeclaresMethod;
10155 HasType;
10156 DeclaresMethod;
10157 HasType;
10158 HasParam;
10159 HasType;
10160 DeclaresMethod;
10161 HasType;
10162 DeclaresMethod;
10163 HasType;
10164 HasParam;
10165 HasType;
10166 DeclaresMethod;
10167 HasType;
10168 HasParam;
10169 Throws;
10170 HasType;
10171 DeclaresMethod;
10172 HasType;
10173 HasParam;
10174 HasType;
10175 HasParam;
10176 Throws;
10177 HasType;
10178 DeclaresMethod;
10179 HasType;
10180 HasParam;
10181 Throws;
10182 Throws;
10183 HasType;
10184 DeclaresMethod;
10185 HasType;
10186 HasParam;
10187 Throws;
10188 Throws;
10189 HasType;
10190 DeclaresMethod;
10191 HasType;
10192 DeclaresMethod;
10193 HasType;
10194 DeclaresMethod;
10195 HasType;
10196 DeclaresMethod;
10197 HasType;
10198 DeclaresMethod;
10199 HasType;
10200 DeclaresMethod;
10201 HasType;
10202 DeclaresMethod;
10203 HasType;
10204 DeclaresMethod;
10205 HasType;
10206 DeclaresMethod;
10207 HasType;
10208 DeclaresMethod;
10209 HasType;
10210 DeclaresMethod;
10211 HasType;
10212 HasParam;
10213 HasType;
10214 DeclaresMethod;
10215 HasType;
10216 DeclaresMethod;
10217 HasType;
10218 HasParam;
10219 HasType;
10220 DeclaresMethod;
10221 HasType;
10222 DeclaresMethod;
10223 HasType;
10224 HasParam;
10225 HasType;
10226 DeclaresMethod;
10227 HasType;
10228 DeclaresMethod;
10229 HasType;
10230 HasParam;
10231 HasType;
10232 DeclaresMethod;
10233 HasType;
10234 DeclaresMethod;
10235 HasType;
10236 HasParam;
10237 HasType;
10238 DeclaresMethod;
10239 HasType;
10240 DeclaresMethod;
10241 HasType;
10242 HasParam;
10243 HasType;
10244 DeclaresMethod;
10245 HasType;
10246 DeclaresMethod;
10247 HasType;
10248 HasParam;
10249 HasType;
10250 DeclaresMethod;
10251 HasType;
10252 DeclaresMethod;
10253 HasType;
10254 HasParam;
10255 HasType;
10256 DeclaresMethod;
10257 HasType;
10258 DeclaresMethod;
10259 HasType;
10260 HasParam;
10261 HasType;
10262 DeclaresMethod;
10263 HasType;
10264 DeclaresMethod;
10265 HasType;
10266 HasParam;
10267 HasType;
10268 DeclaresMethod;
10269 HasType;
10270 DeclaresMethod;
10271 HasType;
10272 HasParam;
10273 HasType;
10274 DeclaresMethod;
10275 HasType;
10276 DeclaresMethod;
10277 HasType;
10278 HasParam;
10279 HasType;
10280 DeclaresMethod;
10281 HasType;
10282 DeclaresMethod;
10283 HasType;
10284 HasParam;
10285 HasType;
10286 DeclaresMethod;
10287 HasType;
10288 DeclaresMethod;
10289 HasType;
10290 HasParam;
10291 HasType;
10292 DeclaresMethod;
10293 HasType;
10294 DeclaresMethod;
10295 HasType;
10296 HasParam;
10297 HasType;
10298 DeclaresMethod;
10299 HasType;
10300 DeclaresMethod;
10301 HasType;
10302 HasParam;
10303 HasType;
10304 DeclaresMethod;
10305 HasType;
10306 DeclaresMethod;
10307 HasType;
10308 HasParam;
10309 HasType;
10310 DeclaresMethod;
10311 HasType;
10312 DeclaresMethod;
10313 HasType;
10314 HasParam;
10315 HasType;
10316 DeclaresMethod;
10317 HasType;
10318 DeclaresMethod;
10319 HasType;
10320 HasParam;
10321 HasType;
10322 DeclaresMethod;
10323 HasType;
10324 DeclaresMethod;
10325 HasType;
10326 HasParam;
10327 HasType;
10328 DeclaresMethod;
10329 HasType;
10330 HasParam;
10331 HasUpperBound;
10332 HasGenericType;
10333 HasTypeArg;
10334 HasType;
10335 DeclaresMethod;
10336 HasType;
10337 DeclaresMethod;
10338 HasType;
10339 HasParam;
10340 HasBound;
10341 HasTypeParam;
10342 HasGenericType;
10343 HasTypeArg;
10344 HasType;
10345 DeclaresMethod;
10346 HasBound;
10347 HasTypeParam;
10348 HasGenericType;
10349 HasTypeArg;
10350 HasType;
10351 DeclaresMethod;
10352 HasGenericType;
10353 HasTypeArg;
10354 HasType;
10355 HasParam;
10356 HasType;
10357 DeclaresMethod;
10358 HasType;
10359 HasParam;
10360 HasUpperBound;
10361 HasGenericType;
10362 HasTypeArg;
10363 HasType;
10364 DeclaresMethod;
10365 HasType;
10366 DeclaresMethod;
10367 HasType;
10368 HasParam;
10369 HasBound;
10370 HasTypeParam;
10371 HasGenericType;
10372 HasTypeArg;
10373 HasType;
10374 DeclaresMethod;
10375 HasBound;
10376 HasTypeParam;
10377 HasGenericType;
10378 HasTypeArg;
10379 HasType;
10380 DeclaresMethod;
10381 HasGenericType;
10382 HasTypeArg;
10383 HasType;
10384 HasParam;
10385 HasType;
10386 DeclaresMethod;
10387 HasType;
10388 HasParam;
10389 HasUpperBound;
10390 HasGenericType;
10391 HasTypeArg;
10392 HasType;
10393 DeclaresMethod;
10394 HasType;
10395 DeclaresMethod;
10396 HasType;
10397 HasParam;
10398 HasBound;
10399 HasTypeParam;
10400 HasGenericType;
10401 HasTypeArg;
10402 HasType;
10403 DeclaresMethod;
10404 HasBound;
10405 HasTypeParam;
10406 HasGenericType;
10407 HasTypeArg;
10408 HasType;
10409 DeclaresMethod;
10410 HasGenericType;
10411 HasTypeArg;
10412 HasType;
10413 HasParam;
10414 HasType;
10415 DeclaresMethod;
10416 HasType;
10417 HasParam;
10418 HasUpperBound;
10419 HasGenericType;
10420 HasTypeArg;
10421 HasType;
10422 DeclaresMethod;
10423 HasType;
10424 DeclaresMethod;
10425 HasType;
10426 HasParam;
10427 HasType;
10428 DeclaresMethod;
10429 HasType;
10430 DeclaresMethod;
10431 HasType;
10432 HasParam;
10433 HasUpperBound;
10434 HasGenericType;
10435 HasTypeArg;
10436 HasType;
10437 DeclaresMethod;
10438 HasType;
10439 DeclaresMethod;
10440 HasType;
10441 HasParam;
10442 HasBound;
10443 HasTypeParam;
10444 HasGenericType;
10445 HasTypeArg;
10446 HasType;
10447 DeclaresMethod;
10448 HasBound;
10449 HasTypeParam;
10450 HasGenericType;
10451 HasTypeArg;
10452 HasType;
10453 DeclaresMethod;
10454 HasGenericType;
10455 HasTypeArg;
10456 HasType;
10457 HasParam;
10458 HasType;
10459 DeclaresMethod;
10460 HasType;
10461 HasParam;
10462 HasUpperBound;
10463 HasGenericType;
10464 HasTypeArg;
10465 HasType;
10466 DeclaresMethod;
10467 HasType;
10468 DeclaresMethod;
10469 HasType;
10470 HasParam;
10471 HasBound;
10472 HasTypeParam;
10473 HasGenericType;
10474 HasTypeArg;
10475 HasType;
10476 DeclaresMethod;
10477 HasBound;
10478 HasTypeParam;
10479 HasGenericType;
10480 HasTypeArg;
10481 HasType;
10482 DeclaresMethod;
10483 HasGenericType;
10484 HasTypeArg;
10485 HasType;
10486 HasParam;
10487 HasType;
10488 DeclaresMethod;
10489 HasType;
10490 HasParam;
10491 HasUpperBound;
10492 HasGenericType;
10493 HasTypeArg;
10494 HasType;
10495 DeclaresMethod;
10496 HasType;
10497 DeclaresMethod;
10498 HasType;
10499 HasParam;
10500 HasBound;
10501 HasTypeParam;
10502 HasGenericType;
10503 HasTypeArg;
10504 HasType;
10505 DeclaresMethod;
10506 HasBound;
10507 HasTypeParam;
10508 HasGenericType;
10509 HasTypeArg;
10510 HasType;
10511 DeclaresMethod;
10512 HasGenericType;
10513 HasTypeArg;
10514 HasType;
10515 HasParam;
10516 HasType;
10517 DeclaresMethod;
10518 HasType;
10519 HasParam;
10520 HasUpperBound;
10521 HasGenericType;
10522 HasTypeArg;
10523 HasType;
10524 DeclaresMethod;
10525 HasType;
10526 DeclaresMethod;
10527 HasType;
10528 HasParam;
10529 HasBound;
10530 HasTypeParam;
10531 HasGenericType;
10532 HasTypeArg;
10533 HasType;
10534 DeclaresMethod;
10535 HasBound;
10536 HasTypeParam;
10537 HasGenericType;
10538 HasTypeArg;
10539 HasType;
10540 DeclaresMethod;
10541 HasGenericType;
10542 HasTypeArg;
10543 HasType;
10544 HasParam;
10545 HasType;
10546 DeclaresMethod;
10547 HasType;
10548 HasParam;
10549 HasUpperBound;
10550 HasGenericType;
10551 HasTypeArg;
10552 HasType;
10553 DeclaresMethod;
10554 HasType;
10555 DeclaresMethod;
10556 HasType;
10557 HasParam;
10558 HasType;
10559 DeclaresMethod;
10560 HasType;
10561 DeclaresMethod;
10562 HasType;
10563 HasParam;
10564 HasUpperBound;
10565 HasGenericType;
10566 HasTypeArg;
10567 HasType;
10568 DeclaresMethod;
10569 HasType;
10570 DeclaresMethod;
10571 HasType;
10572 HasParam;
10573 HasBound;
10574 HasTypeParam;
10575 HasGenericType;
10576 HasTypeArg;
10577 HasType;
10578 DeclaresMethod;
10579 HasBound;
10580 HasTypeParam;
10581 HasGenericType;
10582 HasTypeArg;
10583 HasType;
10584 DeclaresMethod;
10585 HasGenericType;
10586 HasTypeArg;
10587 HasType;
10588 HasParam;
10589 HasType;
10590 DeclaresMethod;
10591 HasType;
10592 HasParam;
10593 HasUpperBound;
10594 HasGenericType;
10595 HasTypeArg;
10596 HasType;
10597 DeclaresMethod;
10598 HasType;
10599 DeclaresMethod;
10600 HasType;
10601 HasParam;
10602 HasBound;
10603 HasTypeParam;
10604 HasGenericType;
10605 HasTypeArg;
10606 HasType;
10607 DeclaresMethod;
10608 HasBound;
10609 HasTypeParam;
10610 HasGenericType;
10611 HasTypeArg;
10612 HasType;
10613 DeclaresMethod;
10614 HasGenericType;
10615 HasTypeArg;
10616 HasType;
10617 HasParam;
10618 HasType;
10619 DeclaresMethod;
10620 HasType;
10621 HasParam;
10622 HasUpperBound;
10623 HasGenericType;
10624 HasTypeArg;
10625 HasType;
10626 DeclaresMethod;
10627 HasType;
10628 DeclaresMethod;
10629 HasType;
10630 HasParam;
10631 HasBound;
10632 HasTypeParam;
10633 HasGenericType;
10634 HasTypeArg;
10635 HasType;
10636 DeclaresMethod;
10637 HasBound;
10638 HasTypeParam;
10639 HasGenericType;
10640 HasTypeArg;
10641 HasType;
10642 DeclaresMethod;
10643 HasGenericType;
10644 HasTypeArg;
10645 HasType;
10646 HasParam;
10647 HasType;
10648 DeclaresMethod;
10649 HasType;
10650 HasParam;
10651 HasUpperBound;
10652 HasGenericType;
10653 HasTypeArg;
10654 HasType;
10655 DeclaresMethod;
10656 HasType;
10657 DeclaresMethod;
10658 HasType;
10659 HasParam;
10660 HasType;
10661 DeclaresMethod;
10662 HasType;
10663 DeclaresMethod;
10664 HasType;
10665 HasParam;
10666 HasUpperBound;
10667 HasGenericType;
10668 HasTypeArg;
10669 HasType;
10670 DeclaresMethod;
10671 HasType;
10672 DeclaresMethod;
10673 HasType;
10674 HasParam;
10675 HasBound;
10676 HasTypeParam;
10677 HasGenericType;
10678 HasTypeArg;
10679 HasType;
10680 DeclaresMethod;
10681 HasBound;
10682 HasTypeParam;
10683 HasGenericType;
10684 HasTypeArg;
10685 HasType;
10686 DeclaresMethod;
10687 HasGenericType;
10688 HasTypeArg;
10689 HasType;
10690 HasParam;
10691 HasType;
10692 DeclaresMethod;
10693 HasType;
10694 HasParam;
10695 HasUpperBound;
10696 HasGenericType;
10697 HasTypeArg;
10698 HasType;
10699 DeclaresMethod;
10700 HasType;
10701 DeclaresMethod;
10702 HasType;
10703 HasParam;
10704 HasBound;
10705 HasTypeParam;
10706 HasGenericType;
10707 HasTypeArg;
10708 HasType;
10709 DeclaresMethod;
10710 HasBound;
10711 HasTypeParam;
10712 HasGenericType;
10713 HasTypeArg;
10714 HasType;
10715 DeclaresMethod;
10716 HasGenericType;
10717 HasTypeArg;
10718 HasType;
10719 HasParam;
10720 HasGenericType;
10721 HasTypeArg;
10722 HasType;
10723 DeclaresMethod;
10724 HasGenericType;
10725 HasTypeArg;
10726 HasType;
10727 DeclaresMethod;
10728 HasType;
10729 HasParam;
10730 HasGenericType;
10731 HasTypeArg;
10732 HasType;
10733 DeclaresMethod;
10734 HasGenericType;
10735 HasTypeArg;
10736 HasType;
10737 DeclaresMethod;
10738 HasType;
10739 HasParam;
10740 HasGenericType;
10741 HasTypeArg;
10742 HasType;
10743 DeclaresMethod;
10744 HasGenericType;
10745 HasTypeArg;
10746 HasType;
10747 DeclaresMethod;
10748 HasType;
10749 HasParam;
10750 HasGenericType;
10751 HasTypeArg;
10752 HasType;
10753 DeclaresMethod;
10754 HasGenericType;
10755 HasTypeArg;
10756 HasType;
10757 DeclaresMethod;
10758 HasType;
10759 HasParam;
10760 HasGenericType;
10761 HasTypeArg;
10762 HasType;
10763 DeclaresMethod;
10764 HasGenericType;
10765 HasTypeArg;
10766 HasType;
10767 DeclaresMethod;
10768 HasType;
10769 HasParam;
10770 HasGenericType;
10771 HasTypeArg;
10772 HasType;
10773 DeclaresMethod;
10774 HasGenericType;
10775 HasTypeArg;
10776 HasType;
10777 DeclaresMethod;
10778 HasType;
10779 HasParam;
10780 HasGenericType;
10781 HasTypeArg;
10782 HasType;
10783 DeclaresMethod;
10784 HasGenericType;
10785 HasTypeArg;
10786 HasType;
10787 DeclaresMethod;
10788 HasType;
10789 HasParam;
10790 HasGenericType;
10791 HasTypeArg;
10792 HasType;
10793 DeclaresMethod;
10794 HasGenericType;
10795 HasTypeArg;
10796 HasType;
10797 DeclaresMethod;
10798 HasType;
10799 HasParam;
10800 HasGenericType;
10801 HasTypeArg;
10802 HasType;
10803 DeclaresMethod;
10804 HasGenericType;
10805 HasTypeArg;
10806 HasType;
10807 DeclaresMethod;
10808 HasType;
10809 HasParam;
10810 HasGenericType;
10811 HasTypeArg;
10812 HasType;
10813 DeclaresMethod;
10814 HasGenericType;
10815 HasTypeArg;
10816 HasType;
10817 DeclaresMethod;
10818 HasType;
10819 HasParam;
10820 HasGenericType;
10821 HasTypeArg;
10822 HasType;
10823 DeclaresMethod;
10824 HasGenericType;
10825 HasTypeArg;
10826 HasType;
10827 DeclaresMethod;
10828 HasType;
10829 HasParam;
10830 HasGenericType;
10831 HasTypeArg;
10832 HasType;
10833 DeclaresMethod;
10834 HasGenericType;
10835 HasTypeArg;
10836 HasType;
10837 DeclaresMethod;
10838 HasType;
10839 HasParam;
10840 HasGenericType;
10841 HasTypeArg;
10842 HasType;
10843 DeclaresMethod;
10844 HasGenericType;
10845 HasTypeArg;
10846 HasType;
10847 DeclaresMethod;
10848 HasType;
10849 HasParam;
10850 HasGenericType;
10851 HasTypeArg;
10852 HasType;
10853 DeclaresMethod;
10854 HasGenericType;
10855 HasTypeArg;
10856 HasType;
10857 DeclaresMethod;
10858 HasType;
10859 HasParam;
10860 HasGenericType;
10861 HasTypeArg;
10862 HasType;
10863 DeclaresMethod;
10864 HasGenericType;
10865 HasTypeArg;
10866 HasType;
10867 DeclaresMethod;
10868 HasType;
10869 HasParam;
10870 HasGenericType;
10871 HasTypeArg;
10872 HasType;
10873 DeclaresMethod;
10874 HasGenericType;
10875 HasTypeArg;
10876 HasType;
10877 DeclaresMethod;
10878 HasType;
10879 HasParam;
10880 HasGenericType;
10881 HasTypeArg;
10882 HasType;
10883 DeclaresMethod;
10884 HasGenericType;
10885 HasTypeArg;
10886 HasType;
10887 DeclaresMethod;
10888 HasType;
10889 HasParam;
10890 HasGenericType;
10891 HasTypeArg;
10892 HasType;
10893 DeclaresMethod;
10894 HasGenericType;
10895 HasTypeArg;
10896 HasType;
10897 DeclaresMethod;
10898 HasType;
10899 HasParam;
10900 HasGenericType;
10901 HasTypeArg;
10902 HasType;
10903 DeclaresMethod;
10904 HasGenericType;
10905 HasTypeArg;
10906 HasType;
10907 DeclaresMethod;
10908 HasType;
10909 HasParam;
10910 HasGenericType;
10911 HasTypeArg;
10912 HasType;
10913 DeclaresMethod;
10914 HasGenericType;
10915 HasTypeArg;
10916 HasType;
10917 DeclaresMethod;
10918 HasType;
10919 HasParam;
10920 Defines 20;
10921 ContainsClassifier;
10922 Imports 9;
10923 Imports 9;
10924 Imports 9;
10925 Imports 11;
10926 Imports 10;
10927 Imports 16;
10928 Imports 17;
10929 Imports 11;
10930 Imports 327;
10931 Imports 18;
10932 Extends;
10933 Implements;
10934 Implements;
10935 DeclaresConstructor;
10936 HasType;
10937 HasParam;
10938 HasType;
10939 HasParam;
10940 HasType;
10941 HasParam;
10942 HasType;
10943 HasParam;
10944 HasType;
10945 DeclaresMethod;
10946 HasUpperBound;
10947 HasGenericType;
10948 HasTypeArg;
10949 HasType;
10950 DeclaresMethod;
10951 HasTypeParam;
10952 HasType;
10953 DeclaresMethod;
10954 HasType;
10955 HasParam;
10956 HasTypeParam;
10957 HasType;
10958 DeclaresMethod;
10959 HasType;
10960 HasParam;
10961 HasType;
10962 HasParam;
10963 HasType;
10964 DeclaresMethod;
10965 HasType;
10966 HasParam;
10967 Throws;
10968 HasType;
10969 DeclaresMethod;
10970 HasType;
10971 HasParam;
10972 HasType;
10973 HasParam;
10974 Throws;
10975 HasType;
10976 DeclaresMethod;
10977 HasType;
10978 HasParam;
10979 Throws;
10980 Throws;
10981 HasType;
10982 DeclaresMethod;
10983 HasType;
10984 HasParam;
10985 Throws;
10986 Throws;
10987 HasType;
10988 DeclaresMethod;
10989 HasType;
10990 DeclaresMethod;
10991 HasType;
10992 DeclaresMethod;
10993 HasType;
10994 HasParam;
10995 HasType;
10996 DeclaresMethod;
10997 HasType;
10998 DeclaresMethod;
10999 HasType;
11000 DeclaresMethod;
11001 HasType;
11002 DeclaresMethod;
11003 HasType;
11004 DeclaresMethod;
11005 HasType;
11006 DeclaresMethod;
11007 Defines 30;
11008 ContainsClassifier;
11009 Imports 9;
11010 Imports 11;
11011 Imports 9;
11012 Imports 9;
11013 Imports 10;
11014 Imports 16;
11015 Imports 18;
11016 Extends;
11017 Implements;
11018 Implements;
11019 Implements;
11020 Implements;
11021 HasGenericType;
11022 HasTypeArg;
11023 HasType;
11024 DeclaresField;
11025 HasType;
11026 DeclaresField;
11027 DeclaresConstructor;
11028 HasType;
11029 HasParam;
11030 HasType;
11031 HasParam;
11032 HasType;
11033 DeclaresMethod;
11034 HasUpperBound;
11035 HasGenericType;
11036 HasTypeArg;
11037 HasType;
11038 DeclaresMethod;
11039 HasTypeParam;
11040 HasType;
11041 DeclaresMethod;
11042 HasType;
11043 HasParam;
11044 HasTypeParam;
11045 HasType;
11046 DeclaresMethod;
11047 HasType;
11048 HasParam;
11049 HasType;
11050 HasParam;
11051 HasGenericType;
11052 HasTypeArg;
11053 HasType;
11054 DeclaresMethod;
11055 HasType;
11056 DeclaresMethod;
11057 HasGenericType;
11058 HasTypeArg;
11059 HasType;
11060 HasParam;
11061 HasType;
11062 DeclaresMethod;
11063 HasType;
11064 DeclaresMethod;
11065 HasType;
11066 HasParam;
11067 HasType;
11068 DeclaresMethod;
11069 HasType;
11070 HasParam;
11071 Throws;
11072 HasType;
11073 DeclaresMethod;
11074 HasType;
11075 HasParam;
11076 HasType;
11077 HasParam;
11078 Throws;
11079 HasType;
11080 DeclaresMethod;
11081 HasType;
11082 HasParam;
11083 Throws;
11084 Throws;
11085 HasType;
11086 DeclaresMethod;
11087 HasType;
11088 HasParam;
11089 Throws;
11090 Throws;
11091 HasType;
11092 DeclaresMethod;
11093 HasType;
11094 DeclaresMethod;
11095 HasType;
11096 DeclaresMethod;
11097 HasType;
11098 DeclaresMethod;
11099 HasType;
11100 DeclaresMethod;
11101 HasType;
11102 DeclaresMethod;
11103 HasType;
11104 DeclaresMethod;
11105 HasType;
11106 HasParam;
11107 HasType;
11108 DeclaresMethod;
11109 HasType;
11110 DeclaresMethod;
11111 HasType;
11112 HasParam;
11113 HasType;
11114 DeclaresMethod;
11115 HasType;
11116 DeclaresMethod;
11117 HasType;
11118 HasParam;
11119 HasType;
11120 DeclaresMethod;
11121 HasType;
11122 DeclaresMethod;
11123 HasType;
11124 HasParam;
11125 HasType;
11126 DeclaresMethod;
11127 HasType;
11128 HasParam;
11129 HasUpperBound;
11130 HasGenericType;
11131 HasTypeArg;
11132 HasType;
11133 DeclaresMethod;
11134 HasType;
11135 DeclaresMethod;
11136 HasType;
11137 HasParam;
11138 HasBound;
11139 HasTypeParam;
11140 HasGenericType;
11141 HasTypeArg;
11142 HasType;
11143 DeclaresMethod;
11144 HasBound;
11145 HasTypeParam;
11146 HasGenericType;
11147 HasTypeArg;
11148 HasType;
11149 DeclaresMethod;
11150 HasGenericType;
11151 HasTypeArg;
11152 HasType;
11153 HasParam;
11154 HasType;
11155 DeclaresMethod;
11156 HasType;
11157 HasParam;
11158 HasUpperBound;
11159 HasGenericType;
11160 HasTypeArg;
11161 HasType;
11162 DeclaresMethod;
11163 HasType;
11164 DeclaresMethod;
11165 HasType;
11166 HasParam;
11167 HasType;
11168 DeclaresMethod;
11169 HasType;
11170 DeclaresMethod;
11171 HasType;
11172 HasParam;
11173 HasUpperBound;
11174 HasGenericType;
11175 HasTypeArg;
11176 HasType;
11177 DeclaresMethod;
11178 HasType;
11179 DeclaresMethod;
11180 HasType;
11181 HasParam;
11182 HasType;
11183 DeclaresMethod;
11184 HasGenericType;
11185 HasTypeArg;
11186 HasType;
11187 DeclaresMethod;
11188 HasGenericType;
11189 HasTypeArg;
11190 HasType;
11191 DeclaresMethod;
11192 HasType;
11193 HasParam;
11194 HasGenericType;
11195 HasTypeArg;
11196 HasType;
11197 DeclaresMethod;
11198 HasGenericType;
11199 HasTypeArg;
11200 HasType;
11201 DeclaresMethod;
11202 HasType;
11203 HasParam;
11204 HasGenericType;
11205 HasTypeArg;
11206 HasType;
11207 DeclaresMethod;
11208 HasGenericType;
11209 HasTypeArg;
11210 HasType;
11211 DeclaresMethod;
11212 HasType;
11213 HasParam;
11214 HasGenericType;
11215 HasTypeArg;
11216 HasType;
11217 DeclaresMethod;
11218 HasGenericType;
11219 HasTypeArg;
11220 HasType;
11221 DeclaresMethod;
11222 HasType;
11223 HasParam;
11224 Defines 20;
11225 ContainsClassifier;
11226 Imports 9;
11227 Imports 9;
11228 Imports 9;
11229 Imports 11;
11230 Imports 10;
11231 Imports 16;
11232 Imports 17;
11233 Imports 11;
11234 Imports 356;
11235 Imports 18;
11236 Extends;
11237 Implements;
11238 Implements;
11239 DeclaresConstructor;
11240 HasType;
11241 HasParam;
11242 HasType;
11243 HasParam;
11244 HasType;
11245 HasParam;
11246 HasType;
11247 HasParam;
11248 HasType;
11249 DeclaresMethod;
11250 HasUpperBound;
11251 HasGenericType;
11252 HasTypeArg;
11253 HasType;
11254 DeclaresMethod;
11255 HasTypeParam;
11256 HasType;
11257 DeclaresMethod;
11258 HasType;
11259 HasParam;
11260 HasTypeParam;
11261 HasType;
11262 DeclaresMethod;
11263 HasType;
11264 HasParam;
11265 HasType;
11266 HasParam;
11267 HasType;
11268 DeclaresMethod;
11269 HasType;
11270 HasParam;
11271 Throws;
11272 HasType;
11273 DeclaresMethod;
11274 HasType;
11275 HasParam;
11276 HasType;
11277 HasParam;
11278 Throws;
11279 HasType;
11280 DeclaresMethod;
11281 HasType;
11282 HasParam;
11283 Throws;
11284 Throws;
11285 HasType;
11286 DeclaresMethod;
11287 HasType;
11288 HasParam;
11289 Throws;
11290 Throws;
11291 HasType;
11292 DeclaresMethod;
11293 HasType;
11294 DeclaresMethod;
11295 HasType;
11296 DeclaresMethod;
11297 HasType;
11298 HasParam;
11299 HasType;
11300 DeclaresMethod;
11301 HasType;
11302 DeclaresMethod;
11303 HasType;
11304 DeclaresMethod;
11305 HasType;
11306 DeclaresMethod;
11307 HasType;
11308 DeclaresMethod;
11309 HasType;
11310 DeclaresMethod;
11311 Defines 30;
11312 ContainsClassifier;
11313 Imports 9;
11314 Imports 9;
11315 Imports 9;
11316 Imports 11;
11317 Imports 10;
11318 Imports 16;
11319 Imports 17;
11320 Imports 470;
11321 Imports 11;
11322 Imports 18;
11323 Extends;
11324 Implements;
11325 Implements;
11326 DeclaresConstructor;
11327 HasType;
11328 HasParam;
11329 HasType;
11330 HasParam;
11331 HasType;
11332 HasParam;
11333 HasType;
11334 HasParam;
11335 HasType;
11336 DeclaresMethod;
11337 HasUpperBound;
11338 HasGenericType;
11339 HasTypeArg;
11340 HasType;
11341 DeclaresMethod;
11342 HasTypeParam;
11343 HasType;
11344 DeclaresMethod;
11345 HasType;
11346 HasParam;
11347 HasTypeParam;
11348 HasType;
11349 DeclaresMethod;
11350 HasType;
11351 HasParam;
11352 HasType;
11353 HasParam;
11354 HasType;
11355 DeclaresMethod;
11356 HasType;
11357 HasParam;
11358 Throws;
11359 HasType;
11360 DeclaresMethod;
11361 HasType;
11362 HasParam;
11363 HasType;
11364 HasParam;
11365 Throws;
11366 HasType;
11367 DeclaresMethod;
11368 HasType;
11369 HasParam;
11370 Throws;
11371 Throws;
11372 HasType;
11373 DeclaresMethod;
11374 HasType;
11375 HasParam;
11376 Throws;
11377 Throws;
11378 HasType;
11379 DeclaresMethod;
11380 HasType;
11381 DeclaresMethod;
11382 HasType;
11383 DeclaresMethod;
11384 HasType;
11385 HasParam;
11386 HasType;
11387 DeclaresMethod;
11388 HasType;
11389 DeclaresMethod;
11390 HasType;
11391 DeclaresMethod;
11392 HasType;
11393 DeclaresMethod;
11394 HasType;
11395 DeclaresMethod;
11396 HasType;
11397 DeclaresMethod;
11398 Defines 30;
11399 ContainsClassifier;
11400 Imports 9;
11401 Imports 9;
11402 Imports 9;
11403 Imports 11;
11404 Imports 10;
11405 Imports 16;
11406 Imports 17;
11407 Imports 327;
11408 Imports 12;
11409 Imports 18;
11410 Extends;
11411 Implements;
11412 Implements;
11413 DeclaresConstructor;
11414 HasType;
11415 HasParam;
11416 HasType;
11417 HasParam;
11418 HasType;
11419 HasParam;
11420 HasType;
11421 HasParam;
11422 HasType;
11423 DeclaresMethod;
11424 HasUpperBound;
11425 HasGenericType;
11426 HasTypeArg;
11427 HasType;
11428 DeclaresMethod;
11429 HasTypeParam;
11430 HasType;
11431 DeclaresMethod;
11432 HasType;
11433 HasParam;
11434 HasTypeParam;
11435 HasType;
11436 DeclaresMethod;
11437 HasType;
11438 HasParam;
11439 HasType;
11440 HasParam;
11441 HasType;
11442 DeclaresMethod;
11443 HasType;
11444 HasParam;
11445 Throws;
11446 HasType;
11447 DeclaresMethod;
11448 HasType;
11449 HasParam;
11450 HasType;
11451 HasParam;
11452 Throws;
11453 HasType;
11454 DeclaresMethod;
11455 HasType;
11456 HasParam;
11457 Throws;
11458 Throws;
11459 HasType;
11460 DeclaresMethod;
11461 HasType;
11462 HasParam;
11463 Throws;
11464 Throws;
11465 HasType;
11466 DeclaresMethod;
11467 HasType;
11468 DeclaresMethod;
11469 HasType;
11470 DeclaresMethod;
11471 HasType;
11472 HasParam;
11473 HasType;
11474 DeclaresMethod;
11475 HasType;
11476 DeclaresMethod;
11477 HasType;
11478 DeclaresMethod;
11479 HasType;
11480 DeclaresMethod;
11481 HasType;
11482 DeclaresMethod;
11483 HasType;
11484 DeclaresMethod;
11485 Defines 30;
11486 ContainsClassifier;
11487 Imports 9;
11488 Imports 9;
11489 Imports 9;
11490 Imports 11;
11491 Imports 10;
11492 Imports 16;
11493 Imports 17;
11494 Imports 11;
11495 Imports 12;
11496 Imports 18;
11497 Extends;
11498 Implements;
11499 Implements;
11500 DeclaresConstructor;
11501 HasType;
11502 HasParam;
11503 HasType;
11504 HasParam;
11505 HasType;
11506 HasParam;
11507 HasType;
11508 HasParam;
11509 HasType;
11510 DeclaresMethod;
11511 HasUpperBound;
11512 HasGenericType;
11513 HasTypeArg;
11514 HasType;
11515 DeclaresMethod;
11516 HasTypeParam;
11517 HasType;
11518 DeclaresMethod;
11519 HasType;
11520 HasParam;
11521 HasTypeParam;
11522 HasType;
11523 DeclaresMethod;
11524 HasType;
11525 HasParam;
11526 HasType;
11527 HasParam;
11528 HasType;
11529 DeclaresMethod;
11530 HasType;
11531 HasParam;
11532 Throws;
11533 HasType;
11534 DeclaresMethod;
11535 HasType;
11536 HasParam;
11537 HasType;
11538 HasParam;
11539 Throws;
11540 HasType;
11541 DeclaresMethod;
11542 HasType;
11543 HasParam;
11544 Throws;
11545 Throws;
11546 HasType;
11547 DeclaresMethod;
11548 HasType;
11549 HasParam;
11550 Throws;
11551 Throws;
11552 HasType;
11553 DeclaresMethod;
11554 HasType;
11555 DeclaresMethod;
11556 HasType;
11557 DeclaresMethod;
11558 HasType;
11559 HasParam;
11560 HasType;
11561 DeclaresMethod;
11562 HasType;
11563 DeclaresMethod;
11564 HasType;
11565 DeclaresMethod;
11566 HasType;
11567 DeclaresMethod;
11568 HasType;
11569 DeclaresMethod;
11570 HasType;
11571 DeclaresMethod;
11572 Defines 30;
11573 ContainsClassifier;
11574 Imports 9;
11575 Imports 9;
11576 Imports 9;
11577 Imports 11;
11578 Imports 10;
11579 Imports 16;
11580 Imports 17;
11581 Imports 11;
11582 Imports 120;
11583 Imports 18;
11584 Extends;
11585 Implements;
11586 Implements;
11587 DeclaresConstructor;
11588 HasType;
11589 HasParam;
11590 HasType;
11591 HasParam;
11592 HasType;
11593 HasParam;
11594 HasType;
11595 HasParam;
11596 HasType;
11597 DeclaresMethod;
11598 HasUpperBound;
11599 HasGenericType;
11600 HasTypeArg;
11601 HasType;
11602 DeclaresMethod;
11603 HasTypeParam;
11604 HasType;
11605 DeclaresMethod;
11606 HasType;
11607 HasParam;
11608 HasTypeParam;
11609 HasType;
11610 DeclaresMethod;
11611 HasType;
11612 HasParam;
11613 HasType;
11614 HasParam;
11615 HasType;
11616 DeclaresMethod;
11617 HasType;
11618 HasParam;
11619 Throws;
11620 HasType;
11621 DeclaresMethod;
11622 HasType;
11623 HasParam;
11624 HasType;
11625 HasParam;
11626 Throws;
11627 HasType;
11628 DeclaresMethod;
11629 HasType;
11630 HasParam;
11631 Throws;
11632 Throws;
11633 HasType;
11634 DeclaresMethod;
11635 HasType;
11636 HasParam;
11637 Throws;
11638 Throws;
11639 HasType;
11640 DeclaresMethod;
11641 HasType;
11642 DeclaresMethod;
11643 HasType;
11644 DeclaresMethod;
11645 HasType;
11646 HasParam;
11647 HasType;
11648 DeclaresMethod;
11649 HasType;
11650 DeclaresMethod;
11651 HasType;
11652 DeclaresMethod;
11653 HasType;
11654 DeclaresMethod;
11655 HasType;
11656 DeclaresMethod;
11657 HasType;
11658 DeclaresMethod;
11659 Defines 30;
11660 ContainsClassifier;
11661 Imports 9;
11662 Imports 9;
11663 Imports 9;
11664 Imports 11;
11665 Imports 10;
11666 Imports 16;
11667 Imports 17;
11668 Imports 12;
11669 Imports 11;
11670 Imports 18;
11671 Extends;
11672 Implements;
11673 Implements;
11674 DeclaresConstructor;
11675 HasType;
11676 HasParam;
11677 HasType;
11678 HasParam;
11679 HasType;
11680 HasParam;
11681 HasType;
11682 HasParam;
11683 HasType;
11684 DeclaresMethod;
11685 HasUpperBound;
11686 HasGenericType;
11687 HasTypeArg;
11688 HasType;
11689 DeclaresMethod;
11690 HasTypeParam;
11691 HasType;
11692 DeclaresMethod;
11693 HasType;
11694 HasParam;
11695 HasTypeParam;
11696 HasType;
11697 DeclaresMethod;
11698 HasType;
11699 HasParam;
11700 HasType;
11701 HasParam;
11702 HasType;
11703 DeclaresMethod;
11704 HasType;
11705 HasParam;
11706 Throws;
11707 HasType;
11708 DeclaresMethod;
11709 HasType;
11710 HasParam;
11711 HasType;
11712 HasParam;
11713 Throws;
11714 HasType;
11715 DeclaresMethod;
11716 HasType;
11717 HasParam;
11718 Throws;
11719 Throws;
11720 HasType;
11721 DeclaresMethod;
11722 HasType;
11723 HasParam;
11724 Throws;
11725 Throws;
11726 HasType;
11727 DeclaresMethod;
11728 HasType;
11729 DeclaresMethod;
11730 HasType;
11731 DeclaresMethod;
11732 HasType;
11733 HasParam;
11734 HasType;
11735 DeclaresMethod;
11736 HasType;
11737 DeclaresMethod;
11738 HasType;
11739 DeclaresMethod;
11740 HasType;
11741 DeclaresMethod;
11742 HasType;
11743 DeclaresMethod;
11744 HasType;
11745 DeclaresMethod;
11746 Defines 30;
11747 ContainsClassifier;
11748 Imports 9;
11749 Imports 9;
11750 Imports 9;
11751 Imports 11;
11752 Imports 10;
11753 Imports 16;
11754 Imports 17;
11755 Imports 11;
11756 Imports 11;
11757 Imports 18;
11758 Extends;
11759 Implements;
11760 Implements;
11761 DeclaresConstructor;
11762 HasType;
11763 HasParam;
11764 HasType;
11765 HasParam;
11766 HasType;
11767 HasParam;
11768 HasType;
11769 HasParam;
11770 HasType;
11771 DeclaresMethod;
11772 HasUpperBound;
11773 HasGenericType;
11774 HasTypeArg;
11775 HasType;
11776 DeclaresMethod;
11777 HasTypeParam;
11778 HasType;
11779 DeclaresMethod;
11780 HasType;
11781 HasParam;
11782 HasTypeParam;
11783 HasType;
11784 DeclaresMethod;
11785 HasType;
11786 HasParam;
11787 HasType;
11788 HasParam;
11789 HasType;
11790 DeclaresMethod;
11791 HasType;
11792 HasParam;
11793 Throws;
11794 HasType;
11795 DeclaresMethod;
11796 HasType;
11797 HasParam;
11798 HasType;
11799 HasParam;
11800 Throws;
11801 HasType;
11802 DeclaresMethod;
11803 HasType;
11804 HasParam;
11805 Throws;
11806 Throws;
11807 HasType;
11808 DeclaresMethod;
11809 HasType;
11810 HasParam;
11811 Throws;
11812 Throws;
11813 HasType;
11814 DeclaresMethod;
11815 HasType;
11816 DeclaresMethod;
11817 HasType;
11818 DeclaresMethod;
11819 HasType;
11820 HasParam;
11821 HasType;
11822 DeclaresMethod;
11823 HasType;
11824 DeclaresMethod;
11825 HasType;
11826 DeclaresMethod;
11827 HasType;
11828 DeclaresMethod;
11829 HasType;
11830 DeclaresMethod;
11831 HasType;
11832 DeclaresMethod;
11833 Defines 30;
11834 ContainsClassifier;
11835 Imports 9;
11836 Imports 9;
11837 Imports 9;
11838 Imports 11;
11839 Imports 10;
11840 Imports 16;
11841 Imports 17;
11842 Imports 356;
11843 Imports 11;
11844 Imports 18;
11845 Extends;
11846 Implements;
11847 Implements;
11848 DeclaresConstructor;
11849 HasType;
11850 HasParam;
11851 HasType;
11852 HasParam;
11853 HasType;
11854 HasParam;
11855 HasType;
11856 HasParam;
11857 HasType;
11858 DeclaresMethod;
11859 HasUpperBound;
11860 HasGenericType;
11861 HasTypeArg;
11862 HasType;
11863 DeclaresMethod;
11864 HasTypeParam;
11865 HasType;
11866 DeclaresMethod;
11867 HasType;
11868 HasParam;
11869 HasTypeParam;
11870 HasType;
11871 DeclaresMethod;
11872 HasType;
11873 HasParam;
11874 HasType;
11875 HasParam;
11876 HasType;
11877 DeclaresMethod;
11878 HasType;
11879 HasParam;
11880 Throws;
11881 HasType;
11882 DeclaresMethod;
11883 HasType;
11884 HasParam;
11885 HasType;
11886 HasParam;
11887 Throws;
11888 HasType;
11889 DeclaresMethod;
11890 HasType;
11891 HasParam;
11892 Throws;
11893 Throws;
11894 HasType;
11895 DeclaresMethod;
11896 HasType;
11897 HasParam;
11898 Throws;
11899 Throws;
11900 HasType;
11901 DeclaresMethod;
11902 HasType;
11903 DeclaresMethod;
11904 HasType;
11905 DeclaresMethod;
11906 HasType;
11907 HasParam;
11908 HasType;
11909 DeclaresMethod;
11910 HasType;
11911 DeclaresMethod;
11912 HasType;
11913 DeclaresMethod;
11914 HasType;
11915 DeclaresMethod;
11916 HasType;
11917 DeclaresMethod;
11918 HasType;
11919 DeclaresMethod;
11920 Defines 30;
11921 ContainsClassifier;
11922 Imports 9;
11923 Imports 9;
11924 Imports 9;
11925 Imports 11;
11926 Imports 10;
11927 Imports 16;
11928 Imports 17;
11929 Imports 11;
11930 Imports 12;
11931 Imports 18;
11932 Extends;
11933 Implements;
11934 Implements;
11935 DeclaresConstructor;
11936 HasType;
11937 HasParam;
11938 HasType;
11939 HasParam;
11940 HasType;
11941 HasParam;
11942 HasType;
11943 HasParam;
11944 HasType;
11945 DeclaresMethod;
11946 HasUpperBound;
11947 HasGenericType;
11948 HasTypeArg;
11949 HasType;
11950 DeclaresMethod;
11951 HasTypeParam;
11952 HasType;
11953 DeclaresMethod;
11954 HasType;
11955 HasParam;
11956 HasTypeParam;
11957 HasType;
11958 DeclaresMethod;
11959 HasType;
11960 HasParam;
11961 HasType;
11962 HasParam;
11963 HasType;
11964 DeclaresMethod;
11965 HasType;
11966 HasParam;
11967 Throws;
11968 HasType;
11969 DeclaresMethod;
11970 HasType;
11971 HasParam;
11972 HasType;
11973 HasParam;
11974 Throws;
11975 HasType;
11976 DeclaresMethod;
11977 HasType;
11978 HasParam;
11979 Throws;
11980 Throws;
11981 HasType;
11982 DeclaresMethod;
11983 HasType;
11984 HasParam;
11985 Throws;
11986 Throws;
11987 HasType;
11988 DeclaresMethod;
11989 HasType;
11990 DeclaresMethod;
11991 HasType;
11992 DeclaresMethod;
11993 HasType;
11994 HasParam;
11995 HasType;
11996 DeclaresMethod;
11997 HasType;
11998 DeclaresMethod;
11999 HasType;
12000 DeclaresMethod;
12001 HasType;
12002 DeclaresMethod;
12003 HasType;
12004 DeclaresMethod;
12005 HasType;
12006 DeclaresMethod;
12007 Defines 30;
12008 ContainsClassifier;
12009 Imports 9;
12010 Imports 9;
12011 Imports 9;
12012 Imports 11;
12013 Imports 10;
12014 Imports 16;
12015 Imports 17;
12016 Imports 11;
12017 Imports 327;
12018 Imports 18;
12019 Extends;
12020 Implements;
12021 Implements;
12022 DeclaresConstructor;
12023 HasType;
12024 HasParam;
12025 HasType;
12026 HasParam;
12027 HasType;
12028 HasParam;
12029 HasType;
12030 HasParam;
12031 HasType;
12032 DeclaresMethod;
12033 HasUpperBound;
12034 HasGenericType;
12035 HasTypeArg;
12036 HasType;
12037 DeclaresMethod;
12038 HasTypeParam;
12039 HasType;
12040 DeclaresMethod;
12041 HasType;
12042 HasParam;
12043 HasTypeParam;
12044 HasType;
12045 DeclaresMethod;
12046 HasType;
12047 HasParam;
12048 HasType;
12049 HasParam;
12050 HasType;
12051 DeclaresMethod;
12052 HasType;
12053 HasParam;
12054 Throws;
12055 HasType;
12056 DeclaresMethod;
12057 HasType;
12058 HasParam;
12059 HasType;
12060 HasParam;
12061 Throws;
12062 HasType;
12063 DeclaresMethod;
12064 HasType;
12065 HasParam;
12066 Throws;
12067 Throws;
12068 HasType;
12069 DeclaresMethod;
12070 HasType;
12071 HasParam;
12072 Throws;
12073 Throws;
12074 HasType;
12075 DeclaresMethod;
12076 HasType;
12077 DeclaresMethod;
12078 HasType;
12079 DeclaresMethod;
12080 HasType;
12081 HasParam;
12082 HasType;
12083 DeclaresMethod;
12084 HasType;
12085 DeclaresMethod;
12086 HasType;
12087 DeclaresMethod;
12088 HasType;
12089 DeclaresMethod;
12090 HasType;
12091 DeclaresMethod;
12092 HasType;
12093 DeclaresMethod;
12094 Defines 30;
12095 ContainsClassifier;
12096 Imports 9;
12097 Imports 9;
12098 Imports 9;
12099 Imports 11;
12100 Imports 10;
12101 Imports 16;
12102 Imports 17;
12103 Imports 33;
12104 Imports 184;
12105 Imports 18;
12106 Extends;
12107 Implements;
12108 Implements;
12109 HasType;
12110 DeclaresField;
12111 DeclaresConstructor;
12112 HasType;
12113 HasParam;
12114 HasType;
12115 HasParam;
12116 HasType;
12117 HasParam;
12118 HasType;
12119 HasParam;
12120 HasType;
12121 DeclaresMethod;
12122 HasUpperBound;
12123 HasGenericType;
12124 HasTypeArg;
12125 HasType;
12126 DeclaresMethod;
12127 HasTypeParam;
12128 HasType;
12129 DeclaresMethod;
12130 HasType;
12131 HasParam;
12132 HasTypeParam;
12133 HasType;
12134 DeclaresMethod;
12135 HasType;
12136 HasParam;
12137 HasType;
12138 HasParam;
12139 HasType;
12140 DeclaresMethod;
12141 HasType;
12142 DeclaresMethod;
12143 HasType;
12144 HasParam;
12145 HasType;
12146 DeclaresMethod;
12147 HasType;
12148 HasParam;
12149 Throws;
12150 HasType;
12151 DeclaresMethod;
12152 HasType;
12153 HasParam;
12154 HasType;
12155 HasParam;
12156 Throws;
12157 HasType;
12158 DeclaresMethod;
12159 HasType;
12160 HasParam;
12161 Throws;
12162 Throws;
12163 HasType;
12164 DeclaresMethod;
12165 HasType;
12166 HasParam;
12167 Throws;
12168 Throws;
12169 HasType;
12170 DeclaresMethod;
12171 HasType;
12172 DeclaresMethod;
12173 HasType;
12174 DeclaresMethod;
12175 HasType;
12176 HasParam;
12177 HasType;
12178 DeclaresMethod;
12179 HasType;
12180 DeclaresMethod;
12181 HasType;
12182 DeclaresMethod;
12183 HasType;
12184 DeclaresMethod;
12185 HasType;
12186 DeclaresMethod;
12187 HasType;
12188 DeclaresMethod;
12189 Defines 30;
12190 ContainsClassifier;
12191 Imports 9;
12192 Imports 11;
12193 Imports 9;
12194 Imports 9;
12195 Imports 10;
12196 Imports 16;
12197 Imports 18;
12198 Extends;
12199 Implements;
12200 Implements;
12201 Implements;
12202 HasGenericType;
12203 HasTypeArg;
12204 HasType;
12205 DeclaresField;
12206 HasType;
12207 DeclaresField;
12208 HasType;
12209 DeclaresField;
12210 DeclaresConstructor;
12211 HasType;
12212 HasParam;
12213 HasType;
12214 HasParam;
12215 HasType;
12216 DeclaresMethod;
12217 HasUpperBound;
12218 HasGenericType;
12219 HasTypeArg;
12220 HasType;
12221 DeclaresMethod;
12222 HasTypeParam;
12223 HasType;
12224 DeclaresMethod;
12225 HasType;
12226 HasParam;
12227 HasTypeParam;
12228 HasType;
12229 DeclaresMethod;
12230 HasType;
12231 HasParam;
12232 HasType;
12233 HasParam;
12234 HasGenericType;
12235 HasTypeArg;
12236 HasType;
12237 DeclaresMethod;
12238 HasType;
12239 DeclaresMethod;
12240 HasGenericType;
12241 HasTypeArg;
12242 HasType;
12243 HasParam;
12244 HasType;
12245 DeclaresMethod;
12246 HasType;
12247 DeclaresMethod;
12248 HasType;
12249 HasParam;
12250 HasType;
12251 DeclaresMethod;
12252 HasType;
12253 DeclaresMethod;
12254 HasType;
12255 HasParam;
12256 HasType;
12257 DeclaresMethod;
12258 HasType;
12259 HasParam;
12260 Throws;
12261 HasType;
12262 DeclaresMethod;
12263 HasType;
12264 HasParam;
12265 HasType;
12266 HasParam;
12267 Throws;
12268 HasType;
12269 DeclaresMethod;
12270 HasType;
12271 HasParam;
12272 Throws;
12273 Throws;
12274 HasType;
12275 DeclaresMethod;
12276 HasType;
12277 HasParam;
12278 Throws;
12279 Throws;
12280 HasType;
12281 DeclaresMethod;
12282 HasType;
12283 DeclaresMethod;
12284 HasType;
12285 DeclaresMethod;
12286 HasType;
12287 DeclaresMethod;
12288 HasType;
12289 DeclaresMethod;
12290 HasType;
12291 DeclaresMethod;
12292 HasType;
12293 DeclaresMethod;
12294 HasType;
12295 DeclaresMethod;
12296 HasType;
12297 DeclaresMethod;
12298 HasType;
12299 DeclaresMethod;
12300 HasType;
12301 DeclaresMethod;
12302 HasType;
12303 HasParam;
12304 HasType;
12305 DeclaresMethod;
12306 HasType;
12307 DeclaresMethod;
12308 HasType;
12309 HasParam;
12310 HasType;
12311 DeclaresMethod;
12312 HasType;
12313 DeclaresMethod;
12314 HasType;
12315 HasParam;
12316 HasType;
12317 DeclaresMethod;
12318 HasType;
12319 DeclaresMethod;
12320 HasType;
12321 HasParam;
12322 HasType;
12323 DeclaresMethod;
12324 HasType;
12325 DeclaresMethod;
12326 HasType;
12327 HasParam;
12328 HasType;
12329 DeclaresMethod;
12330 HasType;
12331 DeclaresMethod;
12332 HasType;
12333 HasParam;
12334 HasType;
12335 DeclaresMethod;
12336 HasType;
12337 DeclaresMethod;
12338 HasType;
12339 HasParam;
12340 HasType;
12341 DeclaresMethod;
12342 HasType;
12343 DeclaresMethod;
12344 HasType;
12345 HasParam;
12346 HasType;
12347 DeclaresMethod;
12348 HasType;
12349 DeclaresMethod;
12350 HasType;
12351 HasParam;
12352 HasType;
12353 DeclaresMethod;
12354 HasType;
12355 DeclaresMethod;
12356 HasType;
12357 HasParam;
12358 HasType;
12359 DeclaresMethod;
12360 HasType;
12361 DeclaresMethod;
12362 HasType;
12363 HasParam;
12364 HasType;
12365 DeclaresMethod;
12366 HasType;
12367 DeclaresMethod;
12368 HasType;
12369 HasParam;
12370 HasType;
12371 DeclaresMethod;
12372 HasType;
12373 DeclaresMethod;
12374 HasType;
12375 HasParam;
12376 HasType;
12377 DeclaresMethod;
12378 HasType;
12379 DeclaresMethod;
12380 HasType;
12381 HasParam;
12382 HasType;
12383 DeclaresMethod;
12384 HasType;
12385 DeclaresMethod;
12386 HasType;
12387 HasParam;
12388 HasType;
12389 DeclaresMethod;
12390 HasType;
12391 DeclaresMethod;
12392 HasType;
12393 HasParam;
12394 HasType;
12395 DeclaresMethod;
12396 HasType;
12397 DeclaresMethod;
12398 HasType;
12399 HasParam;
12400 HasType;
12401 DeclaresMethod;
12402 HasType;
12403 DeclaresMethod;
12404 HasType;
12405 HasParam;
12406 HasType;
12407 DeclaresMethod;
12408 HasType;
12409 DeclaresMethod;
12410 HasType;
12411 HasParam;
12412 HasType;
12413 DeclaresMethod;
12414 HasType;
12415 HasParam;
12416 HasUpperBound;
12417 HasGenericType;
12418 HasTypeArg;
12419 HasType;
12420 DeclaresMethod;
12421 HasType;
12422 DeclaresMethod;
12423 HasType;
12424 HasParam;
12425 HasBound;
12426 HasTypeParam;
12427 HasGenericType;
12428 HasTypeArg;
12429 HasType;
12430 DeclaresMethod;
12431 HasBound;
12432 HasTypeParam;
12433 HasGenericType;
12434 HasTypeArg;
12435 HasType;
12436 DeclaresMethod;
12437 HasGenericType;
12438 HasTypeArg;
12439 HasType;
12440 HasParam;
12441 HasType;
12442 DeclaresMethod;
12443 HasType;
12444 HasParam;
12445 HasUpperBound;
12446 HasGenericType;
12447 HasTypeArg;
12448 HasType;
12449 DeclaresMethod;
12450 HasType;
12451 DeclaresMethod;
12452 HasType;
12453 HasParam;
12454 HasBound;
12455 HasTypeParam;
12456 HasGenericType;
12457 HasTypeArg;
12458 HasType;
12459 DeclaresMethod;
12460 HasBound;
12461 HasTypeParam;
12462 HasGenericType;
12463 HasTypeArg;
12464 HasType;
12465 DeclaresMethod;
12466 HasGenericType;
12467 HasTypeArg;
12468 HasType;
12469 HasParam;
12470 HasType;
12471 DeclaresMethod;
12472 HasType;
12473 HasParam;
12474 HasUpperBound;
12475 HasGenericType;
12476 HasTypeArg;
12477 HasType;
12478 DeclaresMethod;
12479 HasType;
12480 DeclaresMethod;
12481 HasType;
12482 HasParam;
12483 HasBound;
12484 HasTypeParam;
12485 HasGenericType;
12486 HasTypeArg;
12487 HasType;
12488 DeclaresMethod;
12489 HasBound;
12490 HasTypeParam;
12491 HasGenericType;
12492 HasTypeArg;
12493 HasType;
12494 DeclaresMethod;
12495 HasGenericType;
12496 HasTypeArg;
12497 HasType;
12498 HasParam;
12499 HasType;
12500 DeclaresMethod;
12501 HasType;
12502 HasParam;
12503 HasUpperBound;
12504 HasGenericType;
12505 HasTypeArg;
12506 HasType;
12507 DeclaresMethod;
12508 HasType;
12509 DeclaresMethod;
12510 HasType;
12511 HasParam;
12512 HasType;
12513 DeclaresMethod;
12514 HasType;
12515 DeclaresMethod;
12516 HasType;
12517 HasParam;
12518 HasUpperBound;
12519 HasGenericType;
12520 HasTypeArg;
12521 HasType;
12522 DeclaresMethod;
12523 HasType;
12524 DeclaresMethod;
12525 HasType;
12526 HasParam;
12527 HasBound;
12528 HasTypeParam;
12529 HasGenericType;
12530 HasTypeArg;
12531 HasType;
12532 DeclaresMethod;
12533 HasBound;
12534 HasTypeParam;
12535 HasGenericType;
12536 HasTypeArg;
12537 HasType;
12538 DeclaresMethod;
12539 HasGenericType;
12540 HasTypeArg;
12541 HasType;
12542 HasParam;
12543 HasType;
12544 DeclaresMethod;
12545 HasType;
12546 HasParam;
12547 HasUpperBound;
12548 HasGenericType;
12549 HasTypeArg;
12550 HasType;
12551 DeclaresMethod;
12552 HasType;
12553 DeclaresMethod;
12554 HasType;
12555 HasParam;
12556 HasBound;
12557 HasTypeParam;
12558 HasGenericType;
12559 HasTypeArg;
12560 HasType;
12561 DeclaresMethod;
12562 HasBound;
12563 HasTypeParam;
12564 HasGenericType;
12565 HasTypeArg;
12566 HasType;
12567 DeclaresMethod;
12568 HasGenericType;
12569 HasTypeArg;
12570 HasType;
12571 HasParam;
12572 HasType;
12573 DeclaresMethod;
12574 HasType;
12575 HasParam;
12576 HasUpperBound;
12577 HasGenericType;
12578 HasTypeArg;
12579 HasType;
12580 DeclaresMethod;
12581 HasType;
12582 DeclaresMethod;
12583 HasType;
12584 HasParam;
12585 HasBound;
12586 HasTypeParam;
12587 HasGenericType;
12588 HasTypeArg;
12589 HasType;
12590 DeclaresMethod;
12591 HasBound;
12592 HasTypeParam;
12593 HasGenericType;
12594 HasTypeArg;
12595 HasType;
12596 DeclaresMethod;
12597 HasGenericType;
12598 HasTypeArg;
12599 HasType;
12600 HasParam;
12601 HasType;
12602 DeclaresMethod;
12603 HasType;
12604 HasParam;
12605 HasUpperBound;
12606 HasGenericType;
12607 HasTypeArg;
12608 HasType;
12609 DeclaresMethod;
12610 HasType;
12611 DeclaresMethod;
12612 HasType;
12613 HasParam;
12614 HasBound;
12615 HasTypeParam;
12616 HasGenericType;
12617 HasTypeArg;
12618 HasType;
12619 DeclaresMethod;
12620 HasBound;
12621 HasTypeParam;
12622 HasGenericType;
12623 HasTypeArg;
12624 HasType;
12625 DeclaresMethod;
12626 HasGenericType;
12627 HasTypeArg;
12628 HasType;
12629 HasParam;
12630 HasType;
12631 DeclaresMethod;
12632 HasType;
12633 HasParam;
12634 HasUpperBound;
12635 HasGenericType;
12636 HasTypeArg;
12637 HasType;
12638 DeclaresMethod;
12639 HasType;
12640 DeclaresMethod;
12641 HasType;
12642 HasParam;
12643 HasType;
12644 DeclaresMethod;
12645 HasType;
12646 DeclaresMethod;
12647 HasType;
12648 HasParam;
12649 HasUpperBound;
12650 HasGenericType;
12651 HasTypeArg;
12652 HasType;
12653 DeclaresMethod;
12654 HasType;
12655 DeclaresMethod;
12656 HasType;
12657 HasParam;
12658 HasBound;
12659 HasTypeParam;
12660 HasGenericType;
12661 HasTypeArg;
12662 HasType;
12663 DeclaresMethod;
12664 HasBound;
12665 HasTypeParam;
12666 HasGenericType;
12667 HasTypeArg;
12668 HasType;
12669 DeclaresMethod;
12670 HasGenericType;
12671 HasTypeArg;
12672 HasType;
12673 HasParam;
12674 HasType;
12675 DeclaresMethod;
12676 HasType;
12677 HasParam;
12678 HasUpperBound;
12679 HasGenericType;
12680 HasTypeArg;
12681 HasType;
12682 DeclaresMethod;
12683 HasType;
12684 DeclaresMethod;
12685 HasType;
12686 HasParam;
12687 HasBound;
12688 HasTypeParam;
12689 HasGenericType;
12690 HasTypeArg;
12691 HasType;
12692 DeclaresMethod;
12693 HasBound;
12694 HasTypeParam;
12695 HasGenericType;
12696 HasTypeArg;
12697 HasType;
12698 DeclaresMethod;
12699 HasGenericType;
12700 HasTypeArg;
12701 HasType;
12702 HasParam;
12703 HasType;
12704 DeclaresMethod;
12705 HasType;
12706 HasParam;
12707 HasUpperBound;
12708 HasGenericType;
12709 HasTypeArg;
12710 HasType;
12711 DeclaresMethod;
12712 HasType;
12713 DeclaresMethod;
12714 HasType;
12715 HasParam;
12716 HasBound;
12717 HasTypeParam;
12718 HasGenericType;
12719 HasTypeArg;
12720 HasType;
12721 DeclaresMethod;
12722 HasBound;
12723 HasTypeParam;
12724 HasGenericType;
12725 HasTypeArg;
12726 HasType;
12727 DeclaresMethod;
12728 HasGenericType;
12729 HasTypeArg;
12730 HasType;
12731 HasParam;
12732 HasType;
12733 DeclaresMethod;
12734 HasType;
12735 HasParam;
12736 HasUpperBound;
12737 HasGenericType;
12738 HasTypeArg;
12739 HasType;
12740 DeclaresMethod;
12741 HasType;
12742 DeclaresMethod;
12743 HasType;
12744 HasParam;
12745 HasType;
12746 DeclaresMethod;
12747 HasType;
12748 DeclaresMethod;
12749 HasType;
12750 HasParam;
12751 HasUpperBound;
12752 HasGenericType;
12753 HasTypeArg;
12754 HasType;
12755 DeclaresMethod;
12756 HasType;
12757 DeclaresMethod;
12758 HasType;
12759 HasParam;
12760 HasBound;
12761 HasTypeParam;
12762 HasGenericType;
12763 HasTypeArg;
12764 HasType;
12765 DeclaresMethod;
12766 HasBound;
12767 HasTypeParam;
12768 HasGenericType;
12769 HasTypeArg;
12770 HasType;
12771 DeclaresMethod;
12772 HasGenericType;
12773 HasTypeArg;
12774 HasType;
12775 HasParam;
12776 HasGenericType;
12777 HasTypeArg;
12778 HasType;
12779 DeclaresMethod;
12780 HasGenericType;
12781 HasTypeArg;
12782 HasType;
12783 DeclaresMethod;
12784 HasType;
12785 HasParam;
12786 HasGenericType;
12787 HasTypeArg;
12788 HasType;
12789 DeclaresMethod;
12790 HasGenericType;
12791 HasTypeArg;
12792 HasType;
12793 DeclaresMethod;
12794 HasType;
12795 HasParam;
12796 HasGenericType;
12797 HasTypeArg;
12798 HasType;
12799 DeclaresMethod;
12800 HasGenericType;
12801 HasTypeArg;
12802 HasType;
12803 DeclaresMethod;
12804 HasType;
12805 HasParam;
12806 HasGenericType;
12807 HasTypeArg;
12808 HasType;
12809 DeclaresMethod;
12810 HasGenericType;
12811 HasTypeArg;
12812 HasType;
12813 DeclaresMethod;
12814 HasType;
12815 HasParam;
12816 HasGenericType;
12817 HasTypeArg;
12818 HasType;
12819 DeclaresMethod;
12820 HasGenericType;
12821 HasTypeArg;
12822 HasType;
12823 DeclaresMethod;
12824 HasType;
12825 HasParam;
12826 HasGenericType;
12827 HasTypeArg;
12828 HasType;
12829 DeclaresMethod;
12830 HasGenericType;
12831 HasTypeArg;
12832 HasType;
12833 DeclaresMethod;
12834 HasType;
12835 HasParam;
12836 HasGenericType;
12837 HasTypeArg;
12838 HasType;
12839 DeclaresMethod;
12840 HasGenericType;
12841 HasTypeArg;
12842 HasType;
12843 DeclaresMethod;
12844 HasType;
12845 HasParam;
12846 HasGenericType;
12847 HasTypeArg;
12848 HasType;
12849 DeclaresMethod;
12850 HasGenericType;
12851 HasTypeArg;
12852 HasType;
12853 DeclaresMethod;
12854 HasType;
12855 HasParam;
12856 HasGenericType;
12857 HasTypeArg;
12858 HasType;
12859 DeclaresMethod;
12860 HasGenericType;
12861 HasTypeArg;
12862 HasType;
12863 DeclaresMethod;
12864 HasType;
12865 HasParam;
12866 HasGenericType;
12867 HasTypeArg;
12868 HasType;
12869 DeclaresMethod;
12870 HasGenericType;
12871 HasTypeArg;
12872 HasType;
12873 DeclaresMethod;
12874 HasType;
12875 HasParam;
12876 HasGenericType;
12877 HasTypeArg;
12878 HasType;
12879 DeclaresMethod;
12880 HasGenericType;
12881 HasTypeArg;
12882 HasType;
12883 DeclaresMethod;
12884 HasType;
12885 HasParam;
12886 HasGenericType;
12887 HasTypeArg;
12888 HasType;
12889 DeclaresMethod;
12890 HasGenericType;
12891 HasTypeArg;
12892 HasType;
12893 DeclaresMethod;
12894 HasType;
12895 HasParam;
12896 HasGenericType;
12897 HasTypeArg;
12898 HasType;
12899 DeclaresMethod;
12900 HasGenericType;
12901 HasTypeArg;
12902 HasType;
12903 DeclaresMethod;
12904 HasType;
12905 HasParam;
12906 HasGenericType;
12907 HasTypeArg;
12908 HasType;
12909 DeclaresMethod;
12910 HasGenericType;
12911 HasTypeArg;
12912 HasType;
12913 DeclaresMethod;
12914 HasType;
12915 HasParam;
12916 HasGenericType;
12917 HasTypeArg;
12918 HasType;
12919 DeclaresMethod;
12920 HasGenericType;
12921 HasTypeArg;
12922 HasType;
12923 DeclaresMethod;
12924 HasType;
12925 HasParam;
12926 HasGenericType;
12927 HasTypeArg;
12928 HasType;
12929 DeclaresMethod;
12930 HasGenericType;
12931 HasTypeArg;
12932 HasType;
12933 DeclaresMethod;
12934 HasType;
12935 HasParam;
12936 HasGenericType;
12937 HasTypeArg;
12938 HasType;
12939 DeclaresMethod;
12940 HasGenericType;
12941 HasTypeArg;
12942 HasType;
12943 DeclaresMethod;
12944 HasType;
12945 HasParam;
12946 HasGenericType;
12947 HasTypeArg;
12948 HasType;
12949 DeclaresMethod;
12950 HasGenericType;
12951 HasTypeArg;
12952 HasType;
12953 DeclaresMethod;
12954 HasType;
12955 HasParam;
12956 HasGenericType;
12957 HasTypeArg;
12958 HasType;
12959 DeclaresMethod;
12960 HasGenericType;
12961 HasTypeArg;
12962 HasType;
12963 DeclaresMethod;
12964 HasType;
12965 HasParam;
12966 Defines 20;
12967 ContainsClassifier;
12968 Imports 9;
12969 Imports 334;
12970 Imports 11;
12971 Extends;
12972 Implements;
12973 DeclaresConstructor;
12974 Defines 15;
12975 ContainsClassifier;
12976 Imports 9;
12977 Imports 10;
12978 Imports 12;
12979 Imports 9;
12980 Imports 10;
12981 Imports 16;
12982 Imports 18;
12983 Extends;
12984 Implements;
12985 Implements;
12986 DeclaresConstructor;
12987 DeclaresConstructor;
12988 HasType;
12989 HasParam;
12990 HasType;
12991 HasParam;
12992 DeclaresConstructor;
12993 HasType;
12994 HasParam;
12995 HasType;
12996 HasParam;
12997 HasType;
12998 HasParam;
12999 DeclaresConstructor;
13000 HasType;
13001 HasParam;
13002 HasType;
13003 DeclaresMethod;
13004 HasUpperBound;
13005 HasGenericType;
13006 HasTypeArg;
13007 HasType;
13008 DeclaresMethod;
13009 HasTypeParam;
13010 HasType;
13011 DeclaresMethod;
13012 HasType;
13013 HasParam;
13014 HasTypeParam;
13015 HasType;
13016 DeclaresMethod;
13017 HasType;
13018 HasParam;
13019 HasType;
13020 HasParam;
13021 HasType;
13022 DeclaresMethod;
13023 HasType;
13024 HasParam;
13025 Throws;
13026 HasType;
13027 DeclaresMethod;
13028 HasType;
13029 HasParam;
13030 HasType;
13031 HasParam;
13032 Throws;
13033 HasType;
13034 DeclaresMethod;
13035 HasType;
13036 HasParam;
13037 Throws;
13038 Throws;
13039 HasType;
13040 DeclaresMethod;
13041 HasType;
13042 HasParam;
13043 Throws;
13044 Throws;
13045 HasType;
13046 DeclaresMethod;
13047 HasType;
13048 DeclaresMethod;
13049 HasType;
13050 DeclaresMethod;
13051 HasType;
13052 DeclaresMethod;
13053 HasType;
13054 HasParam;
13055 HasType;
13056 DeclaresMethod;
13057 HasType;
13058 DeclaresMethod;
13059 HasType;
13060 DeclaresMethod;
13061 HasType;
13062 HasParam;
13063 HasType;
13064 DeclaresMethod;
13065 HasType;
13066 DeclaresMethod;
13067 HasType;
13068 DeclaresMethod;
13069 HasType;
13070 HasParam;
13071 HasType;
13072 DeclaresMethod;
13073 HasType;
13074 DeclaresMethod;
13075 HasType;
13076 DeclaresMethod;
13077 HasType;
13078 HasParam;
13079 HasType;
13080 DeclaresMethod;
13081 HasType;
13082 DeclaresMethod;
13083 HasType;
13084 DeclaresMethod;
13085 HasType;
13086 DeclaresMethod;
13087 HasType;
13088 HasParam;
13089 HasType;
13090 DeclaresMethod;
13091 HasType;
13092 DeclaresMethod;
13093 HasType;
13094 HasParam;
13095 HasType;
13096 HasParam;
13097 HasType;
13098 DeclaresMethod;
13099 HasType;
13100 HasParam;
13101 HasType;
13102 HasParam;
13103 HasType;
13104 HasParam;
13105 HasType;
13106 DeclaresMethod;
13107 HasType;
13108 DeclaresMethod;
13109 HasType;
13110 HasParam;
13111 HasType;
13112 HasParam;
13113 HasType;
13114 DeclaresMethod;
13115 HasType;
13116 HasParam;
13117 HasType;
13118 HasParam;
13119 HasType;
13120 HasParam;
13121 HasType;
13122 DeclaresMethod;
13123 HasType;
13124 DeclaresMethod;
13125 HasType;
13126 DeclaresMethod;
13127 HasType;
13128 HasParam;
13129 HasType;
13130 HasParam;
13131 HasType;
13132 DeclaresMethod;
13133 HasType;
13134 HasParam;
13135 HasType;
13136 HasParam;
13137 HasType;
13138 HasParam;
13139 HasType;
13140 DeclaresMethod;
13141 HasType;
13142 DeclaresMethod;
13143 HasType;
13144 HasParam;
13145 HasType;
13146 HasParam;
13147 HasType;
13148 DeclaresMethod;
13149 HasType;
13150 HasParam;
13151 HasType;
13152 HasParam;
13153 HasType;
13154 HasParam;
13155 HasType;
13156 DeclaresMethod;
13157 HasType;
13158 DeclaresMethod;
13159 HasType;
13160 HasParam;
13161 HasType;
13162 HasParam;
13163 HasType;
13164 DeclaresMethod;
13165 HasType;
13166 HasParam;
13167 HasType;
13168 HasParam;
13169 HasType;
13170 HasParam;
13171 HasType;
13172 DeclaresMethod;
13173 HasType;
13174 DeclaresMethod;
13175 HasType;
13176 HasParam;
13177 HasType;
13178 HasParam;
13179 HasType;
13180 DeclaresMethod;
13181 HasType;
13182 HasParam;
13183 HasType;
13184 HasParam;
13185 HasType;
13186 HasParam;
13187 HasType;
13188 DeclaresMethod;
13189 HasType;
13190 DeclaresMethod;
13191 HasType;
13192 HasParam;
13193 HasType;
13194 HasParam;
13195 HasType;
13196 DeclaresMethod;
13197 HasType;
13198 HasParam;
13199 HasType;
13200 HasParam;
13201 HasType;
13202 HasParam;
13203 HasType;
13204 DeclaresMethod;
13205 HasType;
13206 DeclaresMethod;
13207 HasType;
13208 HasParam;
13209 HasType;
13210 HasParam;
13211 HasType;
13212 DeclaresMethod;
13213 HasType;
13214 HasParam;
13215 HasType;
13216 HasParam;
13217 HasType;
13218 HasParam;
13219 HasType;
13220 DeclaresMethod;
13221 HasType;
13222 DeclaresMethod;
13223 HasType;
13224 HasParam;
13225 HasType;
13226 HasParam;
13227 HasType;
13228 DeclaresMethod;
13229 HasType;
13230 HasParam;
13231 HasType;
13232 HasParam;
13233 HasType;
13234 HasParam;
13235 HasType;
13236 DeclaresMethod;
13237 HasType;
13238 DeclaresMethod;
13239 HasType;
13240 DeclaresMethod;
13241 HasType;
13242 HasParam;
13243 HasType;
13244 DeclaresMethod;
13245 HasType;
13246 DeclaresMethod;
13247 HasType;
13248 DeclaresMethod;
13249 HasType;
13250 HasParam;
13251 HasType;
13252 DeclaresMethod;
13253 HasType;
13254 DeclaresMethod;
13255 HasType;
13256 HasParam;
13257 HasType;
13258 HasParam;
13259 HasType;
13260 DeclaresMethod;
13261 HasType;
13262 HasParam;
13263 HasType;
13264 HasParam;
13265 HasType;
13266 HasParam;
13267 HasType;
13268 DeclaresMethod;
13269 HasType;
13270 DeclaresMethod;
13271 HasType;
13272 DeclaresMethod;
13273 HasType;
13274 HasParam;
13275 HasType;
13276 DeclaresMethod;
13277 HasType;
13278 DeclaresMethod;
13279 HasType;
13280 HasParam;
13281 HasType;
13282 HasParam;
13283 HasType;
13284 DeclaresMethod;
13285 HasType;
13286 HasParam;
13287 HasType;
13288 HasParam;
13289 HasType;
13290 HasParam;
13291 HasType;
13292 DeclaresMethod;
13293 HasType;
13294 DeclaresMethod;
13295 HasType;
13296 HasParam;
13297 HasType;
13298 HasParam;
13299 HasType;
13300 DeclaresMethod;
13301 HasType;
13302 HasParam;
13303 HasType;
13304 HasParam;
13305 HasType;
13306 HasParam;
13307 HasType;
13308 DeclaresMethod;
13309 HasType;
13310 DeclaresMethod;
13311 HasType;
13312 HasParam;
13313 HasType;
13314 HasParam;
13315 HasType;
13316 DeclaresMethod;
13317 HasType;
13318 HasParam;
13319 HasType;
13320 HasParam;
13321 HasType;
13322 HasParam;
13323 HasType;
13324 DeclaresMethod;
13325 HasType;
13326 DeclaresMethod;
13327 HasType;
13328 HasParam;
13329 HasType;
13330 HasParam;
13331 HasType;
13332 DeclaresMethod;
13333 HasType;
13334 HasParam;
13335 HasType;
13336 HasParam;
13337 HasType;
13338 HasParam;
13339 HasType;
13340 DeclaresMethod;
13341 HasType;
13342 DeclaresMethod;
13343 HasType;
13344 HasParam;
13345 HasType;
13346 HasParam;
13347 HasType;
13348 DeclaresMethod;
13349 HasType;
13350 HasParam;
13351 HasType;
13352 HasParam;
13353 HasType;
13354 HasParam;
13355 HasType;
13356 DeclaresMethod;
13357 HasType;
13358 DeclaresMethod;
13359 HasType;
13360 HasParam;
13361 HasType;
13362 HasParam;
13363 HasType;
13364 DeclaresMethod;
13365 HasType;
13366 HasParam;
13367 HasType;
13368 HasParam;
13369 HasType;
13370 HasParam;
13371 HasType;
13372 DeclaresMethod;
13373 HasType;
13374 DeclaresMethod;
13375 HasType;
13376 HasParam;
13377 HasType;
13378 HasParam;
13379 HasType;
13380 DeclaresMethod;
13381 HasType;
13382 HasParam;
13383 HasType;
13384 HasParam;
13385 HasType;
13386 HasParam;
13387 HasType;
13388 DeclaresMethod;
13389 HasType;
13390 DeclaresMethod;
13391 HasType;
13392 HasParam;
13393 HasType;
13394 HasParam;
13395 HasType;
13396 DeclaresMethod;
13397 HasType;
13398 HasParam;
13399 HasType;
13400 HasParam;
13401 HasType;
13402 HasParam;
13403 HasType;
13404 DeclaresMethod;
13405 HasType;
13406 DeclaresMethod;
13407 HasType;
13408 HasParam;
13409 HasType;
13410 HasParam;
13411 HasType;
13412 DeclaresMethod;
13413 HasType;
13414 HasParam;
13415 HasType;
13416 HasParam;
13417 HasType;
13418 HasParam;
13419 HasType;
13420 DeclaresMethod;
13421 HasType;
13422 DeclaresMethod;
13423 HasType;
13424 HasParam;
13425 HasType;
13426 HasParam;
13427 HasType;
13428 DeclaresMethod;
13429 HasType;
13430 HasParam;
13431 HasType;
13432 HasParam;
13433 HasType;
13434 HasParam;
13435 HasType;
13436 DeclaresMethod;
13437 HasType;
13438 DeclaresMethod;
13439 HasType;
13440 HasParam;
13441 HasType;
13442 HasParam;
13443 HasType;
13444 DeclaresMethod;
13445 HasType;
13446 HasParam;
13447 HasType;
13448 HasParam;
13449 HasType;
13450 HasParam;
13451 HasType;
13452 DeclaresMethod;
13453 HasType;
13454 DeclaresMethod;
13455 HasType;
13456 DeclaresMethod;
13457 HasType;
13458 HasParam;
13459 HasType;
13460 DeclaresMethod;
13461 HasType;
13462 DeclaresMethod;
13463 HasType;
13464 DeclaresMethod;
13465 HasType;
13466 DeclaresMethod;
13467 HasType;
13468 HasParam;
13469 HasType;
13470 DeclaresMethod;
13471 HasType;
13472 DeclaresMethod;
13473 HasType;
13474 DeclaresMethod;
13475 HasType;
13476 DeclaresMethod;
13477 HasType;
13478 DeclaresMethod;
13479 HasType;
13480 DeclaresMethod;
13481 HasType;
13482 HasParam;
13483 HasType;
13484 DeclaresMethod;
13485 HasType;
13486 DeclaresMethod;
13487 HasType;
13488 DeclaresMethod;
13489 HasType;
13490 HasParam;
13491 HasType;
13492 DeclaresMethod;
13493 HasType;
13494 DeclaresMethod;
13495 HasType;
13496 DeclaresMethod;
13497 HasType;
13498 HasParam;
13499 HasType;
13500 DeclaresMethod;
13501 HasType;
13502 DeclaresMethod;
13503 HasType;
13504 DeclaresMethod;
13505 HasType;
13506 HasParam;
13507 HasType;
13508 DeclaresMethod;
13509 HasType;
13510 DeclaresMethod;
13511 HasType;
13512 DeclaresMethod;
13513 HasType;
13514 DeclaresMethod;
13515 HasType;
13516 HasParam;
13517 HasType;
13518 DeclaresMethod;
13519 HasType;
13520 DeclaresMethod;
13521 HasType;
13522 HasParam;
13523 HasType;
13524 HasParam;
13525 HasType;
13526 DeclaresMethod;
13527 HasType;
13528 HasParam;
13529 HasType;
13530 HasParam;
13531 HasType;
13532 HasParam;
13533 HasType;
13534 DeclaresMethod;
13535 HasType;
13536 DeclaresMethod;
13537 HasType;
13538 DeclaresMethod;
13539 HasType;
13540 DeclaresMethod;
13541 HasType;
13542 HasParam;
13543 HasType;
13544 DeclaresMethod;
13545 HasType;
13546 DeclaresMethod;
13547 HasType;
13548 DeclaresMethod;
13549 HasType;
13550 DeclaresMethod;
13551 HasType;
13552 DeclaresMethod;
13553 HasType;
13554 HasParam;
13555 HasGenericType;
13556 HasTypeArg;
13557 HasType;
13558 DeclaresMethod;
13559 HasGenericType;
13560 HasTypeArg;
13561 HasType;
13562 DeclaresMethod;
13563 HasGenericType;
13564 HasTypeArg;
13565 HasType;
13566 DeclaresMethod;
13567 HasGenericType;
13568 HasTypeArg;
13569 HasType;
13570 DeclaresMethod;
13571 HasGenericType;
13572 HasTypeArg;
13573 HasType;
13574 DeclaresMethod;
13575 HasGenericType;
13576 HasTypeArg;
13577 HasType;
13578 DeclaresMethod;
13579 HasGenericType;
13580 HasTypeArg;
13581 HasType;
13582 DeclaresMethod;
13583 HasGenericType;
13584 HasTypeArg;
13585 HasType;
13586 DeclaresMethod;
13587 HasGenericType;
13588 HasTypeArg;
13589 HasType;
13590 DeclaresMethod;
13591 HasGenericType;
13592 HasTypeArg;
13593 HasType;
13594 DeclaresMethod;
13595 HasGenericType;
13596 HasTypeArg;
13597 HasType;
13598 DeclaresMethod;
13599 HasGenericType;
13600 HasTypeArg;
13601 HasType;
13602 DeclaresMethod;
13603 HasGenericType;
13604 HasTypeArg;
13605 HasType;
13606 DeclaresMethod;
13607 HasGenericType;
13608 HasTypeArg;
13609 HasType;
13610 DeclaresMethod;
13611 HasGenericType;
13612 HasTypeArg;
13613 HasType;
13614 DeclaresMethod;
13615 HasGenericType;
13616 HasTypeArg;
13617 HasType;
13618 DeclaresMethod;
13619 HasGenericType;
13620 HasTypeArg;
13621 HasType;
13622 DeclaresMethod;
13623 HasGenericType;
13624 HasTypeArg;
13625 HasType;
13626 DeclaresMethod;
13627 HasGenericType;
13628 HasTypeArg;
13629 HasType;
13630 DeclaresMethod;
13631 HasGenericType;
13632 HasTypeArg;
13633 HasType;
13634 DeclaresMethod;
13635 HasGenericType;
13636 HasTypeArg;
13637 HasType;
13638 DeclaresMethod;
13639 HasGenericType;
13640 HasTypeArg;
13641 HasType;
13642 DeclaresMethod;
13643 HasGenericType;
13644 HasTypeArg;
13645 HasType;
13646 DeclaresMethod;
13647 HasGenericType;
13648 HasTypeArg;
13649 HasType;
13650 DeclaresMethod;
13651 HasGenericType;
13652 HasTypeArg;
13653 HasType;
13654 DeclaresMethod;
13655 HasGenericType;
13656 HasTypeArg;
13657 HasType;
13658 HasParam;
13659 HasGenericType;
13660 HasTypeArg;
13661 HasType;
13662 DeclaresMethod;
13663 HasGenericType;
13664 HasTypeArg;
13665 HasType;
13666 DeclaresMethod;
13667 HasGenericType;
13668 HasTypeArg;
13669 HasType;
13670 HasParam;
13671 HasGenericType;
13672 HasTypeArg;
13673 HasType;
13674 DeclaresMethod;
13675 HasGenericType;
13676 HasTypeArg;
13677 HasType;
13678 DeclaresMethod;
13679 HasGenericType;
13680 HasTypeArg;
13681 HasType;
13682 HasParam;
13683 HasGenericType;
13684 HasTypeArg;
13685 HasType;
13686 DeclaresMethod;
13687 HasGenericType;
13688 HasTypeArg;
13689 HasType;
13690 DeclaresMethod;
13691 HasGenericType;
13692 HasTypeArg;
13693 HasType;
13694 HasParam;
13695 HasGenericType;
13696 HasTypeArg;
13697 HasType;
13698 DeclaresMethod;
13699 HasGenericType;
13700 HasTypeArg;
13701 HasType;
13702 DeclaresMethod;
13703 HasGenericType;
13704 HasTypeArg;
13705 HasType;
13706 HasParam;
13707 HasGenericType;
13708 HasTypeArg;
13709 HasType;
13710 DeclaresMethod;
13711 HasGenericType;
13712 HasTypeArg;
13713 HasType;
13714 DeclaresMethod;
13715 HasGenericType;
13716 HasTypeArg;
13717 HasType;
13718 HasParam;
13719 HasGenericType;
13720 HasTypeArg;
13721 HasType;
13722 DeclaresMethod;
13723 HasGenericType;
13724 HasTypeArg;
13725 HasType;
13726 DeclaresMethod;
13727 HasGenericType;
13728 HasTypeArg;
13729 HasType;
13730 HasParam;
13731 HasGenericType;
13732 HasTypeArg;
13733 HasType;
13734 DeclaresMethod;
13735 HasGenericType;
13736 HasTypeArg;
13737 HasType;
13738 DeclaresMethod;
13739 HasGenericType;
13740 HasTypeArg;
13741 HasType;
13742 HasParam;
13743 HasGenericType;
13744 HasTypeArg;
13745 HasType;
13746 DeclaresMethod;
13747 HasGenericType;
13748 HasTypeArg;
13749 HasType;
13750 DeclaresMethod;
13751 HasGenericType;
13752 HasTypeArg;
13753 HasType;
13754 HasParam;
13755 HasGenericType;
13756 HasTypeArg;
13757 HasType;
13758 DeclaresMethod;
13759 HasGenericType;
13760 HasTypeArg;
13761 HasType;
13762 DeclaresMethod;
13763 HasGenericType;
13764 HasTypeArg;
13765 HasType;
13766 HasParam;
13767 HasGenericType;
13768 HasTypeArg;
13769 HasType;
13770 DeclaresMethod;
13771 HasGenericType;
13772 HasTypeArg;
13773 HasType;
13774 DeclaresMethod;
13775 HasGenericType;
13776 HasTypeArg;
13777 HasType;
13778 HasParam;
13779 HasGenericType;
13780 HasTypeArg;
13781 HasType;
13782 DeclaresMethod;
13783 HasGenericType;
13784 HasTypeArg;
13785 HasType;
13786 DeclaresMethod;
13787 HasGenericType;
13788 HasTypeArg;
13789 HasType;
13790 HasParam;
13791 HasGenericType;
13792 HasTypeArg;
13793 HasType;
13794 DeclaresMethod;
13795 HasGenericType;
13796 HasTypeArg;
13797 HasType;
13798 DeclaresMethod;
13799 HasGenericType;
13800 HasTypeArg;
13801 HasType;
13802 HasParam;
13803 HasGenericType;
13804 HasTypeArg;
13805 HasType;
13806 DeclaresMethod;
13807 HasGenericType;
13808 HasTypeArg;
13809 HasType;
13810 DeclaresMethod;
13811 HasGenericType;
13812 HasTypeArg;
13813 HasType;
13814 HasParam;
13815 HasGenericType;
13816 HasTypeArg;
13817 HasType;
13818 DeclaresMethod;
13819 HasGenericType;
13820 HasTypeArg;
13821 HasType;
13822 DeclaresMethod;
13823 HasGenericType;
13824 HasTypeArg;
13825 HasType;
13826 HasParam;
13827 HasGenericType;
13828 HasTypeArg;
13829 HasType;
13830 DeclaresMethod;
13831 HasGenericType;
13832 HasTypeArg;
13833 HasType;
13834 DeclaresMethod;
13835 HasGenericType;
13836 HasTypeArg;
13837 HasType;
13838 HasParam;
13839 HasGenericType;
13840 HasTypeArg;
13841 HasType;
13842 DeclaresMethod;
13843 HasGenericType;
13844 HasTypeArg;
13845 HasType;
13846 DeclaresMethod;
13847 HasGenericType;
13848 HasTypeArg;
13849 HasType;
13850 HasParam;
13851 HasGenericType;
13852 HasTypeArg;
13853 HasType;
13854 DeclaresMethod;
13855 HasGenericType;
13856 HasTypeArg;
13857 HasType;
13858 DeclaresMethod;
13859 HasGenericType;
13860 HasTypeArg;
13861 HasType;
13862 HasParam;
13863 HasGenericType;
13864 HasTypeArg;
13865 HasType;
13866 DeclaresMethod;
13867 HasGenericType;
13868 HasTypeArg;
13869 HasType;
13870 DeclaresMethod;
13871 HasGenericType;
13872 HasTypeArg;
13873 HasType;
13874 HasParam;
13875 HasGenericType;
13876 HasTypeArg;
13877 HasType;
13878 DeclaresMethod;
13879 HasGenericType;
13880 HasTypeArg;
13881 HasType;
13882 DeclaresMethod;
13883 HasGenericType;
13884 HasTypeArg;
13885 HasType;
13886 HasParam;
13887 HasGenericType;
13888 HasTypeArg;
13889 HasType;
13890 DeclaresMethod;
13891 HasGenericType;
13892 HasTypeArg;
13893 HasType;
13894 DeclaresMethod;
13895 HasGenericType;
13896 HasTypeArg;
13897 HasType;
13898 HasParam;
13899 HasGenericType;
13900 HasTypeArg;
13901 HasType;
13902 DeclaresMethod;
13903 HasGenericType;
13904 HasTypeArg;
13905 HasType;
13906 DeclaresMethod;
13907 HasGenericType;
13908 HasTypeArg;
13909 HasType;
13910 HasParam;
13911 HasGenericType;
13912 HasTypeArg;
13913 HasType;
13914 DeclaresMethod;
13915 HasGenericType;
13916 HasTypeArg;
13917 HasType;
13918 DeclaresMethod;
13919 HasGenericType;
13920 HasTypeArg;
13921 HasType;
13922 HasParam;
13923 HasGenericType;
13924 HasTypeArg;
13925 HasType;
13926 DeclaresMethod;
13927 HasGenericType;
13928 HasTypeArg;
13929 HasType;
13930 DeclaresMethod;
13931 HasGenericType;
13932 HasTypeArg;
13933 HasType;
13934 HasParam;
13935 HasGenericType;
13936 HasTypeArg;
13937 HasType;
13938 DeclaresMethod;
13939 HasGenericType;
13940 HasTypeArg;
13941 HasType;
13942 DeclaresMethod;
13943 HasGenericType;
13944 HasTypeArg;
13945 HasType;
13946 HasParam;
13947 HasGenericType;
13948 HasTypeArg;
13949 HasType;
13950 DeclaresMethod;
13951 HasGenericType;
13952 HasTypeArg;
13953 HasType;
13954 DeclaresMethod;
13955 HasGenericType;
13956 HasTypeArg;
13957 HasType;
13958 HasParam;
13959 HasGenericType;
13960 HasTypeArg;
13961 HasType;
13962 DeclaresMethod;
13963 HasGenericType;
13964 HasTypeArg;
13965 HasType;
13966 DeclaresMethod;
13967 HasGenericType;
13968 HasTypeArg;
13969 HasType;
13970 HasParam;
13971 Defines 20;
13972 ContainsClassifier;
13973 Imports 9;
13974 Imports 11;
13975 Imports 9;
13976 Imports 9;
13977 Imports 10;
13978 Imports 16;
13979 Imports 18;
13980 Extends;
13981 Implements;
13982 Implements;
13983 Implements;
13984 Implements;
13985 HasGenericType;
13986 HasTypeArg;
13987 HasType;
13988 DeclaresField;
13989 HasType;
13990 DeclaresField;
13991 DeclaresConstructor;
13992 HasType;
13993 HasParam;
13994 HasType;
13995 HasParam;
13996 HasType;
13997 DeclaresMethod;
13998 HasUpperBound;
13999 HasGenericType;
14000 HasTypeArg;
14001 HasType;
14002 DeclaresMethod;
14003 HasTypeParam;
14004 HasType;
14005 DeclaresMethod;
14006 HasType;
14007 HasParam;
14008 HasTypeParam;
14009 HasType;
14010 DeclaresMethod;
14011 HasType;
14012 HasParam;
14013 HasType;
14014 HasParam;
14015 HasGenericType;
14016 HasTypeArg;
14017 HasType;
14018 DeclaresMethod;
14019 HasType;
14020 DeclaresMethod;
14021 HasGenericType;
14022 HasTypeArg;
14023 HasType;
14024 HasParam;
14025 HasType;
14026 DeclaresMethod;
14027 HasType;
14028 DeclaresMethod;
14029 HasType;
14030 HasParam;
14031 HasType;
14032 DeclaresMethod;
14033 HasType;
14034 HasParam;
14035 Throws;
14036 HasType;
14037 DeclaresMethod;
14038 HasType;
14039 HasParam;
14040 HasType;
14041 HasParam;
14042 Throws;
14043 HasType;
14044 DeclaresMethod;
14045 HasType;
14046 HasParam;
14047 Throws;
14048 Throws;
14049 HasType;
14050 DeclaresMethod;
14051 HasType;
14052 HasParam;
14053 Throws;
14054 Throws;
14055 HasType;
14056 DeclaresMethod;
14057 HasType;
14058 DeclaresMethod;
14059 HasType;
14060 DeclaresMethod;
14061 HasType;
14062 DeclaresMethod;
14063 HasType;
14064 DeclaresMethod;
14065 HasType;
14066 DeclaresMethod;
14067 HasType;
14068 DeclaresMethod;
14069 HasType;
14070 DeclaresMethod;
14071 HasType;
14072 DeclaresMethod;
14073 HasType;
14074 HasParam;
14075 HasType;
14076 DeclaresMethod;
14077 HasType;
14078 DeclaresMethod;
14079 HasType;
14080 HasParam;
14081 HasType;
14082 DeclaresMethod;
14083 HasType;
14084 DeclaresMethod;
14085 HasType;
14086 HasParam;
14087 HasType;
14088 DeclaresMethod;
14089 HasType;
14090 DeclaresMethod;
14091 HasType;
14092 HasParam;
14093 HasType;
14094 DeclaresMethod;
14095 HasType;
14096 DeclaresMethod;
14097 HasType;
14098 HasParam;
14099 HasType;
14100 DeclaresMethod;
14101 HasType;
14102 DeclaresMethod;
14103 HasType;
14104 HasParam;
14105 HasType;
14106 DeclaresMethod;
14107 HasType;
14108 DeclaresMethod;
14109 HasType;
14110 HasParam;
14111 HasType;
14112 DeclaresMethod;
14113 HasType;
14114 HasParam;
14115 HasUpperBound;
14116 HasGenericType;
14117 HasTypeArg;
14118 HasType;
14119 DeclaresMethod;
14120 HasType;
14121 DeclaresMethod;
14122 HasType;
14123 HasParam;
14124 HasBound;
14125 HasTypeParam;
14126 HasGenericType;
14127 HasTypeArg;
14128 HasType;
14129 DeclaresMethod;
14130 HasBound;
14131 HasTypeParam;
14132 HasGenericType;
14133 HasTypeArg;
14134 HasType;
14135 DeclaresMethod;
14136 HasGenericType;
14137 HasTypeArg;
14138 HasType;
14139 HasParam;
14140 HasType;
14141 DeclaresMethod;
14142 HasType;
14143 HasParam;
14144 HasUpperBound;
14145 HasGenericType;
14146 HasTypeArg;
14147 HasType;
14148 DeclaresMethod;
14149 HasType;
14150 DeclaresMethod;
14151 HasType;
14152 HasParam;
14153 HasBound;
14154 HasTypeParam;
14155 HasGenericType;
14156 HasTypeArg;
14157 HasType;
14158 DeclaresMethod;
14159 HasBound;
14160 HasTypeParam;
14161 HasGenericType;
14162 HasTypeArg;
14163 HasType;
14164 DeclaresMethod;
14165 HasGenericType;
14166 HasTypeArg;
14167 HasType;
14168 HasParam;
14169 HasType;
14170 DeclaresMethod;
14171 HasType;
14172 HasParam;
14173 HasUpperBound;
14174 HasGenericType;
14175 HasTypeArg;
14176 HasType;
14177 DeclaresMethod;
14178 HasType;
14179 DeclaresMethod;
14180 HasType;
14181 HasParam;
14182 HasBound;
14183 HasTypeParam;
14184 HasGenericType;
14185 HasTypeArg;
14186 HasType;
14187 DeclaresMethod;
14188 HasBound;
14189 HasTypeParam;
14190 HasGenericType;
14191 HasTypeArg;
14192 HasType;
14193 DeclaresMethod;
14194 HasGenericType;
14195 HasTypeArg;
14196 HasType;
14197 HasParam;
14198 HasType;
14199 DeclaresMethod;
14200 HasType;
14201 HasParam;
14202 HasUpperBound;
14203 HasGenericType;
14204 HasTypeArg;
14205 HasType;
14206 DeclaresMethod;
14207 HasType;
14208 DeclaresMethod;
14209 HasType;
14210 HasParam;
14211 HasBound;
14212 HasTypeParam;
14213 HasGenericType;
14214 HasTypeArg;
14215 HasType;
14216 DeclaresMethod;
14217 HasBound;
14218 HasTypeParam;
14219 HasGenericType;
14220 HasTypeArg;
14221 HasType;
14222 DeclaresMethod;
14223 HasGenericType;
14224 HasTypeArg;
14225 HasType;
14226 HasParam;
14227 HasType;
14228 DeclaresMethod;
14229 HasType;
14230 HasParam;
14231 HasUpperBound;
14232 HasGenericType;
14233 HasTypeArg;
14234 HasType;
14235 DeclaresMethod;
14236 HasType;
14237 DeclaresMethod;
14238 HasType;
14239 HasParam;
14240 HasType;
14241 DeclaresMethod;
14242 HasType;
14243 DeclaresMethod;
14244 HasType;
14245 HasParam;
14246 HasUpperBound;
14247 HasGenericType;
14248 HasTypeArg;
14249 HasType;
14250 DeclaresMethod;
14251 HasType;
14252 DeclaresMethod;
14253 HasType;
14254 HasParam;
14255 HasType;
14256 DeclaresMethod;
14257 HasGenericType;
14258 HasTypeArg;
14259 HasType;
14260 DeclaresMethod;
14261 HasGenericType;
14262 HasTypeArg;
14263 HasType;
14264 DeclaresMethod;
14265 HasType;
14266 HasParam;
14267 HasGenericType;
14268 HasTypeArg;
14269 HasType;
14270 DeclaresMethod;
14271 HasGenericType;
14272 HasTypeArg;
14273 HasType;
14274 DeclaresMethod;
14275 HasType;
14276 HasParam;
14277 HasGenericType;
14278 HasTypeArg;
14279 HasType;
14280 DeclaresMethod;
14281 HasGenericType;
14282 HasTypeArg;
14283 HasType;
14284 DeclaresMethod;
14285 HasType;
14286 HasParam;
14287 HasGenericType;
14288 HasTypeArg;
14289 HasType;
14290 DeclaresMethod;
14291 HasGenericType;
14292 HasTypeArg;
14293 HasType;
14294 DeclaresMethod;
14295 HasType;
14296 HasParam;
14297 HasGenericType;
14298 HasTypeArg;
14299 HasType;
14300 DeclaresMethod;
14301 HasGenericType;
14302 HasTypeArg;
14303 HasType;
14304 DeclaresMethod;
14305 HasType;
14306 HasParam;
14307 HasGenericType;
14308 HasTypeArg;
14309 HasType;
14310 DeclaresMethod;
14311 HasGenericType;
14312 HasTypeArg;
14313 HasType;
14314 DeclaresMethod;
14315 HasType;
14316 HasParam;
14317 HasGenericType;
14318 HasTypeArg;
14319 HasType;
14320 DeclaresMethod;
14321 HasGenericType;
14322 HasTypeArg;
14323 HasType;
14324 DeclaresMethod;
14325 HasType;
14326 HasParam;
14327 Defines 20;
14328 ContainsClassifier;
14329 Imports 9;
14330 Imports 11;
14331 Imports 9;
14332 Imports 9;
14333 Imports 10;
14334 Imports 16;
14335 Imports 18;
14336 Extends;
14337 Implements;
14338 Implements;
14339 Implements;
14340 HasType;
14341 DeclaresField;
14342 HasType;
14343 DeclaresField;
14344 DeclaresConstructor;
14345 HasType;
14346 HasParam;
14347 HasType;
14348 HasParam;
14349 HasType;
14350 DeclaresMethod;
14351 HasUpperBound;
14352 HasGenericType;
14353 HasTypeArg;
14354 HasType;
14355 DeclaresMethod;
14356 HasTypeParam;
14357 HasType;
14358 DeclaresMethod;
14359 HasType;
14360 HasParam;
14361 HasTypeParam;
14362 HasType;
14363 DeclaresMethod;
14364 HasType;
14365 HasParam;
14366 HasType;
14367 HasParam;
14368 HasType;
14369 DeclaresMethod;
14370 HasType;
14371 DeclaresMethod;
14372 HasType;
14373 HasParam;
14374 HasType;
14375 DeclaresMethod;
14376 HasType;
14377 DeclaresMethod;
14378 HasType;
14379 HasParam;
14380 HasType;
14381 DeclaresMethod;
14382 HasType;
14383 HasParam;
14384 Throws;
14385 HasType;
14386 DeclaresMethod;
14387 HasType;
14388 HasParam;
14389 HasType;
14390 HasParam;
14391 Throws;
14392 HasType;
14393 DeclaresMethod;
14394 HasType;
14395 HasParam;
14396 Throws;
14397 Throws;
14398 HasType;
14399 DeclaresMethod;
14400 HasType;
14401 HasParam;
14402 Throws;
14403 Throws;
14404 HasType;
14405 DeclaresMethod;
14406 HasType;
14407 DeclaresMethod;
14408 HasType;
14409 DeclaresMethod;
14410 HasType;
14411 DeclaresMethod;
14412 HasType;
14413 DeclaresMethod;
14414 HasType;
14415 HasParam;
14416 HasType;
14417 DeclaresMethod;
14418 HasType;
14419 DeclaresMethod;
14420 HasType;
14421 HasParam;
14422 HasType;
14423 DeclaresMethod;
14424 HasType;
14425 DeclaresMethod;
14426 HasType;
14427 HasParam;
14428 HasType;
14429 DeclaresMethod;
14430 HasType;
14431 HasParam;
14432 HasUpperBound;
14433 HasGenericType;
14434 HasTypeArg;
14435 HasType;
14436 DeclaresMethod;
14437 HasType;
14438 DeclaresMethod;
14439 HasType;
14440 HasParam;
14441 HasBound;
14442 HasTypeParam;
14443 HasGenericType;
14444 HasTypeArg;
14445 HasType;
14446 DeclaresMethod;
14447 HasBound;
14448 HasTypeParam;
14449 HasGenericType;
14450 HasTypeArg;
14451 HasType;
14452 DeclaresMethod;
14453 HasGenericType;
14454 HasTypeArg;
14455 HasType;
14456 HasParam;
14457 HasType;
14458 DeclaresMethod;
14459 HasType;
14460 HasParam;
14461 HasUpperBound;
14462 HasGenericType;
14463 HasTypeArg;
14464 HasType;
14465 DeclaresMethod;
14466 HasType;
14467 DeclaresMethod;
14468 HasType;
14469 HasParam;
14470 HasBound;
14471 HasTypeParam;
14472 HasGenericType;
14473 HasTypeArg;
14474 HasType;
14475 DeclaresMethod;
14476 HasBound;
14477 HasTypeParam;
14478 HasGenericType;
14479 HasTypeArg;
14480 HasType;
14481 DeclaresMethod;
14482 HasGenericType;
14483 HasTypeArg;
14484 HasType;
14485 HasParam;
14486 HasType;
14487 DeclaresMethod;
14488 HasType;
14489 HasParam;
14490 HasUpperBound;
14491 HasGenericType;
14492 HasTypeArg;
14493 HasType;
14494 DeclaresMethod;
14495 HasType;
14496 DeclaresMethod;
14497 HasType;
14498 HasParam;
14499 HasBound;
14500 HasTypeParam;
14501 HasGenericType;
14502 HasTypeArg;
14503 HasType;
14504 DeclaresMethod;
14505 HasBound;
14506 HasTypeParam;
14507 HasGenericType;
14508 HasTypeArg;
14509 HasType;
14510 DeclaresMethod;
14511 HasGenericType;
14512 HasTypeArg;
14513 HasType;
14514 HasParam;
14515 HasGenericType;
14516 HasTypeArg;
14517 HasType;
14518 DeclaresMethod;
14519 HasGenericType;
14520 HasTypeArg;
14521 HasType;
14522 DeclaresMethod;
14523 HasType;
14524 HasParam;
14525 HasGenericType;
14526 HasTypeArg;
14527 HasType;
14528 DeclaresMethod;
14529 HasGenericType;
14530 HasTypeArg;
14531 HasType;
14532 DeclaresMethod;
14533 HasType;
14534 HasParam;
14535 HasGenericType;
14536 HasTypeArg;
14537 HasType;
14538 DeclaresMethod;
14539 HasGenericType;
14540 HasTypeArg;
14541 HasType;
14542 DeclaresMethod;
14543 HasType;
14544 HasParam;
14545 Defines 20;
14546 ContainsClassifier;
14547 Imports 9;
14548 Imports 11;
14549 Imports 9;
14550 Imports 9;
14551 Imports 10;
14552 Imports 16;
14553 Imports 18;
14554 Extends;
14555 Implements;
14556 Implements;
14557 Implements;
14558 Implements;
14559 HasGenericType;
14560 HasTypeArg;
14561 HasType;
14562 DeclaresField;
14563 HasType;
14564 DeclaresField;
14565 DeclaresConstructor;
14566 HasType;
14567 HasParam;
14568 HasType;
14569 HasParam;
14570 HasType;
14571 DeclaresMethod;
14572 HasUpperBound;
14573 HasGenericType;
14574 HasTypeArg;
14575 HasType;
14576 DeclaresMethod;
14577 HasTypeParam;
14578 HasType;
14579 DeclaresMethod;
14580 HasType;
14581 HasParam;
14582 HasTypeParam;
14583 HasType;
14584 DeclaresMethod;
14585 HasType;
14586 HasParam;
14587 HasType;
14588 HasParam;
14589 HasGenericType;
14590 HasTypeArg;
14591 HasType;
14592 DeclaresMethod;
14593 HasType;
14594 DeclaresMethod;
14595 HasGenericType;
14596 HasTypeArg;
14597 HasType;
14598 HasParam;
14599 HasType;
14600 DeclaresMethod;
14601 HasType;
14602 DeclaresMethod;
14603 HasType;
14604 HasParam;
14605 HasType;
14606 DeclaresMethod;
14607 HasType;
14608 HasParam;
14609 Throws;
14610 HasType;
14611 DeclaresMethod;
14612 HasType;
14613 HasParam;
14614 HasType;
14615 HasParam;
14616 Throws;
14617 HasType;
14618 DeclaresMethod;
14619 HasType;
14620 HasParam;
14621 Throws;
14622 Throws;
14623 HasType;
14624 DeclaresMethod;
14625 HasType;
14626 HasParam;
14627 Throws;
14628 Throws;
14629 HasType;
14630 DeclaresMethod;
14631 HasType;
14632 DeclaresMethod;
14633 HasType;
14634 DeclaresMethod;
14635 HasType;
14636 DeclaresMethod;
14637 HasType;
14638 DeclaresMethod;
14639 HasType;
14640 DeclaresMethod;
14641 HasType;
14642 HasParam;
14643 HasType;
14644 DeclaresMethod;
14645 HasType;
14646 DeclaresMethod;
14647 HasType;
14648 HasParam;
14649 HasType;
14650 DeclaresMethod;
14651 HasType;
14652 DeclaresMethod;
14653 HasType;
14654 HasParam;
14655 HasType;
14656 DeclaresMethod;
14657 HasType;
14658 HasParam;
14659 HasUpperBound;
14660 HasGenericType;
14661 HasTypeArg;
14662 HasType;
14663 DeclaresMethod;
14664 HasType;
14665 DeclaresMethod;
14666 HasType;
14667 HasParam;
14668 HasType;
14669 DeclaresMethod;
14670 HasType;
14671 DeclaresMethod;
14672 HasType;
14673 HasParam;
14674 HasUpperBound;
14675 HasGenericType;
14676 HasTypeArg;
14677 HasType;
14678 DeclaresMethod;
14679 HasType;
14680 DeclaresMethod;
14681 HasType;
14682 HasParam;
14683 HasBound;
14684 HasTypeParam;
14685 HasGenericType;
14686 HasTypeArg;
14687 HasType;
14688 DeclaresMethod;
14689 HasBound;
14690 HasTypeParam;
14691 HasGenericType;
14692 HasTypeArg;
14693 HasType;
14694 DeclaresMethod;
14695 HasGenericType;
14696 HasTypeArg;
14697 HasType;
14698 HasParam;
14699 HasType;
14700 DeclaresMethod;
14701 HasType;
14702 HasParam;
14703 HasUpperBound;
14704 HasGenericType;
14705 HasTypeArg;
14706 HasType;
14707 DeclaresMethod;
14708 HasType;
14709 DeclaresMethod;
14710 HasType;
14711 HasParam;
14712 HasType;
14713 DeclaresMethod;
14714 HasGenericType;
14715 HasTypeArg;
14716 HasType;
14717 DeclaresMethod;
14718 HasGenericType;
14719 HasTypeArg;
14720 HasType;
14721 DeclaresMethod;
14722 HasType;
14723 HasParam;
14724 HasGenericType;
14725 HasTypeArg;
14726 HasType;
14727 DeclaresMethod;
14728 HasGenericType;
14729 HasTypeArg;
14730 HasType;
14731 DeclaresMethod;
14732 HasType;
14733 HasParam;
14734 HasGenericType;
14735 HasTypeArg;
14736 HasType;
14737 DeclaresMethod;
14738 HasGenericType;
14739 HasTypeArg;
14740 HasType;
14741 DeclaresMethod;
14742 HasType;
14743 HasParam;
14744 Defines 20;
14745 ContainsClassifier;
14746 Imports 9;
14747 Imports 11;
14748 Imports 9;
14749 Imports 9;
14750 Imports 10;
14751 Imports 16;
14752 Imports 18;
14753 Extends;
14754 Implements;
14755 Implements;
14756 Implements;
14757 HasGenericType;
14758 HasTypeArg;
14759 HasType;
14760 DeclaresField;
14761 HasType;
14762 DeclaresField;
14763 HasType;
14764 DeclaresField;
14765 DeclaresConstructor;
14766 HasType;
14767 HasParam;
14768 HasType;
14769 HasParam;
14770 HasType;
14771 DeclaresMethod;
14772 HasUpperBound;
14773 HasGenericType;
14774 HasTypeArg;
14775 HasType;
14776 DeclaresMethod;
14777 HasTypeParam;
14778 HasType;
14779 DeclaresMethod;
14780 HasType;
14781 HasParam;
14782 HasTypeParam;
14783 HasType;
14784 DeclaresMethod;
14785 HasType;
14786 HasParam;
14787 HasType;
14788 HasParam;
14789 HasGenericType;
14790 HasTypeArg;
14791 HasType;
14792 DeclaresMethod;
14793 HasType;
14794 DeclaresMethod;
14795 HasGenericType;
14796 HasTypeArg;
14797 HasType;
14798 HasParam;
14799 HasType;
14800 DeclaresMethod;
14801 HasType;
14802 DeclaresMethod;
14803 HasType;
14804 HasParam;
14805 HasType;
14806 DeclaresMethod;
14807 HasType;
14808 DeclaresMethod;
14809 HasType;
14810 HasParam;
14811 HasType;
14812 DeclaresMethod;
14813 HasType;
14814 HasParam;
14815 Throws;
14816 HasType;
14817 DeclaresMethod;
14818 HasType;
14819 HasParam;
14820 HasType;
14821 HasParam;
14822 Throws;
14823 HasType;
14824 DeclaresMethod;
14825 HasType;
14826 HasParam;
14827 Throws;
14828 Throws;
14829 HasType;
14830 DeclaresMethod;
14831 HasType;
14832 HasParam;
14833 Throws;
14834 Throws;
14835 HasType;
14836 DeclaresMethod;
14837 HasType;
14838 DeclaresMethod;
14839 HasType;
14840 DeclaresMethod;
14841 HasType;
14842 DeclaresMethod;
14843 HasType;
14844 DeclaresMethod;
14845 HasType;
14846 DeclaresMethod;
14847 HasType;
14848 DeclaresMethod;
14849 HasType;
14850 DeclaresMethod;
14851 HasType;
14852 DeclaresMethod;
14853 HasType;
14854 DeclaresMethod;
14855 HasType;
14856 HasParam;
14857 HasType;
14858 DeclaresMethod;
14859 HasType;
14860 DeclaresMethod;
14861 HasType;
14862 HasParam;
14863 HasType;
14864 DeclaresMethod;
14865 HasType;
14866 DeclaresMethod;
14867 HasType;
14868 HasParam;
14869 HasType;
14870 DeclaresMethod;
14871 HasType;
14872 DeclaresMethod;
14873 HasType;
14874 HasParam;
14875 HasType;
14876 DeclaresMethod;
14877 HasType;
14878 DeclaresMethod;
14879 HasType;
14880 HasParam;
14881 HasType;
14882 DeclaresMethod;
14883 HasType;
14884 DeclaresMethod;
14885 HasType;
14886 HasParam;
14887 HasType;
14888 DeclaresMethod;
14889 HasType;
14890 DeclaresMethod;
14891 HasType;
14892 HasParam;
14893 HasType;
14894 DeclaresMethod;
14895 HasType;
14896 DeclaresMethod;
14897 HasType;
14898 HasParam;
14899 HasType;
14900 DeclaresMethod;
14901 HasType;
14902 DeclaresMethod;
14903 HasType;
14904 HasParam;
14905 HasType;
14906 DeclaresMethod;
14907 HasType;
14908 DeclaresMethod;
14909 HasType;
14910 HasParam;
14911 HasType;
14912 DeclaresMethod;
14913 HasType;
14914 DeclaresMethod;
14915 HasType;
14916 HasParam;
14917 HasType;
14918 DeclaresMethod;
14919 HasType;
14920 DeclaresMethod;
14921 HasType;
14922 HasParam;
14923 HasType;
14924 DeclaresMethod;
14925 HasType;
14926 DeclaresMethod;
14927 HasType;
14928 HasParam;
14929 HasType;
14930 DeclaresMethod;
14931 HasType;
14932 DeclaresMethod;
14933 HasType;
14934 HasParam;
14935 HasType;
14936 DeclaresMethod;
14937 HasType;
14938 DeclaresMethod;
14939 HasType;
14940 HasParam;
14941 HasType;
14942 DeclaresMethod;
14943 HasType;
14944 DeclaresMethod;
14945 HasType;
14946 HasParam;
14947 HasType;
14948 DeclaresMethod;
14949 HasType;
14950 DeclaresMethod;
14951 HasType;
14952 HasParam;
14953 HasType;
14954 DeclaresMethod;
14955 HasType;
14956 DeclaresMethod;
14957 HasType;
14958 HasParam;
14959 HasType;
14960 DeclaresMethod;
14961 HasType;
14962 DeclaresMethod;
14963 HasType;
14964 HasParam;
14965 HasType;
14966 DeclaresMethod;
14967 HasType;
14968 HasParam;
14969 HasUpperBound;
14970 HasGenericType;
14971 HasTypeArg;
14972 HasType;
14973 DeclaresMethod;
14974 HasType;
14975 DeclaresMethod;
14976 HasType;
14977 HasParam;
14978 HasBound;
14979 HasTypeParam;
14980 HasGenericType;
14981 HasTypeArg;
14982 HasType;
14983 DeclaresMethod;
14984 HasBound;
14985 HasTypeParam;
14986 HasGenericType;
14987 HasTypeArg;
14988 HasType;
14989 DeclaresMethod;
14990 HasGenericType;
14991 HasTypeArg;
14992 HasType;
14993 HasParam;
14994 HasType;
14995 DeclaresMethod;
14996 HasType;
14997 HasParam;
14998 HasUpperBound;
14999 HasGenericType;
15000 HasTypeArg;
15001 HasType;
15002 DeclaresMethod;
15003 HasType;
15004 DeclaresMethod;
15005 HasType;
15006 HasParam;
15007 HasBound;
15008 HasTypeParam;
15009 HasGenericType;
15010 HasTypeArg;
15011 HasType;
15012 DeclaresMethod;
15013 HasBound;
15014 HasTypeParam;
15015 HasGenericType;
15016 HasTypeArg;
15017 HasType;
15018 DeclaresMethod;
15019 HasGenericType;
15020 HasTypeArg;
15021 HasType;
15022 HasParam;
15023 HasType;
15024 DeclaresMethod;
15025 HasType;
15026 HasParam;
15027 HasUpperBound;
15028 HasGenericType;
15029 HasTypeArg;
15030 HasType;
15031 DeclaresMethod;
15032 HasType;
15033 DeclaresMethod;
15034 HasType;
15035 HasParam;
15036 HasBound;
15037 HasTypeParam;
15038 HasGenericType;
15039 HasTypeArg;
15040 HasType;
15041 DeclaresMethod;
15042 HasBound;
15043 HasTypeParam;
15044 HasGenericType;
15045 HasTypeArg;
15046 HasType;
15047 DeclaresMethod;
15048 HasGenericType;
15049 HasTypeArg;
15050 HasType;
15051 HasParam;
15052 HasType;
15053 DeclaresMethod;
15054 HasType;
15055 HasParam;
15056 HasUpperBound;
15057 HasGenericType;
15058 HasTypeArg;
15059 HasType;
15060 DeclaresMethod;
15061 HasType;
15062 DeclaresMethod;
15063 HasType;
15064 HasParam;
15065 HasType;
15066 DeclaresMethod;
15067 HasType;
15068 DeclaresMethod;
15069 HasType;
15070 HasParam;
15071 HasUpperBound;
15072 HasGenericType;
15073 HasTypeArg;
15074 HasType;
15075 DeclaresMethod;
15076 HasType;
15077 DeclaresMethod;
15078 HasType;
15079 HasParam;
15080 HasBound;
15081 HasTypeParam;
15082 HasGenericType;
15083 HasTypeArg;
15084 HasType;
15085 DeclaresMethod;
15086 HasBound;
15087 HasTypeParam;
15088 HasGenericType;
15089 HasTypeArg;
15090 HasType;
15091 DeclaresMethod;
15092 HasGenericType;
15093 HasTypeArg;
15094 HasType;
15095 HasParam;
15096 HasType;
15097 DeclaresMethod;
15098 HasType;
15099 HasParam;
15100 HasUpperBound;
15101 HasGenericType;
15102 HasTypeArg;
15103 HasType;
15104 DeclaresMethod;
15105 HasType;
15106 DeclaresMethod;
15107 HasType;
15108 HasParam;
15109 HasBound;
15110 HasTypeParam;
15111 HasGenericType;
15112 HasTypeArg;
15113 HasType;
15114 DeclaresMethod;
15115 HasBound;
15116 HasTypeParam;
15117 HasGenericType;
15118 HasTypeArg;
15119 HasType;
15120 DeclaresMethod;
15121 HasGenericType;
15122 HasTypeArg;
15123 HasType;
15124 HasParam;
15125 HasType;
15126 DeclaresMethod;
15127 HasType;
15128 HasParam;
15129 HasUpperBound;
15130 HasGenericType;
15131 HasTypeArg;
15132 HasType;
15133 DeclaresMethod;
15134 HasType;
15135 DeclaresMethod;
15136 HasType;
15137 HasParam;
15138 HasBound;
15139 HasTypeParam;
15140 HasGenericType;
15141 HasTypeArg;
15142 HasType;
15143 DeclaresMethod;
15144 HasBound;
15145 HasTypeParam;
15146 HasGenericType;
15147 HasTypeArg;
15148 HasType;
15149 DeclaresMethod;
15150 HasGenericType;
15151 HasTypeArg;
15152 HasType;
15153 HasParam;
15154 HasType;
15155 DeclaresMethod;
15156 HasType;
15157 HasParam;
15158 HasUpperBound;
15159 HasGenericType;
15160 HasTypeArg;
15161 HasType;
15162 DeclaresMethod;
15163 HasType;
15164 DeclaresMethod;
15165 HasType;
15166 HasParam;
15167 HasBound;
15168 HasTypeParam;
15169 HasGenericType;
15170 HasTypeArg;
15171 HasType;
15172 DeclaresMethod;
15173 HasBound;
15174 HasTypeParam;
15175 HasGenericType;
15176 HasTypeArg;
15177 HasType;
15178 DeclaresMethod;
15179 HasGenericType;
15180 HasTypeArg;
15181 HasType;
15182 HasParam;
15183 HasType;
15184 DeclaresMethod;
15185 HasType;
15186 HasParam;
15187 HasUpperBound;
15188 HasGenericType;
15189 HasTypeArg;
15190 HasType;
15191 DeclaresMethod;
15192 HasType;
15193 DeclaresMethod;
15194 HasType;
15195 HasParam;
15196 HasBound;
15197 HasTypeParam;
15198 HasGenericType;
15199 HasTypeArg;
15200 HasType;
15201 DeclaresMethod;
15202 HasBound;
15203 HasTypeParam;
15204 HasGenericType;
15205 HasTypeArg;
15206 HasType;
15207 DeclaresMethod;
15208 HasGenericType;
15209 HasTypeArg;
15210 HasType;
15211 HasParam;
15212 HasType;
15213 DeclaresMethod;
15214 HasType;
15215 HasParam;
15216 HasUpperBound;
15217 HasGenericType;
15218 HasTypeArg;
15219 HasType;
15220 DeclaresMethod;
15221 HasType;
15222 DeclaresMethod;
15223 HasType;
15224 HasParam;
15225 HasType;
15226 DeclaresMethod;
15227 HasType;
15228 DeclaresMethod;
15229 HasType;
15230 HasParam;
15231 HasUpperBound;
15232 HasGenericType;
15233 HasTypeArg;
15234 HasType;
15235 DeclaresMethod;
15236 HasType;
15237 DeclaresMethod;
15238 HasType;
15239 HasParam;
15240 HasBound;
15241 HasTypeParam;
15242 HasGenericType;
15243 HasTypeArg;
15244 HasType;
15245 DeclaresMethod;
15246 HasBound;
15247 HasTypeParam;
15248 HasGenericType;
15249 HasTypeArg;
15250 HasType;
15251 DeclaresMethod;
15252 HasGenericType;
15253 HasTypeArg;
15254 HasType;
15255 HasParam;
15256 HasType;
15257 DeclaresMethod;
15258 HasType;
15259 HasParam;
15260 HasUpperBound;
15261 HasGenericType;
15262 HasTypeArg;
15263 HasType;
15264 DeclaresMethod;
15265 HasType;
15266 DeclaresMethod;
15267 HasType;
15268 HasParam;
15269 HasBound;
15270 HasTypeParam;
15271 HasGenericType;
15272 HasTypeArg;
15273 HasType;
15274 DeclaresMethod;
15275 HasBound;
15276 HasTypeParam;
15277 HasGenericType;
15278 HasTypeArg;
15279 HasType;
15280 DeclaresMethod;
15281 HasGenericType;
15282 HasTypeArg;
15283 HasType;
15284 HasParam;
15285 HasType;
15286 DeclaresMethod;
15287 HasType;
15288 HasParam;
15289 HasUpperBound;
15290 HasGenericType;
15291 HasTypeArg;
15292 HasType;
15293 DeclaresMethod;
15294 HasType;
15295 DeclaresMethod;
15296 HasType;
15297 HasParam;
15298 HasType;
15299 DeclaresMethod;
15300 HasType;
15301 DeclaresMethod;
15302 HasType;
15303 HasParam;
15304 HasUpperBound;
15305 HasGenericType;
15306 HasTypeArg;
15307 HasType;
15308 DeclaresMethod;
15309 HasType;
15310 DeclaresMethod;
15311 HasType;
15312 HasParam;
15313 HasBound;
15314 HasTypeParam;
15315 HasGenericType;
15316 HasTypeArg;
15317 HasType;
15318 DeclaresMethod;
15319 HasBound;
15320 HasTypeParam;
15321 HasGenericType;
15322 HasTypeArg;
15323 HasType;
15324 DeclaresMethod;
15325 HasGenericType;
15326 HasTypeArg;
15327 HasType;
15328 HasParam;
15329 HasGenericType;
15330 HasTypeArg;
15331 HasType;
15332 DeclaresMethod;
15333 HasGenericType;
15334 HasTypeArg;
15335 HasType;
15336 DeclaresMethod;
15337 HasType;
15338 HasParam;
15339 HasGenericType;
15340 HasTypeArg;
15341 HasType;
15342 DeclaresMethod;
15343 HasGenericType;
15344 HasTypeArg;
15345 HasType;
15346 DeclaresMethod;
15347 HasType;
15348 HasParam;
15349 HasGenericType;
15350 HasTypeArg;
15351 HasType;
15352 DeclaresMethod;
15353 HasGenericType;
15354 HasTypeArg;
15355 HasType;
15356 DeclaresMethod;
15357 HasType;
15358 HasParam;
15359 HasGenericType;
15360 HasTypeArg;
15361 HasType;
15362 DeclaresMethod;
15363 HasGenericType;
15364 HasTypeArg;
15365 HasType;
15366 DeclaresMethod;
15367 HasType;
15368 HasParam;
15369 HasGenericType;
15370 HasTypeArg;
15371 HasType;
15372 DeclaresMethod;
15373 HasGenericType;
15374 HasTypeArg;
15375 HasType;
15376 DeclaresMethod;
15377 HasType;
15378 HasParam;
15379 HasGenericType;
15380 HasTypeArg;
15381 HasType;
15382 DeclaresMethod;
15383 HasGenericType;
15384 HasTypeArg;
15385 HasType;
15386 DeclaresMethod;
15387 HasType;
15388 HasParam;
15389 HasGenericType;
15390 HasTypeArg;
15391 HasType;
15392 DeclaresMethod;
15393 HasGenericType;
15394 HasTypeArg;
15395 HasType;
15396 DeclaresMethod;
15397 HasType;
15398 HasParam;
15399 HasGenericType;
15400 HasTypeArg;
15401 HasType;
15402 DeclaresMethod;
15403 HasGenericType;
15404 HasTypeArg;
15405 HasType;
15406 DeclaresMethod;
15407 HasType;
15408 HasParam;
15409 HasGenericType;
15410 HasTypeArg;
15411 HasType;
15412 DeclaresMethod;
15413 HasGenericType;
15414 HasTypeArg;
15415 HasType;
15416 DeclaresMethod;
15417 HasType;
15418 HasParam;
15419 HasGenericType;
15420 HasTypeArg;
15421 HasType;
15422 DeclaresMethod;
15423 HasGenericType;
15424 HasTypeArg;
15425 HasType;
15426 DeclaresMethod;
15427 HasType;
15428 HasParam;
15429 HasGenericType;
15430 HasTypeArg;
15431 HasType;
15432 DeclaresMethod;
15433 HasGenericType;
15434 HasTypeArg;
15435 HasType;
15436 DeclaresMethod;
15437 HasType;
15438 HasParam;
15439 HasGenericType;
15440 HasTypeArg;
15441 HasType;
15442 DeclaresMethod;
15443 HasGenericType;
15444 HasTypeArg;
15445 HasType;
15446 DeclaresMethod;
15447 HasType;
15448 HasParam;
15449 HasGenericType;
15450 HasTypeArg;
15451 HasType;
15452 DeclaresMethod;
15453 HasGenericType;
15454 HasTypeArg;
15455 HasType;
15456 DeclaresMethod;
15457 HasType;
15458 HasParam;
15459 HasGenericType;
15460 HasTypeArg;
15461 HasType;
15462 DeclaresMethod;
15463 HasGenericType;
15464 HasTypeArg;
15465 HasType;
15466 DeclaresMethod;
15467 HasType;
15468 HasParam;
15469 HasGenericType;
15470 HasTypeArg;
15471 HasType;
15472 DeclaresMethod;
15473 HasGenericType;
15474 HasTypeArg;
15475 HasType;
15476 DeclaresMethod;
15477 HasType;
15478 HasParam;
15479 HasGenericType;
15480 HasTypeArg;
15481 HasType;
15482 DeclaresMethod;
15483 HasGenericType;
15484 HasTypeArg;
15485 HasType;
15486 DeclaresMethod;
15487 HasType;
15488 HasParam;
15489 HasGenericType;
15490 HasTypeArg;
15491 HasType;
15492 DeclaresMethod;
15493 HasGenericType;
15494 HasTypeArg;
15495 HasType;
15496 DeclaresMethod;
15497 HasType;
15498 HasParam;
15499 HasGenericType;
15500 HasTypeArg;
15501 HasType;
15502 DeclaresMethod;
15503 HasGenericType;
15504 HasTypeArg;
15505 HasType;
15506 DeclaresMethod;
15507 HasType;
15508 HasParam;
15509 HasGenericType;
15510 HasTypeArg;
15511 HasType;
15512 DeclaresMethod;
15513 HasGenericType;
15514 HasTypeArg;
15515 HasType;
15516 DeclaresMethod;
15517 HasType;
15518 HasParam;
15519 Defines 20;
15520 ContainsClassifier;
15521 Imports 9;
15522 Imports 11;
15523 Imports 9;
15524 Imports 9;
15525 Imports 10;
15526 Imports 16;
15527 Imports 18;
15528 Extends;
15529 Implements;
15530 Implements;
15531 Implements;
15532 HasType;
15533 DeclaresField;
15534 HasType;
15535 DeclaresField;
15536 HasType;
15537 DeclaresField;
15538 DeclaresConstructor;
15539 HasType;
15540 HasParam;
15541 HasType;
15542 HasParam;
15543 HasType;
15544 DeclaresMethod;
15545 HasUpperBound;
15546 HasGenericType;
15547 HasTypeArg;
15548 HasType;
15549 DeclaresMethod;
15550 HasTypeParam;
15551 HasType;
15552 DeclaresMethod;
15553 HasType;
15554 HasParam;
15555 HasTypeParam;
15556 HasType;
15557 DeclaresMethod;
15558 HasType;
15559 HasParam;
15560 HasType;
15561 HasParam;
15562 HasType;
15563 DeclaresMethod;
15564 HasType;
15565 DeclaresMethod;
15566 HasType;
15567 HasParam;
15568 HasType;
15569 DeclaresMethod;
15570 HasType;
15571 DeclaresMethod;
15572 HasType;
15573 HasParam;
15574 HasType;
15575 DeclaresMethod;
15576 HasType;
15577 DeclaresMethod;
15578 HasType;
15579 HasParam;
15580 HasType;
15581 DeclaresMethod;
15582 HasType;
15583 HasParam;
15584 Throws;
15585 HasType;
15586 DeclaresMethod;
15587 HasType;
15588 HasParam;
15589 HasType;
15590 HasParam;
15591 Throws;
15592 HasType;
15593 DeclaresMethod;
15594 HasType;
15595 HasParam;
15596 Throws;
15597 Throws;
15598 HasType;
15599 DeclaresMethod;
15600 HasType;
15601 HasParam;
15602 Throws;
15603 Throws;
15604 HasType;
15605 DeclaresMethod;
15606 HasType;
15607 DeclaresMethod;
15608 HasType;
15609 DeclaresMethod;
15610 HasType;
15611 DeclaresMethod;
15612 HasType;
15613 DeclaresMethod;
15614 HasType;
15615 DeclaresMethod;
15616 HasType;
15617 HasParam;
15618 HasType;
15619 DeclaresMethod;
15620 HasType;
15621 DeclaresMethod;
15622 HasType;
15623 HasParam;
15624 HasType;
15625 DeclaresMethod;
15626 HasType;
15627 DeclaresMethod;
15628 HasType;
15629 HasParam;
15630 HasType;
15631 DeclaresMethod;
15632 HasType;
15633 DeclaresMethod;
15634 HasType;
15635 HasParam;
15636 HasType;
15637 DeclaresMethod;
15638 HasType;
15639 DeclaresMethod;
15640 HasType;
15641 HasParam;
15642 HasType;
15643 DeclaresMethod;
15644 HasType;
15645 DeclaresMethod;
15646 HasType;
15647 HasParam;
15648 HasType;
15649 DeclaresMethod;
15650 HasType;
15651 DeclaresMethod;
15652 HasType;
15653 HasParam;
15654 HasType;
15655 DeclaresMethod;
15656 HasType;
15657 DeclaresMethod;
15658 HasType;
15659 HasParam;
15660 HasType;
15661 DeclaresMethod;
15662 HasType;
15663 HasParam;
15664 HasUpperBound;
15665 HasGenericType;
15666 HasTypeArg;
15667 HasType;
15668 DeclaresMethod;
15669 HasType;
15670 DeclaresMethod;
15671 HasType;
15672 HasParam;
15673 HasBound;
15674 HasTypeParam;
15675 HasGenericType;
15676 HasTypeArg;
15677 HasType;
15678 DeclaresMethod;
15679 HasBound;
15680 HasTypeParam;
15681 HasGenericType;
15682 HasTypeArg;
15683 HasType;
15684 DeclaresMethod;
15685 HasGenericType;
15686 HasTypeArg;
15687 HasType;
15688 HasParam;
15689 HasType;
15690 DeclaresMethod;
15691 HasType;
15692 HasParam;
15693 HasUpperBound;
15694 HasGenericType;
15695 HasTypeArg;
15696 HasType;
15697 DeclaresMethod;
15698 HasType;
15699 DeclaresMethod;
15700 HasType;
15701 HasParam;
15702 HasBound;
15703 HasTypeParam;
15704 HasGenericType;
15705 HasTypeArg;
15706 HasType;
15707 DeclaresMethod;
15708 HasBound;
15709 HasTypeParam;
15710 HasGenericType;
15711 HasTypeArg;
15712 HasType;
15713 DeclaresMethod;
15714 HasGenericType;
15715 HasTypeArg;
15716 HasType;
15717 HasParam;
15718 HasGenericType;
15719 HasTypeArg;
15720 HasType;
15721 DeclaresMethod;
15722 HasGenericType;
15723 HasTypeArg;
15724 HasType;
15725 DeclaresMethod;
15726 HasType;
15727 HasParam;
15728 HasGenericType;
15729 HasTypeArg;
15730 HasType;
15731 DeclaresMethod;
15732 HasGenericType;
15733 HasTypeArg;
15734 HasType;
15735 DeclaresMethod;
15736 HasType;
15737 HasParam;
15738 HasGenericType;
15739 HasTypeArg;
15740 HasType;
15741 DeclaresMethod;
15742 HasGenericType;
15743 HasTypeArg;
15744 HasType;
15745 DeclaresMethod;
15746 HasType;
15747 HasParam;
15748 HasGenericType;
15749 HasTypeArg;
15750 HasType;
15751 DeclaresMethod;
15752 HasGenericType;
15753 HasTypeArg;
15754 HasType;
15755 DeclaresMethod;
15756 HasType;
15757 HasParam;
15758 HasGenericType;
15759 HasTypeArg;
15760 HasType;
15761 DeclaresMethod;
15762 HasGenericType;
15763 HasTypeArg;
15764 HasType;
15765 DeclaresMethod;
15766 HasType;
15767 HasParam;
15768 HasGenericType;
15769 HasTypeArg;
15770 HasType;
15771 DeclaresMethod;
15772 HasGenericType;
15773 HasTypeArg;
15774 HasType;
15775 DeclaresMethod;
15776 HasType;
15777 HasParam;
15778 HasGenericType;
15779 HasTypeArg;
15780 HasType;
15781 DeclaresMethod;
15782 HasGenericType;
15783 HasTypeArg;
15784 HasType;
15785 DeclaresMethod;
15786 HasType;
15787 HasParam;
15788 HasGenericType;
15789 HasTypeArg;
15790 HasType;
15791 DeclaresMethod;
15792 HasGenericType;
15793 HasTypeArg;
15794 HasType;
15795 DeclaresMethod;
15796 HasType;
15797 HasParam;
15798 Defines 20;
15799 ContainsClassifier;
15800 Imports 9;
15801 Imports 9;
15802 Imports 9;
15803 Imports 9;
15804 Imports 9;
15805 Imports 10;
15806 Imports 11;
15807 Imports 12;
15808 Imports 18;
15809 Extends;
15810 Implements;
15811 Implements;
15812 DeclaresConstructor;
15813 HasType;
15814 HasParam;
15815 HasType;
15816 HasParam;
15817 HasType;
15818 DeclaresMethod;
15819 HasType;
15820 DeclaresMethod;
15821 HasType;
15822 HasParam;
15823 Throws;
15824 HasType;
15825 DeclaresMethod;
15826 HasType;
15827 HasParam;
15828 HasType;
15829 HasParam;
15830 Throws;
15831 HasType;
15832 DeclaresMethod;
15833 HasType;
15834 HasParam;
15835 Throws;
15836 Throws;
15837 HasType;
15838 DeclaresMethod;
15839 HasType;
15840 HasParam;
15841 Throws;
15842 Throws;
15843 HasType;
15844 DeclaresMethod;
15845 HasType;
15846 DeclaresMethod;
15847 HasType;
15848 DeclaresMethod;
15849 HasType;
15850 HasParam;
15851 HasType;
15852 DeclaresMethod;
15853 HasType;
15854 DeclaresMethod;
15855 Defines 17;
15856 ContainsClassifier;
15857 Imports 9;
15858 Imports 9;
15859 Imports 9;
15860 Imports 9;
15861 Imports 9;
15862 Imports 10;
15863 Imports 12;
15864 Imports 18;
15865 Extends;
15866 Implements;
15867 Implements;
15868 DeclaresConstructor;
15869 HasType;
15870 HasParam;
15871 HasType;
15872 HasParam;
15873 HasType;
15874 DeclaresMethod;
15875 HasType;
15876 DeclaresMethod;
15877 HasType;
15878 HasParam;
15879 Throws;
15880 HasType;
15881 DeclaresMethod;
15882 HasType;
15883 HasParam;
15884 HasType;
15885 HasParam;
15886 Throws;
15887 HasType;
15888 DeclaresMethod;
15889 HasType;
15890 HasParam;
15891 Throws;
15892 Throws;
15893 HasType;
15894 DeclaresMethod;
15895 HasType;
15896 HasParam;
15897 Throws;
15898 Throws;
15899 HasType;
15900 DeclaresMethod;
15901 HasType;
15902 DeclaresMethod;
15903 HasType;
15904 DeclaresMethod;
15905 HasType;
15906 HasParam;
15907 HasType;
15908 DeclaresMethod;
15909 HasType;
15910 DeclaresMethod;
15911 Defines 17;
15912 ContainsClassifier;
15913 Imports 9;
15914 Imports 9;
15915 Imports 9;
15916 Imports 9;
15917 Imports 9;
15918 Imports 10;
15919 Imports 11;
15920 Imports 135;
15921 Imports 18;
15922 Extends;
15923 Implements;
15924 Implements;
15925 Implements;
15926 DeclaresConstructor;
15927 HasType;
15928 HasParam;
15929 HasType;
15930 HasParam;
15931 HasType;
15932 DeclaresMethod;
15933 HasType;
15934 DeclaresMethod;
15935 HasType;
15936 HasParam;
15937 Throws;
15938 HasType;
15939 DeclaresMethod;
15940 HasType;
15941 HasParam;
15942 HasType;
15943 HasParam;
15944 Throws;
15945 HasType;
15946 DeclaresMethod;
15947 HasType;
15948 HasParam;
15949 Throws;
15950 Throws;
15951 HasType;
15952 DeclaresMethod;
15953 HasType;
15954 HasParam;
15955 Throws;
15956 Throws;
15957 HasType;
15958 DeclaresMethod;
15959 HasType;
15960 DeclaresMethod;
15961 HasType;
15962 DeclaresMethod;
15963 HasType;
15964 DeclaresMethod;
15965 HasType;
15966 HasParam;
15967 HasType;
15968 DeclaresMethod;
15969 HasType;
15970 DeclaresMethod;
15971 HasType;
15972 HasParam;
15973 HasType;
15974 DeclaresMethod;
15975 HasType;
15976 DeclaresMethod;
15977 Defines 17;
15978 ContainsClassifier;
15979 Imports 9;
15980 Imports 9;
15981 Imports 9;
15982 Imports 9;
15983 Imports 9;
15984 Imports 10;
15985 Imports 11;
15986 Imports 155;
15987 Imports 18;
15988 Extends;
15989 Implements;
15990 Implements;
15991 Implements;
15992 DeclaresConstructor;
15993 HasType;
15994 HasParam;
15995 HasType;
15996 HasParam;
15997 HasType;
15998 DeclaresMethod;
15999 HasType;
16000 DeclaresMethod;
16001 HasType;
16002 HasParam;
16003 Throws;
16004 HasType;
16005 DeclaresMethod;
16006 HasType;
16007 HasParam;
16008 HasType;
16009 HasParam;
16010 Throws;
16011 HasType;
16012 DeclaresMethod;
16013 HasType;
16014 HasParam;
16015 Throws;
16016 Throws;
16017 HasType;
16018 DeclaresMethod;
16019 HasType;
16020 HasParam;
16021 Throws;
16022 Throws;
16023 HasType;
16024 DeclaresMethod;
16025 HasType;
16026 DeclaresMethod;
16027 HasType;
16028 DeclaresMethod;
16029 HasType;
16030 DeclaresMethod;
16031 HasType;
16032 HasParam;
16033 HasType;
16034 DeclaresMethod;
16035 HasType;
16036 DeclaresMethod;
16037 HasType;
16038 HasParam;
16039 HasType;
16040 DeclaresMethod;
16041 HasType;
16042 DeclaresMethod;
16043 Defines 17;
16044 ContainsClassifier;
16045 Imports 9;
16046 Imports 9;
16047 Imports 9;
16048 Imports 9;
16049 Imports 9;
16050 Imports 10;
16051 Imports 11;
16052 Imports 12;
16053 Imports 18;
16054 Extends;
16055 Implements;
16056 Implements;
16057 Implements;
16058 DeclaresConstructor;
16059 HasType;
16060 HasParam;
16061 HasType;
16062 HasParam;
16063 HasType;
16064 DeclaresMethod;
16065 HasType;
16066 DeclaresMethod;
16067 HasType;
16068 HasParam;
16069 Throws;
16070 HasType;
16071 DeclaresMethod;
16072 HasType;
16073 HasParam;
16074 HasType;
16075 HasParam;
16076 Throws;
16077 HasType;
16078 DeclaresMethod;
16079 HasType;
16080 HasParam;
16081 Throws;
16082 Throws;
16083 HasType;
16084 DeclaresMethod;
16085 HasType;
16086 HasParam;
16087 Throws;
16088 Throws;
16089 HasType;
16090 DeclaresMethod;
16091 HasType;
16092 DeclaresMethod;
16093 HasType;
16094 DeclaresMethod;
16095 HasType;
16096 DeclaresMethod;
16097 HasType;
16098 HasParam;
16099 HasType;
16100 DeclaresMethod;
16101 HasType;
16102 DeclaresMethod;
16103 HasType;
16104 HasParam;
16105 HasType;
16106 DeclaresMethod;
16107 HasType;
16108 DeclaresMethod;
16109 Defines 17;
16110 ContainsClassifier;
16111 Imports 9;
16112 Imports 9;
16113 Imports 9;
16114 Imports 9;
16115 Imports 9;
16116 Imports 10;
16117 Imports 11;
16118 Imports 213;
16119 Imports 18;
16120 Extends;
16121 Implements;
16122 Implements;
16123 Implements;
16124 DeclaresConstructor;
16125 HasType;
16126 HasParam;
16127 HasType;
16128 HasParam;
16129 HasType;
16130 DeclaresMethod;
16131 HasType;
16132 DeclaresMethod;
16133 HasType;
16134 HasParam;
16135 Throws;
16136 HasType;
16137 DeclaresMethod;
16138 HasType;
16139 HasParam;
16140 HasType;
16141 HasParam;
16142 Throws;
16143 HasType;
16144 DeclaresMethod;
16145 HasType;
16146 HasParam;
16147 Throws;
16148 Throws;
16149 HasType;
16150 DeclaresMethod;
16151 HasType;
16152 HasParam;
16153 Throws;
16154 Throws;
16155 HasType;
16156 DeclaresMethod;
16157 HasType;
16158 DeclaresMethod;
16159 HasType;
16160 DeclaresMethod;
16161 HasType;
16162 DeclaresMethod;
16163 HasType;
16164 HasParam;
16165 HasType;
16166 DeclaresMethod;
16167 HasType;
16168 DeclaresMethod;
16169 HasType;
16170 HasParam;
16171 HasType;
16172 DeclaresMethod;
16173 HasType;
16174 DeclaresMethod;
16175 Defines 17;
16176 ContainsClassifier;
16177 Imports 9;
16178 Imports 9;
16179 Imports 9;
16180 Imports 9;
16181 Imports 9;
16182 Imports 10;
16183 Imports 11;
16184 Imports 414;
16185 Imports 18;
16186 Extends;
16187 Implements;
16188 Implements;
16189 Implements;
16190 DeclaresConstructor;
16191 HasType;
16192 HasParam;
16193 HasType;
16194 HasParam;
16195 HasType;
16196 DeclaresMethod;
16197 HasType;
16198 DeclaresMethod;
16199 HasType;
16200 HasParam;
16201 Throws;
16202 HasType;
16203 DeclaresMethod;
16204 HasType;
16205 HasParam;
16206 HasType;
16207 HasParam;
16208 Throws;
16209 HasType;
16210 DeclaresMethod;
16211 HasType;
16212 HasParam;
16213 Throws;
16214 Throws;
16215 HasType;
16216 DeclaresMethod;
16217 HasType;
16218 HasParam;
16219 Throws;
16220 Throws;
16221 HasType;
16222 DeclaresMethod;
16223 HasType;
16224 DeclaresMethod;
16225 HasType;
16226 DeclaresMethod;
16227 HasType;
16228 DeclaresMethod;
16229 HasType;
16230 HasParam;
16231 HasType;
16232 DeclaresMethod;
16233 HasType;
16234 DeclaresMethod;
16235 HasType;
16236 HasParam;
16237 HasType;
16238 DeclaresMethod;
16239 HasType;
16240 DeclaresMethod;
16241 Defines 17;
16242 ContainsClassifier;
16243 Imports 9;
16244 Imports 9;
16245 Imports 9;
16246 Imports 9;
16247 Imports 9;
16248 Imports 10;
16249 Imports 11;
16250 Imports 18;
16251 Extends;
16252 Implements;
16253 Implements;
16254 Implements;
16255 DeclaresConstructor;
16256 HasType;
16257 HasParam;
16258 HasType;
16259 HasParam;
16260 HasType;
16261 DeclaresMethod;
16262 HasType;
16263 DeclaresMethod;
16264 HasType;
16265 HasParam;
16266 Throws;
16267 HasType;
16268 DeclaresMethod;
16269 HasType;
16270 HasParam;
16271 HasType;
16272 HasParam;
16273 Throws;
16274 HasType;
16275 DeclaresMethod;
16276 HasType;
16277 HasParam;
16278 Throws;
16279 Throws;
16280 HasType;
16281 DeclaresMethod;
16282 HasType;
16283 HasParam;
16284 Throws;
16285 Throws;
16286 HasType;
16287 DeclaresMethod;
16288 HasType;
16289 DeclaresMethod;
16290 HasType;
16291 DeclaresMethod;
16292 HasType;
16293 DeclaresMethod;
16294 HasType;
16295 HasParam;
16296 HasType;
16297 DeclaresMethod;
16298 HasType;
16299 DeclaresMethod;
16300 HasType;
16301 HasParam;
16302 HasType;
16303 DeclaresMethod;
16304 HasType;
16305 DeclaresMethod;
16306 Defines 17;
16307 ContainsClassifier;
16308 Imports 9;
16309 Imports 9;
16310 Imports 9;
16311 Imports 9;
16312 Imports 9;
16313 Imports 10;
16314 Imports 11;
16315 Imports 184;
16316 Imports 18;
16317 Extends;
16318 Implements;
16319 Implements;
16320 DeclaresConstructor;
16321 HasType;
16322 HasParam;
16323 HasType;
16324 HasParam;
16325 HasType;
16326 DeclaresMethod;
16327 HasType;
16328 DeclaresMethod;
16329 HasType;
16330 DeclaresMethod;
16331 HasType;
16332 HasParam;
16333 HasType;
16334 DeclaresMethod;
16335 HasType;
16336 HasParam;
16337 Throws;
16338 HasType;
16339 DeclaresMethod;
16340 HasType;
16341 HasParam;
16342 HasType;
16343 HasParam;
16344 Throws;
16345 HasType;
16346 DeclaresMethod;
16347 HasType;
16348 HasParam;
16349 Throws;
16350 Throws;
16351 HasType;
16352 DeclaresMethod;
16353 HasType;
16354 HasParam;
16355 Throws;
16356 Throws;
16357 HasType;
16358 DeclaresMethod;
16359 HasType;
16360 DeclaresMethod;
16361 HasType;
16362 DeclaresMethod;
16363 HasType;
16364 HasParam;
16365 HasType;
16366 DeclaresMethod;
16367 HasType;
16368 DeclaresMethod;
16369 Defines 17;
16370 ContainsClassifier;
16371 Imports 9;
16372 Imports 9;
16373 Imports 9;
16374 Imports 9;
16375 Imports 9;
16376 Imports 10;
16377 Imports 11;
16378 Imports 327;
16379 Imports 18;
16380 Extends;
16381 Implements;
16382 Implements;
16383 DeclaresConstructor;
16384 HasType;
16385 HasParam;
16386 HasType;
16387 HasParam;
16388 HasType;
16389 DeclaresMethod;
16390 HasType;
16391 DeclaresMethod;
16392 HasType;
16393 HasParam;
16394 Throws;
16395 HasType;
16396 DeclaresMethod;
16397 HasType;
16398 HasParam;
16399 HasType;
16400 HasParam;
16401 Throws;
16402 HasType;
16403 DeclaresMethod;
16404 HasType;
16405 HasParam;
16406 Throws;
16407 Throws;
16408 HasType;
16409 DeclaresMethod;
16410 HasType;
16411 HasParam;
16412 Throws;
16413 Throws;
16414 HasType;
16415 DeclaresMethod;
16416 HasType;
16417 DeclaresMethod;
16418 HasType;
16419 DeclaresMethod;
16420 HasType;
16421 HasParam;
16422 HasType;
16423 DeclaresMethod;
16424 HasType;
16425 DeclaresMethod;
16426 Defines 17;
16427 ContainsClassifier;
16428 Imports 9;
16429 Imports 9;
16430 Imports 9;
16431 Imports 9;
16432 Imports 9;
16433 Imports 10;
16434 Imports 11;
16435 Imports 356;
16436 Imports 18;
16437 Extends;
16438 Implements;
16439 Implements;
16440 DeclaresConstructor;
16441 HasType;
16442 HasParam;
16443 HasType;
16444 HasParam;
16445 HasType;
16446 DeclaresMethod;
16447 HasType;
16448 DeclaresMethod;
16449 HasType;
16450 HasParam;
16451 Throws;
16452 HasType;
16453 DeclaresMethod;
16454 HasType;
16455 HasParam;
16456 HasType;
16457 HasParam;
16458 Throws;
16459 HasType;
16460 DeclaresMethod;
16461 HasType;
16462 HasParam;
16463 Throws;
16464 Throws;
16465 HasType;
16466 DeclaresMethod;
16467 HasType;
16468 HasParam;
16469 Throws;
16470 Throws;
16471 HasType;
16472 DeclaresMethod;
16473 HasType;
16474 DeclaresMethod;
16475 HasType;
16476 DeclaresMethod;
16477 HasType;
16478 HasParam;
16479 HasType;
16480 DeclaresMethod;
16481 HasType;
16482 DeclaresMethod;
16483 Defines 17;
16484 ContainsClassifier;
16485 Imports 9;
16486 Imports 9;
16487 Imports 9;
16488 Imports 9;
16489 Imports 9;
16490 Imports 10;
16491 Imports 470;
16492 Imports 11;
16493 Imports 18;
16494 Extends;
16495 Implements;
16496 Implements;
16497 DeclaresConstructor;
16498 HasType;
16499 HasParam;
16500 HasType;
16501 HasParam;
16502 HasType;
16503 DeclaresMethod;
16504 HasType;
16505 DeclaresMethod;
16506 HasType;
16507 HasParam;
16508 Throws;
16509 HasType;
16510 DeclaresMethod;
16511 HasType;
16512 HasParam;
16513 HasType;
16514 HasParam;
16515 Throws;
16516 HasType;
16517 DeclaresMethod;
16518 HasType;
16519 HasParam;
16520 Throws;
16521 Throws;
16522 HasType;
16523 DeclaresMethod;
16524 HasType;
16525 HasParam;
16526 Throws;
16527 Throws;
16528 HasType;
16529 DeclaresMethod;
16530 HasType;
16531 DeclaresMethod;
16532 HasType;
16533 DeclaresMethod;
16534 HasType;
16535 HasParam;
16536 HasType;
16537 DeclaresMethod;
16538 HasType;
16539 DeclaresMethod;
16540 Defines 17;
16541 ContainsClassifier;
16542 Imports 9;
16543 Imports 9;
16544 Imports 9;
16545 Imports 9;
16546 Imports 9;
16547 Imports 10;
16548 Imports 327;
16549 Imports 12;
16550 Imports 18;
16551 Extends;
16552 Implements;
16553 Implements;
16554 DeclaresConstructor;
16555 HasType;
16556 HasParam;
16557 HasType;
16558 HasParam;
16559 HasType;
16560 DeclaresMethod;
16561 HasType;
16562 DeclaresMethod;
16563 HasType;
16564 HasParam;
16565 Throws;
16566 HasType;
16567 DeclaresMethod;
16568 HasType;
16569 HasParam;
16570 HasType;
16571 HasParam;
16572 Throws;
16573 HasType;
16574 DeclaresMethod;
16575 HasType;
16576 HasParam;
16577 Throws;
16578 Throws;
16579 HasType;
16580 DeclaresMethod;
16581 HasType;
16582 HasParam;
16583 Throws;
16584 Throws;
16585 HasType;
16586 DeclaresMethod;
16587 HasType;
16588 DeclaresMethod;
16589 HasType;
16590 DeclaresMethod;
16591 HasType;
16592 HasParam;
16593 HasType;
16594 DeclaresMethod;
16595 HasType;
16596 DeclaresMethod;
16597 Defines 17;
16598 ContainsClassifier;
16599 Imports 9;
16600 Imports 9;
16601 Imports 9;
16602 Imports 9;
16603 Imports 9;
16604 Imports 10;
16605 Imports 11;
16606 Imports 12;
16607 Imports 18;
16608 Extends;
16609 Implements;
16610 Implements;
16611 DeclaresConstructor;
16612 HasType;
16613 HasParam;
16614 HasType;
16615 HasParam;
16616 HasType;
16617 DeclaresMethod;
16618 HasType;
16619 DeclaresMethod;
16620 HasType;
16621 HasParam;
16622 Throws;
16623 HasType;
16624 DeclaresMethod;
16625 HasType;
16626 HasParam;
16627 HasType;
16628 HasParam;
16629 Throws;
16630 HasType;
16631 DeclaresMethod;
16632 HasType;
16633 HasParam;
16634 Throws;
16635 Throws;
16636 HasType;
16637 DeclaresMethod;
16638 HasType;
16639 HasParam;
16640 Throws;
16641 Throws;
16642 HasType;
16643 DeclaresMethod;
16644 HasType;
16645 DeclaresMethod;
16646 HasType;
16647 DeclaresMethod;
16648 HasType;
16649 HasParam;
16650 HasType;
16651 DeclaresMethod;
16652 HasType;
16653 DeclaresMethod;
16654 Defines 17;
16655 ContainsClassifier;
16656 Imports 9;
16657 Imports 9;
16658 Imports 9;
16659 Imports 9;
16660 Imports 9;
16661 Imports 10;
16662 Imports 11;
16663 Imports 120;
16664 Imports 18;
16665 Extends;
16666 Implements;
16667 Implements;
16668 DeclaresConstructor;
16669 HasType;
16670 HasParam;
16671 HasType;
16672 HasParam;
16673 HasType;
16674 DeclaresMethod;
16675 HasType;
16676 DeclaresMethod;
16677 HasType;
16678 HasParam;
16679 Throws;
16680 HasType;
16681 DeclaresMethod;
16682 HasType;
16683 HasParam;
16684 HasType;
16685 HasParam;
16686 Throws;
16687 HasType;
16688 DeclaresMethod;
16689 HasType;
16690 HasParam;
16691 Throws;
16692 Throws;
16693 HasType;
16694 DeclaresMethod;
16695 HasType;
16696 HasParam;
16697 Throws;
16698 Throws;
16699 HasType;
16700 DeclaresMethod;
16701 HasType;
16702 DeclaresMethod;
16703 HasType;
16704 DeclaresMethod;
16705 HasType;
16706 HasParam;
16707 HasType;
16708 DeclaresMethod;
16709 HasType;
16710 DeclaresMethod;
16711 Defines 17;
16712 ContainsClassifier;
16713 Imports 9;
16714 Imports 9;
16715 Imports 9;
16716 Imports 9;
16717 Imports 9;
16718 Imports 10;
16719 Imports 12;
16720 Imports 11;
16721 Imports 18;
16722 Extends;
16723 Implements;
16724 Implements;
16725 DeclaresConstructor;
16726 HasType;
16727 HasParam;
16728 HasType;
16729 HasParam;
16730 HasType;
16731 DeclaresMethod;
16732 HasType;
16733 DeclaresMethod;
16734 HasType;
16735 HasParam;
16736 Throws;
16737 HasType;
16738 DeclaresMethod;
16739 HasType;
16740 HasParam;
16741 HasType;
16742 HasParam;
16743 Throws;
16744 HasType;
16745 DeclaresMethod;
16746 HasType;
16747 HasParam;
16748 Throws;
16749 Throws;
16750 HasType;
16751 DeclaresMethod;
16752 HasType;
16753 HasParam;
16754 Throws;
16755 Throws;
16756 HasType;
16757 DeclaresMethod;
16758 HasType;
16759 DeclaresMethod;
16760 HasType;
16761 DeclaresMethod;
16762 HasType;
16763 HasParam;
16764 HasType;
16765 DeclaresMethod;
16766 HasType;
16767 DeclaresMethod;
16768 Defines 17;
16769 ContainsClassifier;
16770 Imports 9;
16771 Imports 9;
16772 Imports 9;
16773 Imports 9;
16774 Imports 9;
16775 Imports 10;
16776 Imports 11;
16777 Imports 11;
16778 Imports 18;
16779 Extends;
16780 Implements;
16781 Implements;
16782 DeclaresConstructor;
16783 HasType;
16784 HasParam;
16785 HasType;
16786 HasParam;
16787 HasType;
16788 DeclaresMethod;
16789 HasType;
16790 DeclaresMethod;
16791 HasType;
16792 HasParam;
16793 Throws;
16794 HasType;
16795 DeclaresMethod;
16796 HasType;
16797 HasParam;
16798 HasType;
16799 HasParam;
16800 Throws;
16801 HasType;
16802 DeclaresMethod;
16803 HasType;
16804 HasParam;
16805 Throws;
16806 Throws;
16807 HasType;
16808 DeclaresMethod;
16809 HasType;
16810 HasParam;
16811 Throws;
16812 Throws;
16813 HasType;
16814 DeclaresMethod;
16815 HasType;
16816 DeclaresMethod;
16817 HasType;
16818 DeclaresMethod;
16819 HasType;
16820 HasParam;
16821 HasType;
16822 DeclaresMethod;
16823 HasType;
16824 DeclaresMethod;
16825 Defines 17;
16826 ContainsClassifier;
16827 Imports 9;
16828 Imports 9;
16829 Imports 9;
16830 Imports 9;
16831 Imports 9;
16832 Imports 10;
16833 Imports 356;
16834 Imports 11;
16835 Imports 18;
16836 Extends;
16837 Implements;
16838 Implements;
16839 DeclaresConstructor;
16840 HasType;
16841 HasParam;
16842 HasType;
16843 HasParam;
16844 HasType;
16845 DeclaresMethod;
16846 HasType;
16847 DeclaresMethod;
16848 HasType;
16849 HasParam;
16850 Throws;
16851 HasType;
16852 DeclaresMethod;
16853 HasType;
16854 HasParam;
16855 HasType;
16856 HasParam;
16857 Throws;
16858 HasType;
16859 DeclaresMethod;
16860 HasType;
16861 HasParam;
16862 Throws;
16863 Throws;
16864 HasType;
16865 DeclaresMethod;
16866 HasType;
16867 HasParam;
16868 Throws;
16869 Throws;
16870 HasType;
16871 DeclaresMethod;
16872 HasType;
16873 DeclaresMethod;
16874 HasType;
16875 DeclaresMethod;
16876 HasType;
16877 HasParam;
16878 HasType;
16879 DeclaresMethod;
16880 HasType;
16881 DeclaresMethod;
16882 Defines 17;
16883 ContainsClassifier;
16884 Imports 9;
16885 Imports 9;
16886 Imports 9;
16887 Imports 9;
16888 Imports 9;
16889 Imports 10;
16890 Imports 11;
16891 Imports 12;
16892 Imports 18;
16893 Extends;
16894 Implements;
16895 Implements;
16896 DeclaresConstructor;
16897 HasType;
16898 HasParam;
16899 HasType;
16900 HasParam;
16901 HasType;
16902 DeclaresMethod;
16903 HasType;
16904 DeclaresMethod;
16905 HasType;
16906 HasParam;
16907 Throws;
16908 HasType;
16909 DeclaresMethod;
16910 HasType;
16911 HasParam;
16912 HasType;
16913 HasParam;
16914 Throws;
16915 HasType;
16916 DeclaresMethod;
16917 HasType;
16918 HasParam;
16919 Throws;
16920 Throws;
16921 HasType;
16922 DeclaresMethod;
16923 HasType;
16924 HasParam;
16925 Throws;
16926 Throws;
16927 HasType;
16928 DeclaresMethod;
16929 HasType;
16930 DeclaresMethod;
16931 HasType;
16932 DeclaresMethod;
16933 HasType;
16934 HasParam;
16935 HasType;
16936 DeclaresMethod;
16937 HasType;
16938 DeclaresMethod;
16939 Defines 17;
16940 ContainsClassifier;
16941 Imports 9;
16942 Imports 9;
16943 Imports 9;
16944 Imports 9;
16945 Imports 9;
16946 Imports 10;
16947 Imports 11;
16948 Imports 327;
16949 Imports 18;
16950 Extends;
16951 Implements;
16952 Implements;
16953 DeclaresConstructor;
16954 HasType;
16955 HasParam;
16956 HasType;
16957 HasParam;
16958 HasType;
16959 DeclaresMethod;
16960 HasType;
16961 DeclaresMethod;
16962 HasType;
16963 HasParam;
16964 Throws;
16965 HasType;
16966 DeclaresMethod;
16967 HasType;
16968 HasParam;
16969 HasType;
16970 HasParam;
16971 Throws;
16972 HasType;
16973 DeclaresMethod;
16974 HasType;
16975 HasParam;
16976 Throws;
16977 Throws;
16978 HasType;
16979 DeclaresMethod;
16980 HasType;
16981 HasParam;
16982 Throws;
16983 Throws;
16984 HasType;
16985 DeclaresMethod;
16986 HasType;
16987 DeclaresMethod;
16988 HasType;
16989 DeclaresMethod;
16990 HasType;
16991 HasParam;
16992 HasType;
16993 DeclaresMethod;
16994 HasType;
16995 DeclaresMethod;
16996 Defines 17;
16997 ContainsClassifier;
16998 Imports 9;
16999 Imports 9;
17000 Imports 9;
17001 Imports 9;
17002 Imports 9;
17003 Imports 10;
17004 Imports 33;
17005 Imports 184;
17006 Imports 18;
17007 Extends;
17008 Implements;
17009 Implements;
17010 DeclaresConstructor;
17011 HasType;
17012 HasParam;
17013 HasType;
17014 HasParam;
17015 HasType;
17016 DeclaresMethod;
17017 HasType;
17018 DeclaresMethod;
17019 HasType;
17020 DeclaresMethod;
17021 HasType;
17022 HasParam;
17023 HasType;
17024 DeclaresMethod;
17025 HasType;
17026 HasParam;
17027 Throws;
17028 HasType;
17029 DeclaresMethod;
17030 HasType;
17031 HasParam;
17032 HasType;
17033 HasParam;
17034 Throws;
17035 HasType;
17036 DeclaresMethod;
17037 HasType;
17038 HasParam;
17039 Throws;
17040 Throws;
17041 HasType;
17042 DeclaresMethod;
17043 HasType;
17044 HasParam;
17045 Throws;
17046 Throws;
17047 HasType;
17048 DeclaresMethod;
17049 HasType;
17050 DeclaresMethod;
17051 HasType;
17052 DeclaresMethod;
17053 HasType;
17054 HasParam;
17055 HasType;
17056 DeclaresMethod;
17057 HasType;
17058 DeclaresMethod;
17059 Defines 17;
17060 ContainsClassifier;
17061 Imports 9;
17062 Imports 9;
17063 Imports 9;
17064 Imports 9;
17065 Imports 9;
17066 Imports 10;
17067 Imports 11;
17068 Imports 11;
17069 Imports 18;
17070 Extends;
17071 Implements;
17072 Implements;
17073 DeclaresConstructor;
17074 HasType;
17075 HasParam;
17076 HasType;
17077 HasParam;
17078 HasType;
17079 DeclaresMethod;
17080 HasType;
17081 DeclaresMethod;
17082 HasType;
17083 HasParam;
17084 Throws;
17085 HasType;
17086 DeclaresMethod;
17087 HasType;
17088 HasParam;
17089 HasType;
17090 HasParam;
17091 Throws;
17092 HasType;
17093 DeclaresMethod;
17094 HasType;
17095 HasParam;
17096 Throws;
17097 Throws;
17098 HasType;
17099 DeclaresMethod;
17100 HasType;
17101 HasParam;
17102 Throws;
17103 Throws;
17104 HasType;
17105 DeclaresMethod;
17106 HasType;
17107 DeclaresMethod;
17108 HasType;
17109 DeclaresMethod;
17110 HasType;
17111 HasParam;
17112 HasType;
17113 DeclaresMethod;
17114 HasType;
17115 DeclaresMethod;
17116 Defines 22;
17117 ContainsClassifier;
17118 Imports 9;
17119 Imports 11;
17120 Imports 9;
17121 Imports 9;
17122 Imports 10;
17123 Imports 16;
17124 Imports 18;
17125 Extends;
17126 Implements;
17127 Implements;
17128 HasType;
17129 DeclaresField;
17130 HasType;
17131 DeclaresField;
17132 DeclaresConstructor;
17133 HasType;
17134 HasParam;
17135 HasType;
17136 HasParam;
17137 HasType;
17138 DeclaresMethod;
17139 HasUpperBound;
17140 HasGenericType;
17141 HasTypeArg;
17142 HasType;
17143 DeclaresMethod;
17144 HasTypeParam;
17145 HasType;
17146 DeclaresMethod;
17147 HasType;
17148 HasParam;
17149 HasTypeParam;
17150 HasType;
17151 DeclaresMethod;
17152 HasType;
17153 HasParam;
17154 HasType;
17155 HasParam;
17156 HasType;
17157 DeclaresMethod;
17158 HasType;
17159 DeclaresMethod;
17160 HasType;
17161 HasParam;
17162 HasType;
17163 DeclaresMethod;
17164 HasType;
17165 DeclaresMethod;
17166 HasType;
17167 HasParam;
17168 HasType;
17169 DeclaresMethod;
17170 HasType;
17171 HasParam;
17172 Throws;
17173 HasType;
17174 DeclaresMethod;
17175 HasType;
17176 HasParam;
17177 HasType;
17178 HasParam;
17179 Throws;
17180 HasType;
17181 DeclaresMethod;
17182 HasType;
17183 HasParam;
17184 Throws;
17185 Throws;
17186 HasType;
17187 DeclaresMethod;
17188 HasType;
17189 HasParam;
17190 Throws;
17191 Throws;
17192 HasType;
17193 DeclaresMethod;
17194 HasType;
17195 DeclaresMethod;
17196 HasType;
17197 DeclaresMethod;
17198 HasType;
17199 HasParam;
17200 HasType;
17201 DeclaresMethod;
17202 HasType;
17203 DeclaresMethod;
17204 HasType;
17205 HasParam;
17206 HasType;
17207 DeclaresMethod;
17208 HasType;
17209 HasParam;
17210 HasUpperBound;
17211 HasGenericType;
17212 HasTypeArg;
17213 HasType;
17214 DeclaresMethod;
17215 HasType;
17216 DeclaresMethod;
17217 HasType;
17218 HasParam;
17219 HasBound;
17220 HasTypeParam;
17221 HasGenericType;
17222 HasTypeArg;
17223 HasType;
17224 DeclaresMethod;
17225 HasBound;
17226 HasTypeParam;
17227 HasGenericType;
17228 HasTypeArg;
17229 HasType;
17230 DeclaresMethod;
17231 HasGenericType;
17232 HasTypeArg;
17233 HasType;
17234 HasParam;
17235 HasType;
17236 DeclaresMethod;
17237 HasType;
17238 HasParam;
17239 HasUpperBound;
17240 HasGenericType;
17241 HasTypeArg;
17242 HasType;
17243 DeclaresMethod;
17244 HasType;
17245 DeclaresMethod;
17246 HasType;
17247 HasParam;
17248 HasBound;
17249 HasTypeParam;
17250 HasGenericType;
17251 HasTypeArg;
17252 HasType;
17253 DeclaresMethod;
17254 HasBound;
17255 HasTypeParam;
17256 HasGenericType;
17257 HasTypeArg;
17258 HasType;
17259 DeclaresMethod;
17260 HasGenericType;
17261 HasTypeArg;
17262 HasType;
17263 HasParam;
17264 HasGenericType;
17265 HasTypeArg;
17266 HasType;
17267 DeclaresMethod;
17268 HasGenericType;
17269 HasTypeArg;
17270 HasType;
17271 DeclaresMethod;
17272 HasType;
17273 HasParam;
17274 HasGenericType;
17275 HasTypeArg;
17276 HasType;
17277 DeclaresMethod;
17278 HasGenericType;
17279 HasTypeArg;
17280 HasType;
17281 DeclaresMethod;
17282 HasType;
17283 HasParam;
17284 Defines 20;
17285 ContainsClassifier;
17286 Imports 9;
17287 Imports 9;
17288 Imports 9;
17289 Imports 11;
17290 Imports 10;
17291 Imports 16;
17292 Imports 22;
17293 Imports 11;
17294 Imports 11;
17295 Imports 18;
17296 Extends;
17297 Implements;
17298 Implements;
17299 DeclaresConstructor;
17300 HasType;
17301 HasParam;
17302 HasType;
17303 HasParam;
17304 HasType;
17305 HasParam;
17306 HasType;
17307 HasParam;
17308 HasType;
17309 DeclaresMethod;
17310 HasUpperBound;
17311 HasGenericType;
17312 HasTypeArg;
17313 HasType;
17314 DeclaresMethod;
17315 HasTypeParam;
17316 HasType;
17317 DeclaresMethod;
17318 HasType;
17319 HasParam;
17320 HasTypeParam;
17321 HasType;
17322 DeclaresMethod;
17323 HasType;
17324 HasParam;
17325 HasType;
17326 HasParam;
17327 HasType;
17328 DeclaresMethod;
17329 HasType;
17330 HasParam;
17331 Throws;
17332 HasType;
17333 DeclaresMethod;
17334 HasType;
17335 HasParam;
17336 HasType;
17337 HasParam;
17338 Throws;
17339 HasType;
17340 DeclaresMethod;
17341 HasType;
17342 HasParam;
17343 Throws;
17344 Throws;
17345 HasType;
17346 DeclaresMethod;
17347 HasType;
17348 HasParam;
17349 Throws;
17350 Throws;
17351 HasType;
17352 DeclaresMethod;
17353 HasType;
17354 DeclaresMethod;
17355 HasType;
17356 DeclaresMethod;
17357 HasType;
17358 HasParam;
17359 HasType;
17360 DeclaresMethod;
17361 HasType;
17362 DeclaresMethod;
17363 HasType;
17364 DeclaresMethod;
17365 HasType;
17366 DeclaresMethod;
17367 HasType;
17368 DeclaresMethod;
17369 HasType;
17370 DeclaresMethod;
17371 Defines 30;
17372 ContainsClassifier;
17373 Imports 9;
17374 Imports 11;
17375 Imports 9;
17376 Imports 9;
17377 Imports 10;
17378 Imports 16;
17379 Imports 18;
17380 Extends;
17381 Implements;
17382 Implements;
17383 Implements;
17384 HasGenericType;
17385 HasTypeArg;
17386 HasType;
17387 DeclaresField;
17388 HasType;
17389 DeclaresField;
17390 HasType;
17391 DeclaresField;
17392 DeclaresConstructor;
17393 HasType;
17394 HasParam;
17395 HasType;
17396 HasParam;
17397 HasType;
17398 DeclaresMethod;
17399 HasUpperBound;
17400 HasGenericType;
17401 HasTypeArg;
17402 HasType;
17403 DeclaresMethod;
17404 HasTypeParam;
17405 HasType;
17406 DeclaresMethod;
17407 HasType;
17408 HasParam;
17409 HasTypeParam;
17410 HasType;
17411 DeclaresMethod;
17412 HasType;
17413 HasParam;
17414 HasType;
17415 HasParam;
17416 HasGenericType;
17417 HasTypeArg;
17418 HasType;
17419 DeclaresMethod;
17420 HasType;
17421 DeclaresMethod;
17422 HasGenericType;
17423 HasTypeArg;
17424 HasType;
17425 HasParam;
17426 HasType;
17427 DeclaresMethod;
17428 HasType;
17429 DeclaresMethod;
17430 HasType;
17431 HasParam;
17432 HasType;
17433 DeclaresMethod;
17434 HasType;
17435 DeclaresMethod;
17436 HasType;
17437 HasParam;
17438 HasType;
17439 DeclaresMethod;
17440 HasType;
17441 HasParam;
17442 Throws;
17443 HasType;
17444 DeclaresMethod;
17445 HasType;
17446 HasParam;
17447 HasType;
17448 HasParam;
17449 Throws;
17450 HasType;
17451 DeclaresMethod;
17452 HasType;
17453 HasParam;
17454 Throws;
17455 Throws;
17456 HasType;
17457 DeclaresMethod;
17458 HasType;
17459 HasParam;
17460 Throws;
17461 Throws;
17462 HasType;
17463 DeclaresMethod;
17464 HasType;
17465 DeclaresMethod;
17466 HasType;
17467 DeclaresMethod;
17468 HasType;
17469 DeclaresMethod;
17470 HasType;
17471 DeclaresMethod;
17472 HasType;
17473 DeclaresMethod;
17474 HasType;
17475 DeclaresMethod;
17476 HasType;
17477 DeclaresMethod;
17478 HasType;
17479 DeclaresMethod;
17480 HasType;
17481 DeclaresMethod;
17482 HasType;
17483 HasParam;
17484 HasType;
17485 DeclaresMethod;
17486 HasType;
17487 DeclaresMethod;
17488 HasType;
17489 HasParam;
17490 HasType;
17491 DeclaresMethod;
17492 HasType;
17493 DeclaresMethod;
17494 HasType;
17495 HasParam;
17496 HasType;
17497 DeclaresMethod;
17498 HasType;
17499 DeclaresMethod;
17500 HasType;
17501 HasParam;
17502 HasType;
17503 DeclaresMethod;
17504 HasType;
17505 DeclaresMethod;
17506 HasType;
17507 HasParam;
17508 HasType;
17509 DeclaresMethod;
17510 HasType;
17511 DeclaresMethod;
17512 HasType;
17513 HasParam;
17514 HasType;
17515 DeclaresMethod;
17516 HasType;
17517 DeclaresMethod;
17518 HasType;
17519 HasParam;
17520 HasType;
17521 DeclaresMethod;
17522 HasType;
17523 DeclaresMethod;
17524 HasType;
17525 HasParam;
17526 HasType;
17527 DeclaresMethod;
17528 HasType;
17529 DeclaresMethod;
17530 HasType;
17531 HasParam;
17532 HasType;
17533 DeclaresMethod;
17534 HasType;
17535 DeclaresMethod;
17536 HasType;
17537 HasParam;
17538 HasType;
17539 DeclaresMethod;
17540 HasType;
17541 DeclaresMethod;
17542 HasType;
17543 HasParam;
17544 HasType;
17545 DeclaresMethod;
17546 HasType;
17547 DeclaresMethod;
17548 HasType;
17549 HasParam;
17550 HasType;
17551 DeclaresMethod;
17552 HasType;
17553 DeclaresMethod;
17554 HasType;
17555 HasParam;
17556 HasType;
17557 DeclaresMethod;
17558 HasType;
17559 DeclaresMethod;
17560 HasType;
17561 HasParam;
17562 HasType;
17563 DeclaresMethod;
17564 HasType;
17565 DeclaresMethod;
17566 HasType;
17567 HasParam;
17568 HasType;
17569 DeclaresMethod;
17570 HasType;
17571 DeclaresMethod;
17572 HasType;
17573 HasParam;
17574 HasType;
17575 DeclaresMethod;
17576 HasType;
17577 DeclaresMethod;
17578 HasType;
17579 HasParam;
17580 HasType;
17581 DeclaresMethod;
17582 HasType;
17583 DeclaresMethod;
17584 HasType;
17585 HasParam;
17586 HasType;
17587 DeclaresMethod;
17588 HasType;
17589 HasParam;
17590 HasUpperBound;
17591 HasGenericType;
17592 HasTypeArg;
17593 HasType;
17594 DeclaresMethod;
17595 HasType;
17596 DeclaresMethod;
17597 HasType;
17598 HasParam;
17599 HasBound;
17600 HasTypeParam;
17601 HasGenericType;
17602 HasTypeArg;
17603 HasType;
17604 DeclaresMethod;
17605 HasBound;
17606 HasTypeParam;
17607 HasGenericType;
17608 HasTypeArg;
17609 HasType;
17610 DeclaresMethod;
17611 HasGenericType;
17612 HasTypeArg;
17613 HasType;
17614 HasParam;
17615 HasType;
17616 DeclaresMethod;
17617 HasType;
17618 HasParam;
17619 HasUpperBound;
17620 HasGenericType;
17621 HasTypeArg;
17622 HasType;
17623 DeclaresMethod;
17624 HasType;
17625 DeclaresMethod;
17626 HasType;
17627 HasParam;
17628 HasBound;
17629 HasTypeParam;
17630 HasGenericType;
17631 HasTypeArg;
17632 HasType;
17633 DeclaresMethod;
17634 HasBound;
17635 HasTypeParam;
17636 HasGenericType;
17637 HasTypeArg;
17638 HasType;
17639 DeclaresMethod;
17640 HasGenericType;
17641 HasTypeArg;
17642 HasType;
17643 HasParam;
17644 HasType;
17645 DeclaresMethod;
17646 HasType;
17647 HasParam;
17648 HasUpperBound;
17649 HasGenericType;
17650 HasTypeArg;
17651 HasType;
17652 DeclaresMethod;
17653 HasType;
17654 DeclaresMethod;
17655 HasType;
17656 HasParam;
17657 HasBound;
17658 HasTypeParam;
17659 HasGenericType;
17660 HasTypeArg;
17661 HasType;
17662 DeclaresMethod;
17663 HasBound;
17664 HasTypeParam;
17665 HasGenericType;
17666 HasTypeArg;
17667 HasType;
17668 DeclaresMethod;
17669 HasGenericType;
17670 HasTypeArg;
17671 HasType;
17672 HasParam;
17673 HasType;
17674 DeclaresMethod;
17675 HasType;
17676 HasParam;
17677 HasUpperBound;
17678 HasGenericType;
17679 HasTypeArg;
17680 HasType;
17681 DeclaresMethod;
17682 HasType;
17683 DeclaresMethod;
17684 HasType;
17685 HasParam;
17686 HasType;
17687 DeclaresMethod;
17688 HasType;
17689 DeclaresMethod;
17690 HasType;
17691 HasParam;
17692 HasUpperBound;
17693 HasGenericType;
17694 HasTypeArg;
17695 HasType;
17696 DeclaresMethod;
17697 HasType;
17698 DeclaresMethod;
17699 HasType;
17700 HasParam;
17701 HasBound;
17702 HasTypeParam;
17703 HasGenericType;
17704 HasTypeArg;
17705 HasType;
17706 DeclaresMethod;
17707 HasBound;
17708 HasTypeParam;
17709 HasGenericType;
17710 HasTypeArg;
17711 HasType;
17712 DeclaresMethod;
17713 HasGenericType;
17714 HasTypeArg;
17715 HasType;
17716 HasParam;
17717 HasType;
17718 DeclaresMethod;
17719 HasType;
17720 HasParam;
17721 HasUpperBound;
17722 HasGenericType;
17723 HasTypeArg;
17724 HasType;
17725 DeclaresMethod;
17726 HasType;
17727 DeclaresMethod;
17728 HasType;
17729 HasParam;
17730 HasBound;
17731 HasTypeParam;
17732 HasGenericType;
17733 HasTypeArg;
17734 HasType;
17735 DeclaresMethod;
17736 HasBound;
17737 HasTypeParam;
17738 HasGenericType;
17739 HasTypeArg;
17740 HasType;
17741 DeclaresMethod;
17742 HasGenericType;
17743 HasTypeArg;
17744 HasType;
17745 HasParam;
17746 HasType;
17747 DeclaresMethod;
17748 HasType;
17749 HasParam;
17750 HasUpperBound;
17751 HasGenericType;
17752 HasTypeArg;
17753 HasType;
17754 DeclaresMethod;
17755 HasType;
17756 DeclaresMethod;
17757 HasType;
17758 HasParam;
17759 HasBound;
17760 HasTypeParam;
17761 HasGenericType;
17762 HasTypeArg;
17763 HasType;
17764 DeclaresMethod;
17765 HasBound;
17766 HasTypeParam;
17767 HasGenericType;
17768 HasTypeArg;
17769 HasType;
17770 DeclaresMethod;
17771 HasGenericType;
17772 HasTypeArg;
17773 HasType;
17774 HasParam;
17775 HasType;
17776 DeclaresMethod;
17777 HasType;
17778 HasParam;
17779 HasUpperBound;
17780 HasGenericType;
17781 HasTypeArg;
17782 HasType;
17783 DeclaresMethod;
17784 HasType;
17785 DeclaresMethod;
17786 HasType;
17787 HasParam;
17788 HasBound;
17789 HasTypeParam;
17790 HasGenericType;
17791 HasTypeArg;
17792 HasType;
17793 DeclaresMethod;
17794 HasBound;
17795 HasTypeParam;
17796 HasGenericType;
17797 HasTypeArg;
17798 HasType;
17799 DeclaresMethod;
17800 HasGenericType;
17801 HasTypeArg;
17802 HasType;
17803 HasParam;
17804 HasType;
17805 DeclaresMethod;
17806 HasType;
17807 HasParam;
17808 HasUpperBound;
17809 HasGenericType;
17810 HasTypeArg;
17811 HasType;
17812 DeclaresMethod;
17813 HasType;
17814 DeclaresMethod;
17815 HasType;
17816 HasParam;
17817 HasBound;
17818 HasTypeParam;
17819 HasGenericType;
17820 HasTypeArg;
17821 HasType;
17822 DeclaresMethod;
17823 HasBound;
17824 HasTypeParam;
17825 HasGenericType;
17826 HasTypeArg;
17827 HasType;
17828 DeclaresMethod;
17829 HasGenericType;
17830 HasTypeArg;
17831 HasType;
17832 HasParam;
17833 HasType;
17834 DeclaresMethod;
17835 HasType;
17836 HasParam;
17837 HasUpperBound;
17838 HasGenericType;
17839 HasTypeArg;
17840 HasType;
17841 DeclaresMethod;
17842 HasType;
17843 DeclaresMethod;
17844 HasType;
17845 HasParam;
17846 HasBound;
17847 HasTypeParam;
17848 HasGenericType;
17849 HasTypeArg;
17850 HasType;
17851 DeclaresMethod;
17852 HasBound;
17853 HasTypeParam;
17854 HasGenericType;
17855 HasTypeArg;
17856 HasType;
17857 DeclaresMethod;
17858 HasGenericType;
17859 HasTypeArg;
17860 HasType;
17861 HasParam;
17862 HasType;
17863 DeclaresMethod;
17864 HasType;
17865 HasParam;
17866 HasUpperBound;
17867 HasGenericType;
17868 HasTypeArg;
17869 HasType;
17870 DeclaresMethod;
17871 HasType;
17872 DeclaresMethod;
17873 HasType;
17874 HasParam;
17875 HasBound;
17876 HasTypeParam;
17877 HasGenericType;
17878 HasTypeArg;
17879 HasType;
17880 DeclaresMethod;
17881 HasBound;
17882 HasTypeParam;
17883 HasGenericType;
17884 HasTypeArg;
17885 HasType;
17886 DeclaresMethod;
17887 HasGenericType;
17888 HasTypeArg;
17889 HasType;
17890 HasParam;
17891 HasType;
17892 DeclaresMethod;
17893 HasType;
17894 HasParam;
17895 HasUpperBound;
17896 HasGenericType;
17897 HasTypeArg;
17898 HasType;
17899 DeclaresMethod;
17900 HasType;
17901 DeclaresMethod;
17902 HasType;
17903 HasParam;
17904 HasType;
17905 DeclaresMethod;
17906 HasType;
17907 DeclaresMethod;
17908 HasType;
17909 HasParam;
17910 HasUpperBound;
17911 HasGenericType;
17912 HasTypeArg;
17913 HasType;
17914 DeclaresMethod;
17915 HasType;
17916 DeclaresMethod;
17917 HasType;
17918 HasParam;
17919 HasBound;
17920 HasTypeParam;
17921 HasGenericType;
17922 HasTypeArg;
17923 HasType;
17924 DeclaresMethod;
17925 HasBound;
17926 HasTypeParam;
17927 HasGenericType;
17928 HasTypeArg;
17929 HasType;
17930 DeclaresMethod;
17931 HasGenericType;
17932 HasTypeArg;
17933 HasType;
17934 HasParam;
17935 HasGenericType;
17936 HasTypeArg;
17937 HasType;
17938 DeclaresMethod;
17939 HasGenericType;
17940 HasTypeArg;
17941 HasType;
17942 DeclaresMethod;
17943 HasType;
17944 HasParam;
17945 HasGenericType;
17946 HasTypeArg;
17947 HasType;
17948 DeclaresMethod;
17949 HasGenericType;
17950 HasTypeArg;
17951 HasType;
17952 DeclaresMethod;
17953 HasType;
17954 HasParam;
17955 HasGenericType;
17956 HasTypeArg;
17957 HasType;
17958 DeclaresMethod;
17959 HasGenericType;
17960 HasTypeArg;
17961 HasType;
17962 DeclaresMethod;
17963 HasType;
17964 HasParam;
17965 HasGenericType;
17966 HasTypeArg;
17967 HasType;
17968 DeclaresMethod;
17969 HasGenericType;
17970 HasTypeArg;
17971 HasType;
17972 DeclaresMethod;
17973 HasType;
17974 HasParam;
17975 HasGenericType;
17976 HasTypeArg;
17977 HasType;
17978 DeclaresMethod;
17979 HasGenericType;
17980 HasTypeArg;
17981 HasType;
17982 DeclaresMethod;
17983 HasType;
17984 HasParam;
17985 HasGenericType;
17986 HasTypeArg;
17987 HasType;
17988 DeclaresMethod;
17989 HasGenericType;
17990 HasTypeArg;
17991 HasType;
17992 DeclaresMethod;
17993 HasType;
17994 HasParam;
17995 HasGenericType;
17996 HasTypeArg;
17997 HasType;
17998 DeclaresMethod;
17999 HasGenericType;
18000 HasTypeArg;
18001 HasType;
18002 DeclaresMethod;
18003 HasType;
18004 HasParam;
18005 HasGenericType;
18006 HasTypeArg;
18007 HasType;
18008 DeclaresMethod;
18009 HasGenericType;
18010 HasTypeArg;
18011 HasType;
18012 DeclaresMethod;
18013 HasType;
18014 HasParam;
18015 HasGenericType;
18016 HasTypeArg;
18017 HasType;
18018 DeclaresMethod;
18019 HasGenericType;
18020 HasTypeArg;
18021 HasType;
18022 DeclaresMethod;
18023 HasType;
18024 HasParam;
18025 HasGenericType;
18026 HasTypeArg;
18027 HasType;
18028 DeclaresMethod;
18029 HasGenericType;
18030 HasTypeArg;
18031 HasType;
18032 DeclaresMethod;
18033 HasType;
18034 HasParam;
18035 HasGenericType;
18036 HasTypeArg;
18037 HasType;
18038 DeclaresMethod;
18039 HasGenericType;
18040 HasTypeArg;
18041 HasType;
18042 DeclaresMethod;
18043 HasType;
18044 HasParam;
18045 HasGenericType;
18046 HasTypeArg;
18047 HasType;
18048 DeclaresMethod;
18049 HasGenericType;
18050 HasTypeArg;
18051 HasType;
18052 DeclaresMethod;
18053 HasType;
18054 HasParam;
18055 HasGenericType;
18056 HasTypeArg;
18057 HasType;
18058 DeclaresMethod;
18059 HasGenericType;
18060 HasTypeArg;
18061 HasType;
18062 DeclaresMethod;
18063 HasType;
18064 HasParam;
18065 HasGenericType;
18066 HasTypeArg;
18067 HasType;
18068 DeclaresMethod;
18069 HasGenericType;
18070 HasTypeArg;
18071 HasType;
18072 DeclaresMethod;
18073 HasType;
18074 HasParam;
18075 HasGenericType;
18076 HasTypeArg;
18077 HasType;
18078 DeclaresMethod;
18079 HasGenericType;
18080 HasTypeArg;
18081 HasType;
18082 DeclaresMethod;
18083 HasType;
18084 HasParam;
18085 HasGenericType;
18086 HasTypeArg;
18087 HasType;
18088 DeclaresMethod;
18089 HasGenericType;
18090 HasTypeArg;
18091 HasType;
18092 DeclaresMethod;
18093 HasType;
18094 HasParam;
18095 HasGenericType;
18096 HasTypeArg;
18097 HasType;
18098 DeclaresMethod;
18099 HasGenericType;
18100 HasTypeArg;
18101 HasType;
18102 DeclaresMethod;
18103 HasType;
18104 HasParam;
18105 HasGenericType;
18106 HasTypeArg;
18107 HasType;
18108 DeclaresMethod;
18109 HasGenericType;
18110 HasTypeArg;
18111 HasType;
18112 DeclaresMethod;
18113 HasType;
18114 HasParam;
18115 Defines 20;
18116 ContainsClassifier;
18117 Imports 9;
18118 Imports 11;
18119 Imports 9;
18120 Imports 9;
18121 Imports 10;
18122 Imports 16;
18123 Imports 18;
18124 Extends;
18125 Implements;
18126 Implements;
18127 Implements;
18128 HasType;
18129 DeclaresField;
18130 HasType;
18131 DeclaresField;
18132 DeclaresConstructor;
18133 HasType;
18134 HasParam;
18135 HasType;
18136 HasParam;
18137 HasType;
18138 DeclaresMethod;
18139 HasUpperBound;
18140 HasGenericType;
18141 HasTypeArg;
18142 HasType;
18143 DeclaresMethod;
18144 HasTypeParam;
18145 HasType;
18146 DeclaresMethod;
18147 HasType;
18148 HasParam;
18149 HasTypeParam;
18150 HasType;
18151 DeclaresMethod;
18152 HasType;
18153 HasParam;
18154 HasType;
18155 HasParam;
18156 HasType;
18157 DeclaresMethod;
18158 HasType;
18159 DeclaresMethod;
18160 HasType;
18161 HasParam;
18162 HasType;
18163 DeclaresMethod;
18164 HasType;
18165 DeclaresMethod;
18166 HasType;
18167 HasParam;
18168 HasType;
18169 DeclaresMethod;
18170 HasType;
18171 HasParam;
18172 Throws;
18173 HasType;
18174 DeclaresMethod;
18175 HasType;
18176 HasParam;
18177 HasType;
18178 HasParam;
18179 Throws;
18180 HasType;
18181 DeclaresMethod;
18182 HasType;
18183 HasParam;
18184 Throws;
18185 Throws;
18186 HasType;
18187 DeclaresMethod;
18188 HasType;
18189 HasParam;
18190 Throws;
18191 Throws;
18192 HasType;
18193 DeclaresMethod;
18194 HasType;
18195 DeclaresMethod;
18196 HasType;
18197 DeclaresMethod;
18198 HasType;
18199 DeclaresMethod;
18200 HasType;
18201 DeclaresMethod;
18202 HasType;
18203 DeclaresMethod;
18204 HasType;
18205 HasParam;
18206 HasType;
18207 DeclaresMethod;
18208 HasType;
18209 DeclaresMethod;
18210 HasType;
18211 HasParam;
18212 HasType;
18213 DeclaresMethod;
18214 HasType;
18215 DeclaresMethod;
18216 HasType;
18217 HasParam;
18218 HasType;
18219 DeclaresMethod;
18220 HasType;
18221 DeclaresMethod;
18222 HasType;
18223 HasParam;
18224 HasType;
18225 DeclaresMethod;
18226 HasType;
18227 DeclaresMethod;
18228 HasType;
18229 HasParam;
18230 HasType;
18231 DeclaresMethod;
18232 HasType;
18233 DeclaresMethod;
18234 HasType;
18235 HasParam;
18236 HasType;
18237 DeclaresMethod;
18238 HasType;
18239 DeclaresMethod;
18240 HasType;
18241 HasParam;
18242 HasType;
18243 DeclaresMethod;
18244 HasType;
18245 DeclaresMethod;
18246 HasType;
18247 HasParam;
18248 HasType;
18249 DeclaresMethod;
18250 HasType;
18251 HasParam;
18252 HasUpperBound;
18253 HasGenericType;
18254 HasTypeArg;
18255 HasType;
18256 DeclaresMethod;
18257 HasType;
18258 DeclaresMethod;
18259 HasType;
18260 HasParam;
18261 HasBound;
18262 HasTypeParam;
18263 HasGenericType;
18264 HasTypeArg;
18265 HasType;
18266 DeclaresMethod;
18267 HasBound;
18268 HasTypeParam;
18269 HasGenericType;
18270 HasTypeArg;
18271 HasType;
18272 DeclaresMethod;
18273 HasGenericType;
18274 HasTypeArg;
18275 HasType;
18276 HasParam;
18277 HasType;
18278 DeclaresMethod;
18279 HasType;
18280 HasParam;
18281 HasUpperBound;
18282 HasGenericType;
18283 HasTypeArg;
18284 HasType;
18285 DeclaresMethod;
18286 HasType;
18287 DeclaresMethod;
18288 HasType;
18289 HasParam;
18290 HasType;
18291 DeclaresMethod;
18292 HasType;
18293 DeclaresMethod;
18294 HasType;
18295 HasParam;
18296 HasUpperBound;
18297 HasGenericType;
18298 HasTypeArg;
18299 HasType;
18300 DeclaresMethod;
18301 HasType;
18302 DeclaresMethod;
18303 HasType;
18304 HasParam;
18305 HasBound;
18306 HasTypeParam;
18307 HasGenericType;
18308 HasTypeArg;
18309 HasType;
18310 DeclaresMethod;
18311 HasBound;
18312 HasTypeParam;
18313 HasGenericType;
18314 HasTypeArg;
18315 HasType;
18316 DeclaresMethod;
18317 HasGenericType;
18318 HasTypeArg;
18319 HasType;
18320 HasParam;
18321 HasType;
18322 DeclaresMethod;
18323 HasType;
18324 HasParam;
18325 HasUpperBound;
18326 HasGenericType;
18327 HasTypeArg;
18328 HasType;
18329 DeclaresMethod;
18330 HasType;
18331 DeclaresMethod;
18332 HasType;
18333 HasParam;
18334 HasType;
18335 DeclaresMethod;
18336 HasGenericType;
18337 HasTypeArg;
18338 HasType;
18339 DeclaresMethod;
18340 HasGenericType;
18341 HasTypeArg;
18342 HasType;
18343 DeclaresMethod;
18344 HasType;
18345 HasParam;
18346 HasGenericType;
18347 HasTypeArg;
18348 HasType;
18349 DeclaresMethod;
18350 HasGenericType;
18351 HasTypeArg;
18352 HasType;
18353 DeclaresMethod;
18354 HasType;
18355 HasParam;
18356 HasGenericType;
18357 HasTypeArg;
18358 HasType;
18359 DeclaresMethod;
18360 HasGenericType;
18361 HasTypeArg;
18362 HasType;
18363 DeclaresMethod;
18364 HasType;
18365 HasParam;
18366 HasGenericType;
18367 HasTypeArg;
18368 HasType;
18369 DeclaresMethod;
18370 HasGenericType;
18371 HasTypeArg;
18372 HasType;
18373 DeclaresMethod;
18374 HasType;
18375 HasParam;
18376 HasGenericType;
18377 HasTypeArg;
18378 HasType;
18379 DeclaresMethod;
18380 HasGenericType;
18381 HasTypeArg;
18382 HasType;
18383 DeclaresMethod;
18384 HasType;
18385 HasParam;
18386 HasGenericType;
18387 HasTypeArg;
18388 HasType;
18389 DeclaresMethod;
18390 HasGenericType;
18391 HasTypeArg;
18392 HasType;
18393 DeclaresMethod;
18394 HasType;
18395 HasParam;
18396 HasGenericType;
18397 HasTypeArg;
18398 HasType;
18399 DeclaresMethod;
18400 HasGenericType;
18401 HasTypeArg;
18402 HasType;
18403 DeclaresMethod;
18404 HasType;
18405 HasParam;
18406 HasGenericType;
18407 HasTypeArg;
18408 HasType;
18409 DeclaresMethod;
18410 HasGenericType;
18411 HasTypeArg;
18412 HasType;
18413 DeclaresMethod;
18414 HasType;
18415 HasParam;
18416 Defines 20;
18417 ContainsClassifier;
